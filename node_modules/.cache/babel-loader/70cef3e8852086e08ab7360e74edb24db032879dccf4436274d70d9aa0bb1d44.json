{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruhan\\\\Documents\\\\gofood\\\\mernapp\\\\src\\\\screens\\\\Login.js\",\n  _s = $RefreshSig$();\n// // // import React, { useState } from 'react'\n// // // import Navbar from '../components/Navbar';\n// // // import { useNavigate, Link } from 'react-router-dom'\n// // // export default function Login() {\n\n// // //   const [credentials, setCredentials] = useState({ email: \"\", password: \"\"});\n// // //   let navigate = useNavigate();\n\n// // //   const handleSubmit = async (e) => {\n// // //     e.preventDefault();\n// // //     console.log(JSON.stringify({ email: credentials.email, password: credentials.password}));\n// // //     const response = await fetch(\"http://localhost:5000/api/loginuser\", {\n// // //       method: 'POST',\n// // //       headers: {\n// // //         'Content-Type': 'application/json'\n// // //       },\n// // //       body: JSON.stringify({ email: credentials.email, password: credentials.password })\n// // //     });\n// // //     const json = await response.json();\n// // //     console.log(json);\n// // //     if (!json.success) {\n// // //       alert(\"Enter valid Credentials\");\n// // //     } else {\n// // //       // Navigate to login or another page upon successful signup\n// // //       localStorage.setItem(\"authToken\",json.authToken);\n// // //       console.log(localStorage.getItem(\"authToken\"));\n\n// // //       navigate(\"/\");\n// // //     }\n// // //   }\n\n// // //   const onChange = (e) => {\n// // //     setCredentials({ ...credentials, [e.target.name]: e.target.value });\n// // //   }\n// // //   return (\n// // //     <div style={{backgroundImage: 'url(\"https://images.pexels.com/photos/326278/pexels-photo-326278.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")', height: '100vh', backgroundSize: 'cover' }}>\n// // //       <div>\n// // //         <Navbar />\n// // //       </div>\n// // //       <div className='container'>\n// // //         <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n// // //           <div className=\"m-3\">\n// // //             <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\n// // //             <input type=\"email\" className=\"form-control\" name='email' value={credentials.email} onChange={onChange} aria-describedby=\"emailHelp\" />\n// // //             <div id=\"emailHelp\" className=\"form-text\">We'll never share your email with anyone.</div>\n// // //           </div>\n// // //           <div className=\"m-3\">\n// // //             <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\n// // //             <input type=\"password\" className=\"form-control\" value={credentials.password} onChange={onChange} name='password' />\n// // //           </div>\n// // //           <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n// // //           <Link to=\"/signup\" className=\"m-3 mx-1 btn btn-danger\">I'am a user</Link>\n// // //         </form>\n\n// // //       </div>\n// // //     </div>\n// // //   )\n// // // }\n\n// // // // , 'Accept': 'application/json',\n// // // //         'Access-Control-Allow-Origin': 'http://localhost:3000/login', 'Access-Control-Allow-Credentials': 'true',\n// // // //         \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\",'Access-Control-Allow-Methods': 'PUT, POST, GET, DELETE, OPTIONS'\n\n// // import React, { useState } from 'react';\n// // import Navbar from '../components/Navbar';\n// // import { useNavigate, Link } from 'react-router-dom';\n\n// // export default function Login() {\n// //   const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\n// //   const [otp, setOtp] = useState(\"\");\n// //   const [otpRequested, setOtpRequested] = useState(false);\n// //   let navigate = useNavigate();\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n\n// //     const response = await fetch(\"http://localhost:5000/api/loginuser\", {\n// //       method: 'POST',\n// //       headers: {\n// //         'Content-Type': 'application/json'\n// //       },\n// //       body: JSON.stringify({ email: credentials.email, password: credentials.password })\n// //     });\n\n// //     const json = await response.json();\n// //     if (!json.success) {\n// //       alert(\"Enter valid Credentials\");\n// //     } else {\n// //       localStorage.setItem(\"authToken\", json.authToken);\n\n// //       // Request OTP\n// //       setOtpRequested(true);\n// //     }\n// //   };\n\n// //   const handleOtpSubmit = async () => {\n// //     const response = await fetch(\"http://localhost:5000/api/validateotp\", {\n// //       method: 'POST',\n// //       headers: {\n// //         'Content-Type': 'application/json'\n// //       },\n// //       body: JSON.stringify({ email: credentials.email, otp })\n// //     });\n\n// //     const json = await response.json();\n// //     if (json.success) {\n// //       navigate(\"/\");\n// //     } else {\n// //       alert(\"Invalid OTP or OTP expired\");\n// //     }\n// //   };\n\n// //   const onChange = (e) => {\n// //     setCredentials({ ...credentials, [e.target.name]: e.target.value });\n// //   };\n\n// //   return (\n// //     <div style={{backgroundImage: 'url(\"https://images.pexels.com/photos/326278/pexels-photo-326278.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")', height: '100vh', backgroundSize: 'cover' }}>\n// //       <div>\n// //         <Navbar />\n// //       </div>\n// //       <div className='container'>\n// //         {!otpRequested ? (\n// //           <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n// //             <div className=\"m-3\">\n// //               <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\n// //               <input type=\"email\" className=\"form-control\" name='email' value={credentials.email} onChange={onChange} aria-describedby=\"emailHelp\" />\n// //               <div id=\"emailHelp\" className=\"form-text\">We'll never share your email with anyone.</div>\n// //             </div>\n// //             <div className=\"m-3\">\n// //               <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\n// //               <input type=\"password\" className=\"form-control\" value={credentials.password} onChange={onChange} name='password' />\n// //             </div>\n// //             <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n// //             <Link to=\"/signup\" className=\"m-3 mx-1 btn btn-danger\">I'am a user</Link>\n// //           </form>\n// //         ) : (\n// //           <div className='w-50 m-auto mt-5 border bg-dark border-success rounded'>\n// //             <div className=\"m-3\">\n// //               <label htmlFor=\"otp\" className=\"form-label\">Enter OTP</label>\n// //               <input type=\"text\" className=\"form-control\" value={otp} onChange={(e) => setOtp(e.target.value)} name='otp' />\n// //               <button type=\"button\" className=\"m-3 btn btn-success\" onClick={handleOtpSubmit}>Verify OTP</button>\n// //             </div>\n// //           </div>\n// //         )}\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n// import React, { useState } from 'react';\n// import Navbar from '../components/Navbar';\n// import { useNavigate, Link } from 'react-router-dom';\n\n// export default function Login() {\n//   const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\n//   const [otp, setOtp] = useState(\"\");\n//   const [otpRequested, setOtpRequested] = useState(false);\n//   let navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     const response = await fetch(\"http://localhost:5000/api/loginuser\", {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify({ email: credentials.email, password: credentials.password })\n//     });\n\n//     const json = await response.json();\n//     if (!json.success) {\n//       alert(\"Enter valid Credentials\");\n//     } else {\n//       localStorage.setItem(\"authToken\", json.authToken);\n//       setOtpRequested(true);\n//     }\n//   };\n\n//   const handleOtpSubmit = async () => {\n//     const response = await fetch(\"http://localhost:5000/api/validateotp\", {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify({ email: credentials.email, otp })\n//     });\n\n//     const json = await response.json();\n//     if (json.success) {\n//       navigate(\"/\");\n//     } else {\n//       alert(\"Invalid OTP or OTP expired\");\n//     }\n//   };\n\n//   const onChange = (e) => {\n//     setCredentials({ ...credentials, [e.target.name]: e.target.value });\n//   };\n\n//   return (\n//     <div style={{ backgroundImage: 'url(\"https://images.pexels.com/photos/326278/pexels-photo-326278.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")', height: '100vh', backgroundSize: 'cover' }}>\n//       <div>\n//         <Navbar />\n//       </div>\n//       <div className='container'>\n//         {!otpRequested ? (\n//           <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n//             <div className=\"m-3\">\n//               <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\n//               <input type=\"email\" className=\"form-control\" name='email' value={credentials.email} onChange={onChange} aria-describedby=\"emailHelp\" required />\n//               <div id=\"emailHelp\" className=\"form-text\">We'll never share your email with anyone.</div>\n//             </div>\n//             <div className=\"m-3\">\n//               <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\n//               <input type=\"password\" className=\"form-control\" value={credentials.password} onChange={onChange} name='password' required />\n//             </div>\n//             <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n//             <Link to=\"/signup\" className=\"m-3 mx-1 btn btn-danger\">I'm a new user</Link>\n//           </form>\n//         ) : (\n//           <div className='w-50 m-auto mt-5 border bg-dark border-success rounded'>\n//             <div className=\"m-3\">\n//               <label htmlFor=\"otp\" className=\"form-label\">Enter OTP</label>\n//               <input type=\"text\" className=\"form-control\" value={otp} onChange={(e) => setOtp(e.target.value)} name='otp' required />\n//               <button type=\"button\" className=\"m-3 btn btn-success\" onClick={handleOtpSubmit}>Verify OTP</button>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    setSuccess('');\n    try {\n      const response = await fetch('http://localhost:5000/api/loginuser', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: email,\n          password: password\n        })\n      });\n      const result = await response.json();\n      if (!response.ok) {\n        throw new Error(result.errors || 'Something went wrong');\n      }\n\n      // Handle success (e.g., redirect to OTP validation)\n      setSuccess('Login successful! Check your email for the OTP.');\n      console.log('Login successful:', result);\n\n      // Optionally, you can redirect the user or store authToken\n      // e.g., localStorage.setItem('authToken', result.authToken);\n    } catch (error) {\n      console.error('Error during fetch:', error);\n      setError('Login failed. Please check your credentials and try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Logging in...' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 23\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'green'\n      },\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 290,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"+Z9tCSx13nDfHT6hpMgChQM5/XY=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","error","setError","success","setSuccess","loading","setLoading","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","result","json","ok","Error","errors","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","disabled","style","color","_c","$RefreshReg$"],"sources":["C:/Users/ruhan/Documents/gofood/mernapp/src/screens/Login.js"],"sourcesContent":["// // // import React, { useState } from 'react'\n// // // import Navbar from '../components/Navbar';\n// // // import { useNavigate, Link } from 'react-router-dom'\n// // // export default function Login() {\n\n// // //   const [credentials, setCredentials] = useState({ email: \"\", password: \"\"});\n// // //   let navigate = useNavigate();\n\n// // //   const handleSubmit = async (e) => {\n// // //     e.preventDefault();\n// // //     console.log(JSON.stringify({ email: credentials.email, password: credentials.password}));\n// // //     const response = await fetch(\"http://localhost:5000/api/loginuser\", {\n// // //       method: 'POST',\n// // //       headers: {\n// // //         'Content-Type': 'application/json'\n// // //       },\n// // //       body: JSON.stringify({ email: credentials.email, password: credentials.password })\n// // //     });\n// // //     const json = await response.json();\n// // //     console.log(json);\n// // //     if (!json.success) {\n// // //       alert(\"Enter valid Credentials\");\n// // //     } else {\n// // //       // Navigate to login or another page upon successful signup\n// // //       localStorage.setItem(\"authToken\",json.authToken);\n// // //       console.log(localStorage.getItem(\"authToken\"));\n      \n// // //       navigate(\"/\");\n// // //     }\n// // //   }\n\n// // //   const onChange = (e) => {\n// // //     setCredentials({ ...credentials, [e.target.name]: e.target.value });\n// // //   }\n// // //   return (\n// // //     <div style={{backgroundImage: 'url(\"https://images.pexels.com/photos/326278/pexels-photo-326278.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")', height: '100vh', backgroundSize: 'cover' }}>\n// // //       <div>\n// // //         <Navbar />\n// // //       </div>\n// // //       <div className='container'>\n// // //         <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n// // //           <div className=\"m-3\">\n// // //             <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\n// // //             <input type=\"email\" className=\"form-control\" name='email' value={credentials.email} onChange={onChange} aria-describedby=\"emailHelp\" />\n// // //             <div id=\"emailHelp\" className=\"form-text\">We'll never share your email with anyone.</div>\n// // //           </div>\n// // //           <div className=\"m-3\">\n// // //             <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\n// // //             <input type=\"password\" className=\"form-control\" value={credentials.password} onChange={onChange} name='password' />\n// // //           </div>\n// // //           <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n// // //           <Link to=\"/signup\" className=\"m-3 mx-1 btn btn-danger\">I'am a user</Link>\n// // //         </form>\n\n// // //       </div>\n// // //     </div>\n// // //   )\n// // // }\n\n\n// // // // , 'Accept': 'application/json',\n// // // //         'Access-Control-Allow-Origin': 'http://localhost:3000/login', 'Access-Control-Allow-Credentials': 'true',\n// // // //         \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\",'Access-Control-Allow-Methods': 'PUT, POST, GET, DELETE, OPTIONS'\n\n\n\n// // import React, { useState } from 'react';\n// // import Navbar from '../components/Navbar';\n// // import { useNavigate, Link } from 'react-router-dom';\n\n// // export default function Login() {\n// //   const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\n// //   const [otp, setOtp] = useState(\"\");\n// //   const [otpRequested, setOtpRequested] = useState(false);\n// //   let navigate = useNavigate();\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n    \n// //     const response = await fetch(\"http://localhost:5000/api/loginuser\", {\n// //       method: 'POST',\n// //       headers: {\n// //         'Content-Type': 'application/json'\n// //       },\n// //       body: JSON.stringify({ email: credentials.email, password: credentials.password })\n// //     });\n\n// //     const json = await response.json();\n// //     if (!json.success) {\n// //       alert(\"Enter valid Credentials\");\n// //     } else {\n// //       localStorage.setItem(\"authToken\", json.authToken);\n      \n// //       // Request OTP\n// //       setOtpRequested(true);\n// //     }\n// //   };\n\n// //   const handleOtpSubmit = async () => {\n// //     const response = await fetch(\"http://localhost:5000/api/validateotp\", {\n// //       method: 'POST',\n// //       headers: {\n// //         'Content-Type': 'application/json'\n// //       },\n// //       body: JSON.stringify({ email: credentials.email, otp })\n// //     });\n\n// //     const json = await response.json();\n// //     if (json.success) {\n// //       navigate(\"/\");\n// //     } else {\n// //       alert(\"Invalid OTP or OTP expired\");\n// //     }\n// //   };\n\n// //   const onChange = (e) => {\n// //     setCredentials({ ...credentials, [e.target.name]: e.target.value });\n// //   };\n\n// //   return (\n// //     <div style={{backgroundImage: 'url(\"https://images.pexels.com/photos/326278/pexels-photo-326278.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")', height: '100vh', backgroundSize: 'cover' }}>\n// //       <div>\n// //         <Navbar />\n// //       </div>\n// //       <div className='container'>\n// //         {!otpRequested ? (\n// //           <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n// //             <div className=\"m-3\">\n// //               <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\n// //               <input type=\"email\" className=\"form-control\" name='email' value={credentials.email} onChange={onChange} aria-describedby=\"emailHelp\" />\n// //               <div id=\"emailHelp\" className=\"form-text\">We'll never share your email with anyone.</div>\n// //             </div>\n// //             <div className=\"m-3\">\n// //               <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\n// //               <input type=\"password\" className=\"form-control\" value={credentials.password} onChange={onChange} name='password' />\n// //             </div>\n// //             <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n// //             <Link to=\"/signup\" className=\"m-3 mx-1 btn btn-danger\">I'am a user</Link>\n// //           </form>\n// //         ) : (\n// //           <div className='w-50 m-auto mt-5 border bg-dark border-success rounded'>\n// //             <div className=\"m-3\">\n// //               <label htmlFor=\"otp\" className=\"form-label\">Enter OTP</label>\n// //               <input type=\"text\" className=\"form-control\" value={otp} onChange={(e) => setOtp(e.target.value)} name='otp' />\n// //               <button type=\"button\" className=\"m-3 btn btn-success\" onClick={handleOtpSubmit}>Verify OTP</button>\n// //             </div>\n// //           </div>\n// //         )}\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n\n// import React, { useState } from 'react';\n// import Navbar from '../components/Navbar';\n// import { useNavigate, Link } from 'react-router-dom';\n\n// export default function Login() {\n//   const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\n//   const [otp, setOtp] = useState(\"\");\n//   const [otpRequested, setOtpRequested] = useState(false);\n//   let navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     const response = await fetch(\"http://localhost:5000/api/loginuser\", {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify({ email: credentials.email, password: credentials.password })\n//     });\n\n//     const json = await response.json();\n//     if (!json.success) {\n//       alert(\"Enter valid Credentials\");\n//     } else {\n//       localStorage.setItem(\"authToken\", json.authToken);\n//       setOtpRequested(true);\n//     }\n//   };\n\n//   const handleOtpSubmit = async () => {\n//     const response = await fetch(\"http://localhost:5000/api/validateotp\", {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify({ email: credentials.email, otp })\n//     });\n\n//     const json = await response.json();\n//     if (json.success) {\n//       navigate(\"/\");\n//     } else {\n//       alert(\"Invalid OTP or OTP expired\");\n//     }\n//   };\n\n//   const onChange = (e) => {\n//     setCredentials({ ...credentials, [e.target.name]: e.target.value });\n//   };\n\n//   return (\n//     <div style={{ backgroundImage: 'url(\"https://images.pexels.com/photos/326278/pexels-photo-326278.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")', height: '100vh', backgroundSize: 'cover' }}>\n//       <div>\n//         <Navbar />\n//       </div>\n//       <div className='container'>\n//         {!otpRequested ? (\n//           <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n//             <div className=\"m-3\">\n//               <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\n//               <input type=\"email\" className=\"form-control\" name='email' value={credentials.email} onChange={onChange} aria-describedby=\"emailHelp\" required />\n//               <div id=\"emailHelp\" className=\"form-text\">We'll never share your email with anyone.</div>\n//             </div>\n//             <div className=\"m-3\">\n//               <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\n//               <input type=\"password\" className=\"form-control\" value={credentials.password} onChange={onChange} name='password' required />\n//             </div>\n//             <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n//             <Link to=\"/signup\" className=\"m-3 mx-1 btn btn-danger\">I'm a new user</Link>\n//           </form>\n//         ) : (\n//           <div className='w-50 m-auto mt-5 border bg-dark border-success rounded'>\n//             <div className=\"m-3\">\n//               <label htmlFor=\"otp\" className=\"form-label\">Enter OTP</label>\n//               <input type=\"text\" className=\"form-control\" value={otp} onChange={(e) => setOtp(e.target.value)} name='otp' required />\n//               <button type=\"button\" className=\"m-3 btn btn-success\" onClick={handleOtpSubmit}>Verify OTP</button>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n\nimport React, { useState } from 'react';\n\nconst Login = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const [success, setSuccess] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setLoading(true);\n        setError('');\n        setSuccess('');\n\n        try {\n            const response = await fetch('http://localhost:5000/api/loginuser', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    email: email,\n                    password: password\n                })\n            });\n\n            const result = await response.json();\n\n            if (!response.ok) {\n                throw new Error(result.errors || 'Something went wrong');\n            }\n\n            // Handle success (e.g., redirect to OTP validation)\n            setSuccess('Login successful! Check your email for the OTP.');\n            console.log('Login successful:', result);\n\n            // Optionally, you can redirect the user or store authToken\n            // e.g., localStorage.setItem('authToken', result.authToken);\n\n        } catch (error) {\n            console.error('Error during fetch:', error);\n            setError('Login failed. Please check your credentials and try again.');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div>\n            <h2>Login</h2>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label htmlFor=\"email\">Email:</label>\n                    <input\n                        type=\"email\"\n                        id=\"email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        required\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"password\">Password:</label>\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        required\n                    />\n                </div>\n                <button type=\"submit\" disabled={loading}>\n                    {loading ? 'Logging in...' : 'Login'}\n                </button>\n            </form>\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n            {success && <p style={{ color: 'green' }}>{success}</p>}\n        </div>\n    );\n};\n\nexport default Login;\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}