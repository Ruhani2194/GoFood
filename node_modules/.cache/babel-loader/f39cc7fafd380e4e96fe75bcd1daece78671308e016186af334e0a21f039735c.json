{"ast":null,"code":"// // import React, { useState, useRef, useEffect } from 'react';\n// // import { useNavigate } from 'react-router-dom';\n// // import { useDispatchCart } from './ContextReducer';\n// // import { useCart } from './ContextReducer';\n// // export default function Card(props) {\n// //   let dispatch=useDispatchCart();\n// //   let navigate = useNavigate();\n// //   const [qty, setQty] = useState(1);\n// //   const [size, setSize] = useState(\"\");\n// //   const priceRef = useRef();\n// //   let options = props.options;\n// //   let priceOptions = Object.keys(options);\n// //   let data=useCart()\n\n// //   const handleQty = (e) => {\n// //     setQty(e.target.value);\n// //   };\n\n// //   const handleOptions = (e) => {\n// //     setSize(e.target.value);\n// //   };\n\n// //   useEffect(() => {\n// //     setSize(priceRef.current.value);\n// //   }, []);\n\n// //   const handleAddtoCart = async() => {\n// //     await dispatch({type:\"ADD\",id:props.foodItem._id,name:props.foodItem.name,price:finalPrice,qty:qty,size:size})\n// //     console.log(data)\n// //   };\n\n// //   let finalPrice = qty * parseInt(options[size] || 0);\n\n// //   return (\n// //     <div>\n// //       <div className=\"card mt-3 bg-dark text-light\" style={{ width: \"16rem\", maxHeight: \"360px\" }}>\n// //         <img src={props.foodItem.img} className=\"card-img-top\" alt=\"...\" style={{ height: \"120px\", objectFit: \"fill\" }} />\n// //         <div className=\"card-body\">\n// //           <h5 className=\"card-title\">{props.foodItem.name}</h5>\n// //           <div className='container w-100 p-0' style={{ height: \"38px\" }}>\n// //             <select className=\"m-2 h-100 w-20 bg-success text-white rounded\" onChange={handleQty}>\n// //               {Array.from(Array(6), (e, i) => {\n// //                 return (\n// //                   <option key={i + 1} value={i + 1}>{i + 1}</option>)\n// //               })}\n// //             </select>\n// //             <select className=\"m-2 h-100 w-20 bg-success text-white rounded\" ref={priceRef} onChange={handleOptions}>\n// //               {priceOptions.map((i) => {\n// //                 return <option key={i} value={i}>{i}</option>\n// //               })}\n// //             </select>\n// //             <div className='d-inline ms-2 h-100 w-20 fs-5 text-white'>\n// //               ₹{finalPrice}/-\n// //             </div>\n// //           </div>\n\n// //           <hr className=\"bg-secondary\" />\n// //           <button className={'btn btn-success justify-center ms-2'} onClick={handleAddtoCart}>Add to Cart</button>\n// //         </div>\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n// import React, { useState, useRef, useEffect } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { useDispatchCart } from './ContextReducer';\n// import { useCart } from './ContextReducer';\n\n// export default function Card(props) {\n//   const dispatch = useDispatchCart();\n//   const navigate = useNavigate();\n//   const [qty, setQty] = useState(1);\n//   const [size, setSize] = useState(\"\"); // Initialize size state\n//   const priceRef = useRef();\n//   const data = useCart();\n//   const options = props.options;\n//   const priceOptions = Object.keys(options);\n\n//   useEffect(() => {\n//     // Set default size to the first option in priceOptions\n//     if (priceOptions.length > 0) {\n//       setSize(priceOptions[0]);\n//     }\n//   }, [priceOptions]);\n\n//   const handleQty = (e) => {\n//     setQty(e.target.value);\n//   };\n\n//   const handleOptions = (e) => {\n//     setSize(e.target.value); // Update size when user selects an option\n//   };\n\n//   const handleAddtoCart = async () => {\n//     const finalPrice = qty * parseInt(options[size] || 0); // Recalculate inside handleAddToCart\n//     await dispatch({\n//       type: \"ADD\",\n//       id: props.foodItem._id,\n//       name: props.foodItem.name,\n//       price: finalPrice,\n//       qty: qty,\n//       size: size\n//     });\n//     console.log(data);\n//   };\n\n//   // Calculate final price outside, but ensure size is valid\n//   const finalPrice = qty * parseInt(options[size] || 0);\n\n//   return (\n//     <div>\n//       <div className=\"card mt-3 bg-dark text-light\" style={{ width: \"16rem\", maxHeight: \"360px\" }}>\n//         <img src={props.foodItem.img} className=\"card-img-top\" alt=\"...\" style={{ height: \"120px\", objectFit: \"fill\" }} />\n//         <div className=\"card-body\">\n//           <h5 className=\"card-title\">{props.foodItem.name}</h5>\n//           <div className='container w-100 p-0' style={{ height: \"38px\" }}>\n//             <select className=\"m-2 h-100 w-20 bg-success text-white rounded\" onChange={handleQty}>\n//               {Array.from(Array(6), (e, i) => (\n//                 <option key={i + 1} value={i + 1}>{i + 1}</option>\n//               ))}\n//             </select>\n//             <select className=\"m-2 h-100 w-20 bg-success text-white rounded\" ref={priceRef} onChange={handleOptions}>\n//               {priceOptions.map((i) => (\n//                 <option key={i} value={i}>{i}</option>\n//               ))}\n//             </select>\n//             <div className='d-inline ms-2 h-100 w-20 fs-5 text-white'>\n//               ₹{finalPrice}/-\n//             </div>\n//           </div>\n\n//           <hr className=\"bg-secondary\" />\n//           <button className=\"btn btn-success justify-center ms-2\" onClick={handleAddtoCart}>\n//             Add to Cart\n//           </button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// import React, { useState, useRef, useEffect } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { useDispatchCart } from './ContextReducer';\n// import { useCart } from './ContextReducer';\n\n// export default function Card(props) {\n//   const dispatch = useDispatchCart();\n//   const navigate = useNavigate();\n//   const [qty, setQty] = useState(1);\n//   const [size, setSize] = useState(\"\"); // Initialize size state\n//   const priceRef = useRef();\n//   const data = useCart();\n//   const options = props.options;\n//   const priceOptions = Object.keys(options);\n\n//   useEffect(() => {\n//     // Set default size to the first option in priceOptions\n//     if (priceOptions.length > 0) {\n//       setSize(priceOptions[0]);\n//     }\n//   }, [priceOptions]);\n\n//   const handleQty = (e) => {\n//     setQty(e.target.value);\n//   };\n\n//   const handleOptions = (e) => {\n//     setSize(e.target.value); // Update size when user selects an option\n//   };\n\n//   const handleAddtoCart = async () => {\n//     const finalPrice = qty * parseInt(options[size] || 0); // Calculate the price based on selected size and quantity\n\n//     // Check if the item already exists in the cart\n//     let existingItem = data.find(item => item.id === props.foodItem._id && item.size === size);\n\n//     if (existingItem) {\n//       // If the item exists, update the quantity and price\n//       await dispatch({\n//         type: \"UPDATE\",\n//         id: props.foodItem._id,\n//         name: props.foodItem.name,\n//         price: finalPrice + existingItem.price,  // Add new price to the existing one\n//         qty: qty + existingItem.qty,  // Increment the quantity\n//         size: size\n//       });\n//     } else {\n//       // If the item doesn't exist, add it as a new item\n//       await dispatch({\n//         type: \"ADD\",\n//         id: props.foodItem._id,\n//         name: props.foodItem.name,\n//         price: finalPrice,\n//         qty: qty,\n//         size: size\n//       });\n//     }\n\n//     console.log(data); // Check the updated cart state in console\n//   };\n\n//   // Calculate final price outside, but ensure size is valid\n//   const finalPrice = qty * parseInt(options[size] || 0);\n\n//   return (\n//     <div>\n//       <div className=\"card mt-3 bg-dark text-light\" style={{ width: \"16rem\", maxHeight: \"360px\" }}>\n//         <img src={props.foodItem.img} className=\"card-img-top\" alt=\"...\" style={{ height: \"120px\", objectFit: \"fill\" }} />\n//         <div className=\"card-body\">\n//           <h5 className=\"card-title\">{props.foodItem.name}</h5>\n//           <div className='container w-100 p-0' style={{ height: \"38px\" }}>\n//             <select className=\"m-2 h-100 w-20 bg-success text-white rounded\" onChange={handleQty}>\n//               {Array.from(Array(6), (e, i) => (\n//                 <option key={i + 1} value={i + 1}>{i + 1}</option>\n//               ))}\n//             </select>\n//             <select className=\"m-2 h-100 w-20 bg-success text-white rounded\" ref={priceRef} onChange={handleOptions}>\n//               {priceOptions.map((i) => (\n//                 <option key={i} value={i}>{i}</option>\n//               ))}\n//             </select>\n//             <div className='d-inline ms-2 h-100 w-20 fs-5 text-white'>\n//               ₹{finalPrice}/-\n//             </div>\n//           </div>\n\n//           <hr className=\"bg-secondary\" />\n//           <button className=\"btn btn-success justify-center ms-2\" onClick={handleAddtoCart}>\n//             Add to Cart\n//           </button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/ruhan/Documents/gofood/mernapp/src/components/Card.js"],"sourcesContent":["// // import React, { useState, useRef, useEffect } from 'react';\n// // import { useNavigate } from 'react-router-dom';\n// // import { useDispatchCart } from './ContextReducer';\n// // import { useCart } from './ContextReducer';\n// // export default function Card(props) {\n// //   let dispatch=useDispatchCart();\n// //   let navigate = useNavigate();\n// //   const [qty, setQty] = useState(1);\n// //   const [size, setSize] = useState(\"\");\n// //   const priceRef = useRef();\n// //   let options = props.options;\n// //   let priceOptions = Object.keys(options);\n// //   let data=useCart()\n\n// //   const handleQty = (e) => {\n// //     setQty(e.target.value);\n// //   };\n\n// //   const handleOptions = (e) => {\n// //     setSize(e.target.value);\n// //   };\n\n// //   useEffect(() => {\n// //     setSize(priceRef.current.value);\n// //   }, []);\n  \n// //   const handleAddtoCart = async() => {\n// //     await dispatch({type:\"ADD\",id:props.foodItem._id,name:props.foodItem.name,price:finalPrice,qty:qty,size:size})\n// //     console.log(data)\n// //   };\n\n\n// //   let finalPrice = qty * parseInt(options[size] || 0);\n\n// //   return (\n// //     <div>\n// //       <div className=\"card mt-3 bg-dark text-light\" style={{ width: \"16rem\", maxHeight: \"360px\" }}>\n// //         <img src={props.foodItem.img} className=\"card-img-top\" alt=\"...\" style={{ height: \"120px\", objectFit: \"fill\" }} />\n// //         <div className=\"card-body\">\n// //           <h5 className=\"card-title\">{props.foodItem.name}</h5>\n// //           <div className='container w-100 p-0' style={{ height: \"38px\" }}>\n// //             <select className=\"m-2 h-100 w-20 bg-success text-white rounded\" onChange={handleQty}>\n// //               {Array.from(Array(6), (e, i) => {\n// //                 return (\n// //                   <option key={i + 1} value={i + 1}>{i + 1}</option>)\n// //               })}\n// //             </select>\n// //             <select className=\"m-2 h-100 w-20 bg-success text-white rounded\" ref={priceRef} onChange={handleOptions}>\n// //               {priceOptions.map((i) => {\n// //                 return <option key={i} value={i}>{i}</option>\n// //               })}\n// //             </select>\n// //             <div className='d-inline ms-2 h-100 w-20 fs-5 text-white'>\n// //               ₹{finalPrice}/-\n// //             </div>\n// //           </div>\n\n// //           <hr className=\"bg-secondary\" />\n// //           <button className={'btn btn-success justify-center ms-2'} onClick={handleAddtoCart}>Add to Cart</button>\n// //         </div>\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n\n// import React, { useState, useRef, useEffect } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { useDispatchCart } from './ContextReducer';\n// import { useCart } from './ContextReducer';\n\n// export default function Card(props) {\n//   const dispatch = useDispatchCart();\n//   const navigate = useNavigate();\n//   const [qty, setQty] = useState(1);\n//   const [size, setSize] = useState(\"\"); // Initialize size state\n//   const priceRef = useRef();\n//   const data = useCart();\n//   const options = props.options;\n//   const priceOptions = Object.keys(options);\n\n//   useEffect(() => {\n//     // Set default size to the first option in priceOptions\n//     if (priceOptions.length > 0) {\n//       setSize(priceOptions[0]);\n//     }\n//   }, [priceOptions]);\n\n//   const handleQty = (e) => {\n//     setQty(e.target.value);\n//   };\n\n//   const handleOptions = (e) => {\n//     setSize(e.target.value); // Update size when user selects an option\n//   };\n\n//   const handleAddtoCart = async () => {\n//     const finalPrice = qty * parseInt(options[size] || 0); // Recalculate inside handleAddToCart\n//     await dispatch({\n//       type: \"ADD\",\n//       id: props.foodItem._id,\n//       name: props.foodItem.name,\n//       price: finalPrice,\n//       qty: qty,\n//       size: size\n//     });\n//     console.log(data);\n//   };\n\n//   // Calculate final price outside, but ensure size is valid\n//   const finalPrice = qty * parseInt(options[size] || 0);\n\n//   return (\n//     <div>\n//       <div className=\"card mt-3 bg-dark text-light\" style={{ width: \"16rem\", maxHeight: \"360px\" }}>\n//         <img src={props.foodItem.img} className=\"card-img-top\" alt=\"...\" style={{ height: \"120px\", objectFit: \"fill\" }} />\n//         <div className=\"card-body\">\n//           <h5 className=\"card-title\">{props.foodItem.name}</h5>\n//           <div className='container w-100 p-0' style={{ height: \"38px\" }}>\n//             <select className=\"m-2 h-100 w-20 bg-success text-white rounded\" onChange={handleQty}>\n//               {Array.from(Array(6), (e, i) => (\n//                 <option key={i + 1} value={i + 1}>{i + 1}</option>\n//               ))}\n//             </select>\n//             <select className=\"m-2 h-100 w-20 bg-success text-white rounded\" ref={priceRef} onChange={handleOptions}>\n//               {priceOptions.map((i) => (\n//                 <option key={i} value={i}>{i}</option>\n//               ))}\n//             </select>\n//             <div className='d-inline ms-2 h-100 w-20 fs-5 text-white'>\n//               ₹{finalPrice}/-\n//             </div>\n//           </div>\n\n//           <hr className=\"bg-secondary\" />\n//           <button className=\"btn btn-success justify-center ms-2\" onClick={handleAddtoCart}>\n//             Add to Cart\n//           </button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n\n// import React, { useState, useRef, useEffect } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { useDispatchCart } from './ContextReducer';\n// import { useCart } from './ContextReducer';\n\n// export default function Card(props) {\n//   const dispatch = useDispatchCart();\n//   const navigate = useNavigate();\n//   const [qty, setQty] = useState(1);\n//   const [size, setSize] = useState(\"\"); // Initialize size state\n//   const priceRef = useRef();\n//   const data = useCart();\n//   const options = props.options;\n//   const priceOptions = Object.keys(options);\n\n//   useEffect(() => {\n//     // Set default size to the first option in priceOptions\n//     if (priceOptions.length > 0) {\n//       setSize(priceOptions[0]);\n//     }\n//   }, [priceOptions]);\n\n//   const handleQty = (e) => {\n//     setQty(e.target.value);\n//   };\n\n//   const handleOptions = (e) => {\n//     setSize(e.target.value); // Update size when user selects an option\n//   };\n\n//   const handleAddtoCart = async () => {\n//     const finalPrice = qty * parseInt(options[size] || 0); // Calculate the price based on selected size and quantity\n\n//     // Check if the item already exists in the cart\n//     let existingItem = data.find(item => item.id === props.foodItem._id && item.size === size);\n\n//     if (existingItem) {\n//       // If the item exists, update the quantity and price\n//       await dispatch({\n//         type: \"UPDATE\",\n//         id: props.foodItem._id,\n//         name: props.foodItem.name,\n//         price: finalPrice + existingItem.price,  // Add new price to the existing one\n//         qty: qty + existingItem.qty,  // Increment the quantity\n//         size: size\n//       });\n//     } else {\n//       // If the item doesn't exist, add it as a new item\n//       await dispatch({\n//         type: \"ADD\",\n//         id: props.foodItem._id,\n//         name: props.foodItem.name,\n//         price: finalPrice,\n//         qty: qty,\n//         size: size\n//       });\n//     }\n\n//     console.log(data); // Check the updated cart state in console\n//   };\n\n//   // Calculate final price outside, but ensure size is valid\n//   const finalPrice = qty * parseInt(options[size] || 0);\n\n//   return (\n//     <div>\n//       <div className=\"card mt-3 bg-dark text-light\" style={{ width: \"16rem\", maxHeight: \"360px\" }}>\n//         <img src={props.foodItem.img} className=\"card-img-top\" alt=\"...\" style={{ height: \"120px\", objectFit: \"fill\" }} />\n//         <div className=\"card-body\">\n//           <h5 className=\"card-title\">{props.foodItem.name}</h5>\n//           <div className='container w-100 p-0' style={{ height: \"38px\" }}>\n//             <select className=\"m-2 h-100 w-20 bg-success text-white rounded\" onChange={handleQty}>\n//               {Array.from(Array(6), (e, i) => (\n//                 <option key={i + 1} value={i + 1}>{i + 1}</option>\n//               ))}\n//             </select>\n//             <select className=\"m-2 h-100 w-20 bg-success text-white rounded\" ref={priceRef} onChange={handleOptions}>\n//               {priceOptions.map((i) => (\n//                 <option key={i} value={i}>{i}</option>\n//               ))}\n//             </select>\n//             <div className='d-inline ms-2 h-100 w-20 fs-5 text-white'>\n//               ₹{finalPrice}/-\n//             </div>\n//           </div>\n\n//           <hr className=\"bg-secondary\" />\n//           <button className=\"btn btn-success justify-center ms-2\" onClick={handleAddtoCart}>\n//             Add to Cart\n//           </button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}