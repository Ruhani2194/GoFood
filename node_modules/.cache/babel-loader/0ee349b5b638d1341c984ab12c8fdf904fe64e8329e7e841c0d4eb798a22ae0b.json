{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruhan\\\\Documents\\\\gofood\\\\mernapp\\\\src\\\\screens\\\\Signup.js\",\n  _s = $RefreshSig$();\n// // import React, { useState } from 'react';\n// // import { useNavigate, Link } from 'react-router-dom';\n// // import Navbar from '../components/Navbar';\n\n// // export default function Signup() {\n// //   const [credentials, setCredentials] = useState({ name: \"\", email: \"\", password: \"\", geolocation: \"\" });\n// //   let navigate = useNavigate();\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     console.log(JSON.stringify({name: credentials.name, email: credentials.email, password: credentials.password, location: credentials.geolocation}));\n// //     const response = await fetch(\"http://localhost:5000/api/createuser\", {\n// //       method: 'POST',\n// //       headers: {\n// //         'Content-Type': 'application/json'\n// //       },\n// //       body: JSON.stringify({ name: credentials.name, email: credentials.email, password: credentials.password, location: credentials.geolocation })\n// //     });\n// //     const json = await response.json();\n// //     console.log(json);\n// //     if (!json.success) {\n// //       alert(\"Enter valid Credentials\");\n// //     } else {\n// //       // Navigate to login or another page upon successful signup\n// //       navigate(\"/login\");\n// //     }\n// //   }\n\n// //   const onChange = (e) => {\n// //     setCredentials({ ...credentials, [e.target.name]: e.target.value });\n// //   }\n\n// //   return (\n// //     <div style={{ backgroundImage: 'url(\"https://images.pexels.com/photos/1565982/pexels-photo-1565982.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")', backgroundSize: 'cover', height: '100vh' }}>\n// //       <div>\n// //         <Navbar />\n// //       </div>\n\n// //       <div className='container'>\n// //         <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n// //           <div className=\"m-3\">\n// //             <label htmlFor=\"name\" className=\"form-label\">Name</label>\n// //             <input type=\"text\" className=\"form-control\" name='name' value={credentials.name} onChange={onChange} aria-describedby=\"emailHelp\" />\n// //           </div>\n// //           <div className=\"m-3\">\n// //             <label htmlFor=\"email\" className=\"form-label\">Email address</label>\n// //             <input type=\"email\" className=\"form-control\" name='email' value={credentials.email} onChange={onChange} aria-describedby=\"emailHelp\" />\n// //           </div>\n// //           <div className=\"m-3\">\n// //             <label htmlFor=\"geolocation\" className=\"form-label\">Location</label>\n// //             <input type=\"text\" className=\"form-control\" name='geolocation' value={credentials.geolocation} onChange={onChange} placeholder=\"Enter your location\" />\n// //           </div>\n// //           <div className=\"m-3\">\n// //             <label htmlFor=\"password\" className=\"form-label\">Password</label>\n// //             <input type=\"password\" className=\"form-control\" value={credentials.password} onChange={onChange} name='password' />\n// //           </div>\n// //           <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n// //           <Link to=\"/login\" className=\"m-3 mx-1 btn btn-danger\">Already a user</Link>\n// //         </form>\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n// import React, { useState } from 'react';\n// import { useNavigate, Link } from 'react-router-dom';\n// import Navbar from '../components/Navbar';\n\n// export default function Signup() {\n//   const [credentials, setCredentials] = useState({\n//     name: \"\",\n//     email: \"\",\n//     password: \"\",\n//     geolocation: \"\",\n//     role: \"user\" // Default to user\n//   });\n//   let navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const response = await fetch(\"http://localhost:5000/api/createuser\", {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify({\n//         name: credentials.name,\n//         email: credentials.email,\n//         password: credentials.password,\n//         location: credentials.geolocation,\n//         role: credentials.role // Send role with the signup data\n//       })\n//     });\n//     const json = await response.json();\n//     if (!json.success) {\n//       alert(\"Enter valid Credentials\");\n//     } else {\n//       navigate(\"/login\");\n//     }\n//   }\n\n//   const onChange = (e) => {\n//     setCredentials({ ...credentials, [e.target.name]: e.target.value });\n//   }\n\n//   return (\n//     <div style={{ backgroundImage: 'url(\"https://images.pexels.com/photos/1565982/pexels-photo-1565982.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")', backgroundSize: 'cover', height: '100vh' }}>\n//       <Navbar />\n//       <div className='container'>\n//         <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"name\" className=\"form-label\">Name</label>\n//             <input type=\"text\" className=\"form-control\" name='name' value={credentials.name} onChange={onChange} />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"email\" className=\"form-label\">Email address</label>\n//             <input type=\"email\" className=\"form-control\" name='email' value={credentials.email} onChange={onChange} />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"geolocation\" className=\"form-label\">Location</label>\n//             <input type=\"text\" className=\"form-control\" name='geolocation' value={credentials.geolocation} onChange={onChange} />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"password\" className=\"form-label\">Password</label>\n//             <input type=\"password\" className=\"form-control\" value={credentials.password} onChange={onChange} name='password' />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"role\" className=\"form-label\">Role</label>\n//             <select className=\"form-control\" name=\"role\" value={credentials.role} onChange={onChange}>\n//               <option value=\"user\">User</option>\n//               <option value=\"admin\">Admin</option>\n//             </select>\n//           </div>\n//           <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n//           <Link to=\"/login\" className=\"m-3 mx-1 btn btn-danger\">Already a user</Link>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\n// import React, { useState } from 'react';\n// import { useNavigate, Link } from 'react-router-dom';\n// import Navbar from '../components/Navbar';\n\n// export default function Signup() {\n//   const [credentials, setCredentials] = useState({\n//     name: \"\",\n//     email: \"\",\n//     password: \"\",\n//     geolocation: \"\",\n//     role: \"user\" // Default to user\n//   });\n//   let navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const response = await fetch(\"http://localhost:5000/api/createuser\", {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify(credentials),\n//     });\n\n//     const json = await response.json();\n\n//     if (json.success) {\n//       alert(\"You are successfully registered. Please log in.\");\n//       navigate(\"/login\");\n//     } else {\n//       alert(\"Error during registration. Please try again.\");\n//     }\n//   };\n\n//   const onChange = (e) => {\n//     setCredentials({ ...credentials, [e.target.name]: e.target.value });\n//   };\n\n//   return (\n//     <div>\n//       <Navbar />\n//       <div className='container'>\n//         <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"name\" className=\"form-label\">Name</label>\n//             <input\n//               type=\"text\"\n//               className=\"form-control\"\n//               name='name'\n//               value={credentials.name}\n//               onChange={onChange}\n//               required\n//             />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"email\" className=\"form-label\">Email address</label>\n//             <input\n//               type=\"email\"\n//               className=\"form-control\"\n//               name='email'\n//               value={credentials.email}\n//               onChange={onChange}\n//               required\n//             />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"password\" className=\"form-label\">Password</label>\n//             <input\n//               type=\"password\"\n//               className=\"form-control\"\n//               name='password'\n//               value={credentials.password}\n//               onChange={onChange}\n//               required\n//             />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"geolocation\" className=\"form-label\">Geolocation</label>\n//             <input\n//               type=\"text\"\n//               className=\"form-control\"\n//               name='geolocation'\n//               value={credentials.geolocation}\n//               onChange={onChange}\n//               required\n//             />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"role\" className=\"form-label\">Role</label>\n//             <select\n//               className=\"form-control\"\n//               name=\"role\"\n//               value={credentials.role}\n//               onChange={onChange}\n//             >\n//               <option value=\"user\">User</option>\n//               <option value=\"admin\">Admin</option>\n//             </select>\n//           </div>\n//           <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n//           <Link to=\"/login\" className=\"m-3 mx-1 btn btn-danger\">Already have an account</Link>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const [credentials, setCredentials] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    geolocation: \"\",\n    adminKey: \"\" // Used for admin role\n  });\n  const navigate = useNavigate();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCredentials({\n      ...credentials,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Log the submitted credentials for debugging\n    console.log(\"Submitted credentials:\", credentials);\n\n    // Check if the adminKey is correct and set the role accordingly\n    if (credentials.adminKey === \"secretAdminKey\") {\n      credentials.role = \"admin\";\n    } else {\n      credentials.role = \"user\";\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/api/createuser\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(credentials)\n      });\n      const json = await response.json();\n      console.log(json); // Log the response for debugging\n\n      if (json.success) {\n        alert(\"You are successfully registered. Please log in.\");\n        navigate(\"/login\");\n      } else {\n        alert(json.error || \"Error during registration. Please try again.\");\n      }\n    } catch (error) {\n      console.error(\"Error during fetch:\", error);\n      alert(\"Something went wrong. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          value: credentials.name,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: credentials.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: credentials.password,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"geolocation\",\n          children: \"Geolocation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"geolocation\",\n          name: \"geolocation\",\n          value: credentials.geolocation,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"adminKey\",\n          children: \"Admin Key (for admin only)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"adminKey\",\n          name: \"adminKey\",\n          value: credentials.adminKey,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"Leave this empty if you don't have the admin key.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 310,\n    columnNumber: 5\n  }, this);\n};\n_s(Signup, \"8UfgC7U2fKHkmEAVlkNWD/MEt8U=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Signup","_s","credentials","setCredentials","name","email","password","geolocation","adminKey","navigate","handleChange","e","value","target","handleSubmit","preventDefault","console","log","role","response","fetch","method","headers","body","JSON","stringify","json","success","alert","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/ruhan/Documents/gofood/mernapp/src/screens/Signup.js"],"sourcesContent":["// // import React, { useState } from 'react';\n// // import { useNavigate, Link } from 'react-router-dom';\n// // import Navbar from '../components/Navbar';\n\n// // export default function Signup() {\n// //   const [credentials, setCredentials] = useState({ name: \"\", email: \"\", password: \"\", geolocation: \"\" });\n// //   let navigate = useNavigate();\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     console.log(JSON.stringify({name: credentials.name, email: credentials.email, password: credentials.password, location: credentials.geolocation}));\n// //     const response = await fetch(\"http://localhost:5000/api/createuser\", {\n// //       method: 'POST',\n// //       headers: {\n// //         'Content-Type': 'application/json'\n// //       },\n// //       body: JSON.stringify({ name: credentials.name, email: credentials.email, password: credentials.password, location: credentials.geolocation })\n// //     });\n// //     const json = await response.json();\n// //     console.log(json);\n// //     if (!json.success) {\n// //       alert(\"Enter valid Credentials\");\n// //     } else {\n// //       // Navigate to login or another page upon successful signup\n// //       navigate(\"/login\");\n// //     }\n// //   }\n\n// //   const onChange = (e) => {\n// //     setCredentials({ ...credentials, [e.target.name]: e.target.value });\n// //   }\n\n// //   return (\n// //     <div style={{ backgroundImage: 'url(\"https://images.pexels.com/photos/1565982/pexels-photo-1565982.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")', backgroundSize: 'cover', height: '100vh' }}>\n// //       <div>\n// //         <Navbar />\n// //       </div>\n\n// //       <div className='container'>\n// //         <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n// //           <div className=\"m-3\">\n// //             <label htmlFor=\"name\" className=\"form-label\">Name</label>\n// //             <input type=\"text\" className=\"form-control\" name='name' value={credentials.name} onChange={onChange} aria-describedby=\"emailHelp\" />\n// //           </div>\n// //           <div className=\"m-3\">\n// //             <label htmlFor=\"email\" className=\"form-label\">Email address</label>\n// //             <input type=\"email\" className=\"form-control\" name='email' value={credentials.email} onChange={onChange} aria-describedby=\"emailHelp\" />\n// //           </div>\n// //           <div className=\"m-3\">\n// //             <label htmlFor=\"geolocation\" className=\"form-label\">Location</label>\n// //             <input type=\"text\" className=\"form-control\" name='geolocation' value={credentials.geolocation} onChange={onChange} placeholder=\"Enter your location\" />\n// //           </div>\n// //           <div className=\"m-3\">\n// //             <label htmlFor=\"password\" className=\"form-label\">Password</label>\n// //             <input type=\"password\" className=\"form-control\" value={credentials.password} onChange={onChange} name='password' />\n// //           </div>\n// //           <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n// //           <Link to=\"/login\" className=\"m-3 mx-1 btn btn-danger\">Already a user</Link>\n// //         </form>\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n\n// import React, { useState } from 'react';\n// import { useNavigate, Link } from 'react-router-dom';\n// import Navbar from '../components/Navbar';\n\n// export default function Signup() {\n//   const [credentials, setCredentials] = useState({\n//     name: \"\",\n//     email: \"\",\n//     password: \"\",\n//     geolocation: \"\",\n//     role: \"user\" // Default to user\n//   });\n//   let navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const response = await fetch(\"http://localhost:5000/api/createuser\", {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify({\n//         name: credentials.name,\n//         email: credentials.email,\n//         password: credentials.password,\n//         location: credentials.geolocation,\n//         role: credentials.role // Send role with the signup data\n//       })\n//     });\n//     const json = await response.json();\n//     if (!json.success) {\n//       alert(\"Enter valid Credentials\");\n//     } else {\n//       navigate(\"/login\");\n//     }\n//   }\n\n//   const onChange = (e) => {\n//     setCredentials({ ...credentials, [e.target.name]: e.target.value });\n//   }\n\n//   return (\n//     <div style={{ backgroundImage: 'url(\"https://images.pexels.com/photos/1565982/pexels-photo-1565982.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")', backgroundSize: 'cover', height: '100vh' }}>\n//       <Navbar />\n//       <div className='container'>\n//         <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"name\" className=\"form-label\">Name</label>\n//             <input type=\"text\" className=\"form-control\" name='name' value={credentials.name} onChange={onChange} />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"email\" className=\"form-label\">Email address</label>\n//             <input type=\"email\" className=\"form-control\" name='email' value={credentials.email} onChange={onChange} />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"geolocation\" className=\"form-label\">Location</label>\n//             <input type=\"text\" className=\"form-control\" name='geolocation' value={credentials.geolocation} onChange={onChange} />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"password\" className=\"form-label\">Password</label>\n//             <input type=\"password\" className=\"form-control\" value={credentials.password} onChange={onChange} name='password' />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"role\" className=\"form-label\">Role</label>\n//             <select className=\"form-control\" name=\"role\" value={credentials.role} onChange={onChange}>\n//               <option value=\"user\">User</option>\n//               <option value=\"admin\">Admin</option>\n//             </select>\n//           </div>\n//           <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n//           <Link to=\"/login\" className=\"m-3 mx-1 btn btn-danger\">Already a user</Link>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\n\n// import React, { useState } from 'react';\n// import { useNavigate, Link } from 'react-router-dom';\n// import Navbar from '../components/Navbar';\n\n// export default function Signup() {\n//   const [credentials, setCredentials] = useState({\n//     name: \"\",\n//     email: \"\",\n//     password: \"\",\n//     geolocation: \"\",\n//     role: \"user\" // Default to user\n//   });\n//   let navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const response = await fetch(\"http://localhost:5000/api/createuser\", {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify(credentials),\n//     });\n\n//     const json = await response.json();\n\n//     if (json.success) {\n//       alert(\"You are successfully registered. Please log in.\");\n//       navigate(\"/login\");\n//     } else {\n//       alert(\"Error during registration. Please try again.\");\n//     }\n//   };\n\n//   const onChange = (e) => {\n//     setCredentials({ ...credentials, [e.target.name]: e.target.value });\n//   };\n\n//   return (\n//     <div>\n//       <Navbar />\n//       <div className='container'>\n//         <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"name\" className=\"form-label\">Name</label>\n//             <input\n//               type=\"text\"\n//               className=\"form-control\"\n//               name='name'\n//               value={credentials.name}\n//               onChange={onChange}\n//               required\n//             />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"email\" className=\"form-label\">Email address</label>\n//             <input\n//               type=\"email\"\n//               className=\"form-control\"\n//               name='email'\n//               value={credentials.email}\n//               onChange={onChange}\n//               required\n//             />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"password\" className=\"form-label\">Password</label>\n//             <input\n//               type=\"password\"\n//               className=\"form-control\"\n//               name='password'\n//               value={credentials.password}\n//               onChange={onChange}\n//               required\n//             />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"geolocation\" className=\"form-label\">Geolocation</label>\n//             <input\n//               type=\"text\"\n//               className=\"form-control\"\n//               name='geolocation'\n//               value={credentials.geolocation}\n//               onChange={onChange}\n//               required\n//             />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"role\" className=\"form-label\">Role</label>\n//             <select\n//               className=\"form-control\"\n//               name=\"role\"\n//               value={credentials.role}\n//               onChange={onChange}\n//             >\n//               <option value=\"user\">User</option>\n//               <option value=\"admin\">Admin</option>\n//             </select>\n//           </div>\n//           <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n//           <Link to=\"/login\" className=\"m-3 mx-1 btn btn-danger\">Already have an account</Link>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Signup = () => {\n  const [credentials, setCredentials] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    geolocation: \"\",\n    adminKey: \"\", // Used for admin role\n  });\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setCredentials({\n      ...credentials,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Log the submitted credentials for debugging\n    console.log(\"Submitted credentials:\", credentials);\n\n    // Check if the adminKey is correct and set the role accordingly\n    if (credentials.adminKey === \"secretAdminKey\") {\n      credentials.role = \"admin\";\n    } else {\n      credentials.role = \"user\";\n    }\n\n    try {\n      const response = await fetch(\"http://localhost:5000/api/createuser\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(credentials),\n      });\n\n      const json = await response.json();\n      console.log(json); // Log the response for debugging\n\n      if (json.success) {\n        alert(\"You are successfully registered. Please log in.\");\n        navigate(\"/login\");\n      } else {\n        alert(json.error || \"Error during registration. Please try again.\");\n      }\n    } catch (error) {\n      console.error(\"Error during fetch:\", error);\n      alert(\"Something went wrong. Please try again.\");\n    }\n  };\n\n  return (\n    <div className=\"signup-container\">\n      <h2>Signup</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"name\">Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            value={credentials.name}\n            onChange={handleChange}\n            required\n          />\n        </div>\n\n        <div>\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            value={credentials.email}\n            onChange={handleChange}\n            required\n          />\n        </div>\n\n        <div>\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            value={credentials.password}\n            onChange={handleChange}\n            required\n          />\n        </div>\n\n        <div>\n          <label htmlFor=\"geolocation\">Geolocation</label>\n          <input\n            type=\"text\"\n            id=\"geolocation\"\n            name=\"geolocation\"\n            value={credentials.geolocation}\n            onChange={handleChange}\n            required\n          />\n        </div>\n\n        <div>\n          <label htmlFor=\"adminKey\">Admin Key (for admin only)</label>\n          <input\n            type=\"text\"\n            id=\"adminKey\"\n            name=\"adminKey\"\n            value={credentials.adminKey}\n            onChange={handleChange}\n          />\n          <small>Leave this empty if you don't have the admin key.</small>\n        </div>\n\n        <div>\n          <button type=\"submit\">Sign Up</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Signup;\n\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}