{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruhan\\\\Documents\\\\gofood\\\\mernapp\\\\src\\\\screens\\\\Login.js\",\n  _s = $RefreshSig$();\n// // // import React, { useState } from 'react';\n// // // import Navbar from '../components/Navbar';\n// // // import { useNavigate, Link } from 'react-router-dom';\n\n// // // export default function Login() {\n// // //   const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\n// // //   const navigate = useNavigate();\n\n// // //   const handleSubmit = async (e) => {\n// // //     e.preventDefault();\n\n// // //     try {\n// // //       const response = await fetch(\"http://localhost:5000/api/loginuser\", {\n// // //         method: 'POST',\n// // //         headers: {\n// // //           'Content-Type': 'application/json',\n// // //         },\n// // //         body: JSON.stringify({ email: credentials.email, password: credentials.password }),\n// // //       });\n\n// // //       const json = await response.json();\n// // //       console.log(json);\n\n// // //       if (json.success) {\n// // //         // Store the token and email in local storage\n// // //         localStorage.setItem(\"authToken\", json.authToken);\n// // //         localStorage.setItem(\"userEmail\", credentials.email);\n\n// // //         // Navigate to the home page upon successful login\n// // //         navigate(\"/\");\n// // //       } else {\n// // //         alert(\"Invalid credentials. Please try again.\");\n// // //       }\n// // //     } catch (error) {\n// // //       console.error('Error during login:', error);\n// // //       alert(\"Something went wrong. Please try again later.\");\n// // //     }\n// // //   };\n\n// // //   const onChange = (e) => {\n// // //     setCredentials({ ...credentials, [e.target.name]: e.target.value });\n// // //   };\n\n// // //   return (\n// // //     <div style={{ backgroundImage: 'url(\"https://images.pexels.com/photos/326278/pexels-photo-326278.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")', height: '100vh', backgroundSize: 'cover' }}>\n// // //       <Navbar />\n// // //       <div className='container'>\n// // //         <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n// // //           <div className=\"m-3\">\n// // //             <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\n// // //             <input\n// // //               type=\"email\"\n// // //               className=\"form-control\"\n// // //               name='email'\n// // //               value={credentials.email}\n// // //               onChange={onChange}\n// // //               aria-describedby=\"emailHelp\"\n// // //               required\n// // //             />\n// // //             <div id=\"emailHelp\" className=\"form-text\">We'll never share your email with anyone.</div>\n// // //           </div>\n// // //           <div className=\"m-3\">\n// // //             <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\n// // //             <input\n// // //               type=\"password\"\n// // //               className=\"form-control\"\n// // //               name='password'\n// // //               value={credentials.password}\n// // //               onChange={onChange}\n// // //               required\n// // //             />\n// // //           </div>\n// // //           <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n// // //           <Link to=\"/signup\" className=\"m-3 mx-1 btn btn-danger\">I'm a new user</Link>\n// // //         </form>\n// // //       </div>\n// // //     </div>\n// // //   );\n// // // }\n\n// // import React, { useState } from 'react';\n// // import { useNavigate, Link } from 'react-router-dom';\n// // import Navbar from '../components/Navbar';\n\n// // export default function Login() {\n// //   const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\n// //   const navigate = useNavigate();\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n\n// //     try {\n// //       const response = await fetch(\"http://localhost:5000/api/loginuser\", {\n// //         method: 'POST',\n// //         headers: {\n// //           'Content-Type': 'application/json',\n// //         },\n// //         body: JSON.stringify({ email: credentials.email, password: credentials.password }),\n// //       });\n\n// //       const json = await response.json();\n\n// //       if (json.success) {\n// //         // Store the token and email in local storage\n// //         localStorage.setItem(\"authToken\", json.authToken);\n// //         localStorage.setItem(\"userEmail\", credentials.email);\n\n// //         // If user is admin, navigate to an admin page\n// //         const user = await fetchUserData(credentials.email); // Fetch user data to check if admin\n// //         if (user.role === 'admin') {\n// //           navigate(\"/admin/upload\"); // Assuming an admin upload page exists\n// //         } else {\n// //           navigate(\"/\"); // Otherwise, navigate to the home page\n// //         }\n// //       } else {\n// //         alert(\"Invalid credentials. Please try again.\");\n// //       }\n// //     } catch (error) {\n// //       console.error('Error during login:', error);\n// //       alert(\"Something went wrong. Please try again later.\");\n// //     }\n// //   };\n\n// //   const fetchUserData = async (email) => {\n// //     const response = await fetch(`http://localhost:5000/api/getUserByEmail/${email}`);\n// //     const data = await response.json();\n// //     return data;\n// //   };\n\n// //   const onChange = (e) => {\n// //     setCredentials({ ...credentials, [e.target.name]: e.target.value });\n// //   };\n\n// //   return (\n// //     <div style={{ backgroundImage: 'url(\"https://images.pexels.com/photos/326278/pexels-photo-326278.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")', height: '100vh', backgroundSize: 'cover' }}>\n// //       <Navbar />\n// //       <div className='container'>\n// //         <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n// //           <div className=\"m-3\">\n// //             <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\n// //             <input\n// //               type=\"email\"\n// //               className=\"form-control\"\n// //               name='email'\n// //               value={credentials.email}\n// //               onChange={onChange}\n// //               aria-describedby=\"emailHelp\"\n// //               required\n// //             />\n// //           </div>\n// //           <div className=\"m-3\">\n// //             <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\n// //             <input\n// //               type=\"password\"\n// //               className=\"form-control\"\n// //               name='password'\n// //               value={credentials.password}\n// //               onChange={onChange}\n// //               required\n// //             />\n// //           </div>\n// //           <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n// //           <Link to=\"/signup\" className=\"m-3 mx-1 btn btn-danger\">I'm a new user</Link>\n// //         </form>\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n// import React, { useState } from 'react';\n// import { useNavigate, Link } from 'react-router-dom';\n// import Navbar from '../components/Navbar';\n\n// export default function Login() {\n//   const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const response = await fetch(\"http://localhost:5000/api/loginuser\", {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ email: credentials.email, password: credentials.password }),\n//       });\n\n//       const json = await response.json();\n\n//       if (json.success) {\n//         // Store the token and email in local storage\n//         localStorage.setItem(\"authToken\", json.authToken);\n//         localStorage.setItem(\"userEmail\", credentials.email);\n\n//         // If user is admin, navigate to an admin page\n//         const user = await fetchUserData(credentials.email); // Fetch user data to check if admin\n//         if (user.role === 'admin') {\n//           navigate(\"/admin/upload\"); // Assuming an admin upload page exists\n//         } else {\n//           navigate(\"/\"); // Otherwise, navigate to the home page\n//         }\n//       } else {\n//         alert(\"Invalid credentials. Please try again.\");\n//       }\n//     } catch (error) {\n//       console.error('Error during login:', error);\n//       alert(\"Something went wrong. Please try again later.\");\n//     }\n//   };\n\n//   const fetchUserData = async (email) => {\n//     const response = await fetch(`http://localhost:5000/api/getUserByEmail/${email}`);\n//     const data = await response.json();\n//     return data;\n//   };\n\n//   const onChange = (e) => {\n//     setCredentials({ ...credentials, [e.target.name]: e.target.value });\n//   };\n\n//   return (\n//     <div style={{ backgroundImage: 'url(\"https://images.pexels.com/photos/326278/pexels-photo-326278.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")', height: '100vh', backgroundSize: 'cover' }}>\n//       <Navbar />\n//       <div className='container'>\n//         <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\n//             <input\n//               type=\"email\"\n//               className=\"form-control\"\n//               name='email'\n//               value={credentials.email}\n//               onChange={onChange}\n//               aria-describedby=\"emailHelp\"\n//               required\n//             />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\n//             <input\n//               type=\"password\"\n//               className=\"form-control\"\n//               name='password'\n//               value={credentials.password}\n//               onChange={onChange}\n//               required\n//             />\n//           </div>\n//           <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n//           <Link to=\"/signup\" className=\"m-3 mx-1 btn btn-danger\">I'm a new user</Link>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\nimport React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport Navbar from '../components/Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const [credentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const navigate = useNavigate();\n  const fetchUserData = async email => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/getUserByEmail/${email}`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n        }\n      });\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n      return null;\n    }\n  };\n  const onChange = e => {\n    setCredentials({\n      ...credentials,\n      [e.target.name]: e.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundImage: 'url(\"https://images.pexels.com/photos/326278/pexels-photo-326278.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")',\n      height: '100vh',\n      backgroundSize: 'cover'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"w-50 m-auto mt-5 border bg-dark border-success rounded\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"exampleInputEmail1\",\n            className: \"form-label\",\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: \"form-control\",\n            name: \"email\",\n            value: credentials.email,\n            onChange: onChange,\n            \"aria-describedby\": \"emailHelp\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"exampleInputPassword1\",\n            className: \"form-label\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"form-control\",\n            name: \"password\",\n            value: credentials.password,\n            onChange: onChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"m-3 btn btn-success\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          className: \"m-3 mx-1 btn btn-danger\",\n          children: \"I'm a new user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 292,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"tON92gC6g17sNH8ocikzOdvEg9E=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","Link","Navbar","jsxDEV","_jsxDEV","Login","_s","credentials","setCredentials","email","password","navigate","fetchUserData","response","fetch","headers","localStorage","getItem","data","json","error","console","onChange","e","target","name","value","style","backgroundImage","height","backgroundSize","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","handleSubmit","htmlFor","type","required","to","_c","$RefreshReg$"],"sources":["C:/Users/ruhan/Documents/gofood/mernapp/src/screens/Login.js"],"sourcesContent":["// // // import React, { useState } from 'react';\n// // // import Navbar from '../components/Navbar';\n// // // import { useNavigate, Link } from 'react-router-dom';\n\n// // // export default function Login() {\n// // //   const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\n// // //   const navigate = useNavigate();\n\n// // //   const handleSubmit = async (e) => {\n// // //     e.preventDefault();\n\n// // //     try {\n// // //       const response = await fetch(\"http://localhost:5000/api/loginuser\", {\n// // //         method: 'POST',\n// // //         headers: {\n// // //           'Content-Type': 'application/json',\n// // //         },\n// // //         body: JSON.stringify({ email: credentials.email, password: credentials.password }),\n// // //       });\n\n// // //       const json = await response.json();\n// // //       console.log(json);\n\n// // //       if (json.success) {\n// // //         // Store the token and email in local storage\n// // //         localStorage.setItem(\"authToken\", json.authToken);\n// // //         localStorage.setItem(\"userEmail\", credentials.email);\n\n// // //         // Navigate to the home page upon successful login\n// // //         navigate(\"/\");\n// // //       } else {\n// // //         alert(\"Invalid credentials. Please try again.\");\n// // //       }\n// // //     } catch (error) {\n// // //       console.error('Error during login:', error);\n// // //       alert(\"Something went wrong. Please try again later.\");\n// // //     }\n// // //   };\n\n// // //   const onChange = (e) => {\n// // //     setCredentials({ ...credentials, [e.target.name]: e.target.value });\n// // //   };\n\n// // //   return (\n// // //     <div style={{ backgroundImage: 'url(\"https://images.pexels.com/photos/326278/pexels-photo-326278.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")', height: '100vh', backgroundSize: 'cover' }}>\n// // //       <Navbar />\n// // //       <div className='container'>\n// // //         <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n// // //           <div className=\"m-3\">\n// // //             <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\n// // //             <input\n// // //               type=\"email\"\n// // //               className=\"form-control\"\n// // //               name='email'\n// // //               value={credentials.email}\n// // //               onChange={onChange}\n// // //               aria-describedby=\"emailHelp\"\n// // //               required\n// // //             />\n// // //             <div id=\"emailHelp\" className=\"form-text\">We'll never share your email with anyone.</div>\n// // //           </div>\n// // //           <div className=\"m-3\">\n// // //             <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\n// // //             <input\n// // //               type=\"password\"\n// // //               className=\"form-control\"\n// // //               name='password'\n// // //               value={credentials.password}\n// // //               onChange={onChange}\n// // //               required\n// // //             />\n// // //           </div>\n// // //           <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n// // //           <Link to=\"/signup\" className=\"m-3 mx-1 btn btn-danger\">I'm a new user</Link>\n// // //         </form>\n// // //       </div>\n// // //     </div>\n// // //   );\n// // // }\n\n\n// // import React, { useState } from 'react';\n// // import { useNavigate, Link } from 'react-router-dom';\n// // import Navbar from '../components/Navbar';\n\n// // export default function Login() {\n// //   const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\n// //   const navigate = useNavigate();\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n\n// //     try {\n// //       const response = await fetch(\"http://localhost:5000/api/loginuser\", {\n// //         method: 'POST',\n// //         headers: {\n// //           'Content-Type': 'application/json',\n// //         },\n// //         body: JSON.stringify({ email: credentials.email, password: credentials.password }),\n// //       });\n\n// //       const json = await response.json();\n\n// //       if (json.success) {\n// //         // Store the token and email in local storage\n// //         localStorage.setItem(\"authToken\", json.authToken);\n// //         localStorage.setItem(\"userEmail\", credentials.email);\n\n// //         // If user is admin, navigate to an admin page\n// //         const user = await fetchUserData(credentials.email); // Fetch user data to check if admin\n// //         if (user.role === 'admin') {\n// //           navigate(\"/admin/upload\"); // Assuming an admin upload page exists\n// //         } else {\n// //           navigate(\"/\"); // Otherwise, navigate to the home page\n// //         }\n// //       } else {\n// //         alert(\"Invalid credentials. Please try again.\");\n// //       }\n// //     } catch (error) {\n// //       console.error('Error during login:', error);\n// //       alert(\"Something went wrong. Please try again later.\");\n// //     }\n// //   };\n\n// //   const fetchUserData = async (email) => {\n// //     const response = await fetch(`http://localhost:5000/api/getUserByEmail/${email}`);\n// //     const data = await response.json();\n// //     return data;\n// //   };\n\n// //   const onChange = (e) => {\n// //     setCredentials({ ...credentials, [e.target.name]: e.target.value });\n// //   };\n\n// //   return (\n// //     <div style={{ backgroundImage: 'url(\"https://images.pexels.com/photos/326278/pexels-photo-326278.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")', height: '100vh', backgroundSize: 'cover' }}>\n// //       <Navbar />\n// //       <div className='container'>\n// //         <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n// //           <div className=\"m-3\">\n// //             <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\n// //             <input\n// //               type=\"email\"\n// //               className=\"form-control\"\n// //               name='email'\n// //               value={credentials.email}\n// //               onChange={onChange}\n// //               aria-describedby=\"emailHelp\"\n// //               required\n// //             />\n// //           </div>\n// //           <div className=\"m-3\">\n// //             <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\n// //             <input\n// //               type=\"password\"\n// //               className=\"form-control\"\n// //               name='password'\n// //               value={credentials.password}\n// //               onChange={onChange}\n// //               required\n// //             />\n// //           </div>\n// //           <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n// //           <Link to=\"/signup\" className=\"m-3 mx-1 btn btn-danger\">I'm a new user</Link>\n// //         </form>\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n\n\n// import React, { useState } from 'react';\n// import { useNavigate, Link } from 'react-router-dom';\n// import Navbar from '../components/Navbar';\n\n// export default function Login() {\n//   const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const response = await fetch(\"http://localhost:5000/api/loginuser\", {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ email: credentials.email, password: credentials.password }),\n//       });\n\n//       const json = await response.json();\n\n//       if (json.success) {\n//         // Store the token and email in local storage\n//         localStorage.setItem(\"authToken\", json.authToken);\n//         localStorage.setItem(\"userEmail\", credentials.email);\n\n//         // If user is admin, navigate to an admin page\n//         const user = await fetchUserData(credentials.email); // Fetch user data to check if admin\n//         if (user.role === 'admin') {\n//           navigate(\"/admin/upload\"); // Assuming an admin upload page exists\n//         } else {\n//           navigate(\"/\"); // Otherwise, navigate to the home page\n//         }\n//       } else {\n//         alert(\"Invalid credentials. Please try again.\");\n//       }\n//     } catch (error) {\n//       console.error('Error during login:', error);\n//       alert(\"Something went wrong. Please try again later.\");\n//     }\n//   };\n\n//   const fetchUserData = async (email) => {\n//     const response = await fetch(`http://localhost:5000/api/getUserByEmail/${email}`);\n//     const data = await response.json();\n//     return data;\n//   };\n\n//   const onChange = (e) => {\n//     setCredentials({ ...credentials, [e.target.name]: e.target.value });\n//   };\n\n//   return (\n//     <div style={{ backgroundImage: 'url(\"https://images.pexels.com/photos/326278/pexels-photo-326278.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")', height: '100vh', backgroundSize: 'cover' }}>\n//       <Navbar />\n//       <div className='container'>\n//         <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\n//             <input\n//               type=\"email\"\n//               className=\"form-control\"\n//               name='email'\n//               value={credentials.email}\n//               onChange={onChange}\n//               aria-describedby=\"emailHelp\"\n//               required\n//             />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\n//             <input\n//               type=\"password\"\n//               className=\"form-control\"\n//               name='password'\n//               value={credentials.password}\n//               onChange={onChange}\n//               required\n//             />\n//           </div>\n//           <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n//           <Link to=\"/signup\" className=\"m-3 mx-1 btn btn-danger\">I'm a new user</Link>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\nimport React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport Navbar from '../components/Navbar';\n\nexport default function Login() {\n  const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\n  const navigate = useNavigate();\n\n \n\n  const fetchUserData = async (email) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/getUserByEmail/${email}`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\n        },\n      });\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n      return null;\n    }\n  };\n\n  const onChange = (e) => {\n    setCredentials({ ...credentials, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <div style={{ backgroundImage: 'url(\"https://images.pexels.com/photos/326278/pexels-photo-326278.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")', height: '100vh', backgroundSize: 'cover' }}>\n      <Navbar />\n      <div className='container'>\n        <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n          <div className=\"m-3\">\n            <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              name='email'\n              value={credentials.email}\n              onChange={onChange}\n              aria-describedby=\"emailHelp\"\n              required\n            />\n          </div>\n          <div className=\"m-3\">\n            <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              name='password'\n              value={credentials.password}\n              onChange={onChange}\n              required\n            />\n          </div>\n          <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n          <Link to=\"/signup\" className=\"m-3 mx-1 btn btn-danger\">I'm a new user</Link>\n        </form>\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}