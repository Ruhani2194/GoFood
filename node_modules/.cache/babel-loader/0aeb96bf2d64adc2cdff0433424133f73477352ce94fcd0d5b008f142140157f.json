{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruhan\\\\Documents\\\\gofood\\\\mernapp\\\\src\\\\screens\\\\Signup.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react'\n// import { useNavigate, Link } from 'react-router-dom'\n// import Navbar from '../components/Navbar';\n// export default function Signup() {\n//   const [credentials, setCredentials] = useState({ name: \"\", email: \"\", password: \"\", geolocation: \"\" })\n//   let [address, setAddress] = useState(\"\");\n//   let navigate = useNavigate()\n\n//   const handleClick = async (e) => {\n//     e.preventDefault();\n//     let navLocation = () => {\n//       return new Promise((res, rej) => {\n//         navigator.geolocation.getCurrentPosition(res, rej);\n//       });\n//     }\n//     let latlong = await navLocation().then(res => {\n//       let latitude = res.coords.latitude;\n//       let longitude = res.coords.longitude;\n//       return [latitude, longitude]\n//     })\n//     // console.log(latlong)\n//     let [lat, long] = latlong\n//     console.log(lat, long)\n//     const response = await fetch(\"http://localhost:5000/api/auth/getlocation\", {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json'\n//       },\n//       // body: JSON.stringify({ latlong: { lat, long } })\n//       body: JSON.stringify({name:credentials.name,email:credentials.email,password:credentials.password,location:credentials.geolocation})\n\n//     });\n//     // const { location } = await response.json()\n//     // console.log(location);\n//     // setAddress(location);\n//     // setCredentials({ ...credentials, [e.target.name]: location })\n//     const json = await response.json()\n//     console.log(json);\n//     if(!json.success){\n//       alert(\"Enter Valid Credentials\")\n//     }\n//   }\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const response = await fetch(\"http://localhost:5000/api/createuser\", {\n//       // credentials: 'include',\n//       // Origin:\"http://localhost:3000/login\",\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify({ name: credentials.name, email: credentials.email, password: credentials.password, location: credentials.geolocation })\n\n//     });\n//     const json = await response.json()\n//     console.log(json);\n//     if (json.success) {\n//       //save the auth toke to local storage and redirect\n//       localStorage.setItem('token', json.authToken)\n//       navigate(\"/login\")\n\n//     }\n//     else {\n//       alert(\"Enter Valid Credentials\")\n//     }\n//   }\n\n//   const onChange = (e) => {\n//     setCredentials({ ...credentials, [e.target.name]: e.target.value })\n//   }\n\n//   return (\n//     <div style={{ backgroundImage: 'url(\"https://images.pexels.com/photos/1565982/pexels-photo-1565982.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")', backgroundSize: 'cover',height: '100vh' }}>\n//       <div>\n//       <Navbar />\n//       </div>\n\n//         <div className='container' >\n//           <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n//             <div className=\"m-3\">\n//               <label htmlFor=\"name\" className=\"form-label\">Name</label>\n//               <input type=\"text\" className=\"form-control\" name='name' value={credentials.name} onChange={onChange} aria-describedby=\"emailHelp\" />\n//             </div>\n//             <div className=\"m-3\">\n//               <label htmlFor=\"email\" className=\"form-label\">Email address</label>\n//               <input type=\"email\" className=\"form-control\" name='email' value={credentials.email} onChange={onChange} aria-describedby=\"emailHelp\" />\n//             </div>\n//             <div className=\"m-3\">\n//               <label htmlFor=\"address\" className=\"form-label\">Address</label>\n//               <fieldset>\n//                 <input type=\"text\" className=\"form-control\" name='address' placeholder='\"Click below for fetching address\"' value={address} onChange={(e)=>setAddress(e.target.value)} aria-describedby=\"emailHelp\" />\n//               </fieldset>\n//             </div>\n//             <div className=\"m-3\">\n//               <button type=\"button\" onClick={handleClick} name=\"geolocation\" className=\" btn btn-success\">Click for current Location </button>\n//             </div>\n//             <div className=\"m-3\">\n//               <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\n//               <input type=\"password\" className=\"form-control\" value={credentials.password} onChange={onChange} name='password' />\n//             </div>\n//             <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n//             <Link to=\"/login\" className=\"m-3 mx-1 btn btn-danger\">Already a user</Link>\n//           </form>\n//         </div>\n//       </div>\n//   )\n// }\n\nimport React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport Navbar from '../components/Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Signup() {\n  _s();\n  const [credentials, setCredentials] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    geolocation: \"\"\n  });\n  let [address, setAddress] = useState(\"\");\n  let navigate = useNavigate();\n  const handleClick = async e => {\n    e.preventDefault();\n    try {\n      let navLocation = () => {\n        return new Promise((res, rej) => {\n          navigator.geolocation.getCurrentPosition(res, rej);\n        });\n      };\n      let latlong = await navLocation().then(res => {\n        let latitude = res.coords.latitude;\n        let longitude = res.coords.longitude;\n        return [latitude, longitude];\n      });\n      let [lat, long] = latlong;\n      console.log(lat, long);\n      const response = await fetch(\"http://localhost:5000/api/auth/getlocation\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          latlong: {\n            lat,\n            long\n          }\n        })\n      });\n      const data = await response.json();\n      console.log(data.location);\n      setAddress(data.location);\n      setCredentials({\n        ...credentials,\n        geolocation: data.location\n      });\n    } catch (error) {\n      console.error('Error fetching location:', error);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\"http://localhost:5000/api/auth/createuser\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: credentials.name,\n          email: credentials.email,\n          password: credentials.password,\n          location: credentials.geolocation\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch');\n      }\n      const json = await response.json();\n      console.log(json);\n      if (json.success) {\n        localStorage.setItem('token', json.authToken);\n        navigate(\"/login\");\n      } else {\n        alert(\"Enter Valid Credentials\");\n      }\n    } catch (error) {\n      console.error('Error during submission:', error);\n    }\n  };\n  const onChange = e => {\n    setCredentials({\n      ...credentials,\n      [e.target.name]: e.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundImage: 'url(\"https://images.pexels.com/photos/1565982/pexels-photo-1565982.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")',\n      backgroundSize: 'cover',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"w-50 m-auto mt-5 border bg-dark border-success rounded\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            className: \"form-label\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"name\",\n            value: credentials.name,\n            onChange: onChange,\n            \"aria-describedby\": \"emailHelp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"form-label\",\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: \"form-control\",\n            name: \"email\",\n            value: credentials.email,\n            onChange: onChange,\n            \"aria-describedby\": \"emailHelp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"address\",\n            className: \"form-label\",\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"address\",\n              placeholder: \"\\\"Click below for fetching address\\\"\",\n              value: address,\n              onChange: e => setAddress(e.target.value),\n              \"aria-describedby\": \"emailHelp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-3\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleClick,\n            name: \"geolocation\",\n            className: \"btn btn-success\",\n            children: \"Click for current Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"exampleInputPassword1\",\n            className: \"form-label\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"form-control\",\n            value: credentials.password,\n            onChange: onChange,\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"m-3 btn btn-success\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          className: \"m-3 mx-1 btn btn-danger\",\n          children: \"Already a user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n}\n_s(Signup, \"bM0qxDmG5+pi1Id5+Fg59HSeK1c=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","useNavigate","Link","Navbar","jsxDEV","_jsxDEV","Signup","_s","credentials","setCredentials","name","email","password","geolocation","address","setAddress","navigate","handleClick","e","preventDefault","navLocation","Promise","res","rej","navigator","getCurrentPosition","latlong","then","latitude","coords","longitude","lat","long","console","log","response","fetch","method","headers","body","JSON","stringify","data","json","location","error","handleSubmit","ok","Error","success","localStorage","setItem","authToken","alert","onChange","target","value","style","backgroundImage","backgroundSize","height","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","type","placeholder","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/ruhan/Documents/gofood/mernapp/src/screens/Signup.js"],"sourcesContent":["// import React, { useState } from 'react'\n// import { useNavigate, Link } from 'react-router-dom'\n// import Navbar from '../components/Navbar';\n// export default function Signup() {\n//   const [credentials, setCredentials] = useState({ name: \"\", email: \"\", password: \"\", geolocation: \"\" })\n//   let [address, setAddress] = useState(\"\");\n//   let navigate = useNavigate()\n\n//   const handleClick = async (e) => {\n//     e.preventDefault();\n//     let navLocation = () => {\n//       return new Promise((res, rej) => {\n//         navigator.geolocation.getCurrentPosition(res, rej);\n//       });\n//     }\n//     let latlong = await navLocation().then(res => {\n//       let latitude = res.coords.latitude;\n//       let longitude = res.coords.longitude;\n//       return [latitude, longitude]\n//     })\n//     // console.log(latlong)\n//     let [lat, long] = latlong\n//     console.log(lat, long)\n//     const response = await fetch(\"http://localhost:5000/api/auth/getlocation\", {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json'\n//       },\n//       // body: JSON.stringify({ latlong: { lat, long } })\n//       body: JSON.stringify({name:credentials.name,email:credentials.email,password:credentials.password,location:credentials.geolocation})\n\n//     });\n//     // const { location } = await response.json()\n//     // console.log(location);\n//     // setAddress(location);\n//     // setCredentials({ ...credentials, [e.target.name]: location })\n//     const json = await response.json()\n//     console.log(json);\n//     if(!json.success){\n//       alert(\"Enter Valid Credentials\")\n//     }\n//   }\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const response = await fetch(\"http://localhost:5000/api/createuser\", {\n//       // credentials: 'include',\n//       // Origin:\"http://localhost:3000/login\",\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify({ name: credentials.name, email: credentials.email, password: credentials.password, location: credentials.geolocation })\n\n//     });\n//     const json = await response.json()\n//     console.log(json);\n//     if (json.success) {\n//       //save the auth toke to local storage and redirect\n//       localStorage.setItem('token', json.authToken)\n//       navigate(\"/login\")\n\n//     }\n//     else {\n//       alert(\"Enter Valid Credentials\")\n//     }\n//   }\n\n//   const onChange = (e) => {\n//     setCredentials({ ...credentials, [e.target.name]: e.target.value })\n//   }\n\n//   return (\n//     <div style={{ backgroundImage: 'url(\"https://images.pexels.com/photos/1565982/pexels-photo-1565982.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")', backgroundSize: 'cover',height: '100vh' }}>\n//       <div>\n//       <Navbar />\n//       </div>\n\n//         <div className='container' >\n//           <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n//             <div className=\"m-3\">\n//               <label htmlFor=\"name\" className=\"form-label\">Name</label>\n//               <input type=\"text\" className=\"form-control\" name='name' value={credentials.name} onChange={onChange} aria-describedby=\"emailHelp\" />\n//             </div>\n//             <div className=\"m-3\">\n//               <label htmlFor=\"email\" className=\"form-label\">Email address</label>\n//               <input type=\"email\" className=\"form-control\" name='email' value={credentials.email} onChange={onChange} aria-describedby=\"emailHelp\" />\n//             </div>\n//             <div className=\"m-3\">\n//               <label htmlFor=\"address\" className=\"form-label\">Address</label>\n//               <fieldset>\n//                 <input type=\"text\" className=\"form-control\" name='address' placeholder='\"Click below for fetching address\"' value={address} onChange={(e)=>setAddress(e.target.value)} aria-describedby=\"emailHelp\" />\n//               </fieldset>\n//             </div>\n//             <div className=\"m-3\">\n//               <button type=\"button\" onClick={handleClick} name=\"geolocation\" className=\" btn btn-success\">Click for current Location </button>\n//             </div>\n//             <div className=\"m-3\">\n//               <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\n//               <input type=\"password\" className=\"form-control\" value={credentials.password} onChange={onChange} name='password' />\n//             </div>\n//             <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n//             <Link to=\"/login\" className=\"m-3 mx-1 btn btn-danger\">Already a user</Link>\n//           </form>\n//         </div>\n//       </div>\n//   )\n// }\n\nimport React, { useState } from 'react'\nimport { useNavigate, Link } from 'react-router-dom'\nimport Navbar from '../components/Navbar';\n\nexport default function Signup() {\n  const [credentials, setCredentials] = useState({ name: \"\", email: \"\", password: \"\", geolocation: \"\" });\n  let [address, setAddress] = useState(\"\");\n  let navigate = useNavigate();\n\n  const handleClick = async (e) => {\n    e.preventDefault();\n    try {\n      let navLocation = () => {\n        return new Promise((res, rej) => {\n          navigator.geolocation.getCurrentPosition(res, rej);\n        });\n      }\n      let latlong = await navLocation().then(res => {\n        let latitude = res.coords.latitude;\n        let longitude = res.coords.longitude;\n        return [latitude, longitude];\n      });\n      let [lat, long] = latlong;\n      console.log(lat, long);\n      const response = await fetch(\"http://localhost:5000/api/auth/getlocation\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ latlong: { lat, long } })\n      });\n      const data = await response.json();\n      console.log(data.location);\n      setAddress(data.location);\n      setCredentials({ ...credentials, geolocation: data.location });\n    } catch (error) {\n      console.error('Error fetching location:', error);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\"http://localhost:5000/api/auth/createuser\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ \n          name: credentials.name, \n          email: credentials.email, \n          password: credentials.password, \n          location: credentials.geolocation \n        })\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to fetch');\n      }\n\n      const json = await response.json();\n      console.log(json);\n      if (json.success) {\n        localStorage.setItem('token', json.authToken);\n        navigate(\"/login\");\n      } else {\n        alert(\"Enter Valid Credentials\");\n      }\n    } catch (error) {\n      console.error('Error during submission:', error);\n    }\n  };\n\n  const onChange = (e) => {\n    setCredentials({ ...credentials, [e.target.name]: e.target.value });\n  }\n\n  return (\n    <div style={{ backgroundImage: 'url(\"https://images.pexels.com/photos/1565982/pexels-photo-1565982.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")', backgroundSize: 'cover', height: '100vh' }}>\n      <div>\n        <Navbar />\n      </div>\n\n      <div className='container'>\n        <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n          <div className=\"m-3\">\n            <label htmlFor=\"name\" className=\"form-label\">Name</label>\n            <input type=\"text\" className=\"form-control\" name='name' value={credentials.name} onChange={onChange} aria-describedby=\"emailHelp\" />\n          </div>\n          <div className=\"m-3\">\n            <label htmlFor=\"email\" className=\"form-label\">Email address</label>\n            <input type=\"email\" className=\"form-control\" name='email' value={credentials.email} onChange={onChange} aria-describedby=\"emailHelp\" />\n          </div>\n          <div className=\"m-3\">\n            <label htmlFor=\"address\" className=\"form-label\">Address</label>\n            <fieldset>\n              <input type=\"text\" className=\"form-control\" name='address' placeholder='\"Click below for fetching address\"' value={address} onChange={(e) => setAddress(e.target.value)} aria-describedby=\"emailHelp\" />\n            </fieldset>\n          </div>\n          <div className=\"m-3\">\n            <button type=\"button\" onClick={handleClick} name=\"geolocation\" className=\"btn btn-success\">Click for current Location</button>\n          </div>\n          <div className=\"m-3\">\n            <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\n            <input type=\"password\" className=\"form-control\" value={credentials.password} onChange={onChange} name='password' />\n          </div>\n          <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n          <Link to=\"/login\" className=\"m-3 mx-1 btn btn-danger\">Already a user</Link>\n        </form>\n      </div>\n    </div>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}