{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruhan\\\\Documents\\\\gofood\\\\mernapp\\\\src\\\\components\\\\Footer.js\",\n  _s = $RefreshSig$();\n// // // // // // // // // // // import React from 'react'\n// // // // // // // // // // // import {link} from 'react-router-dom'\n// // // // // // // // // // // export default function Footer() {\n// // // // // // // // // // //   return (\n// // // // // // // // // // //     <div><div className=\"container\">\n// // // // // // // // // // //     <footer className=\"d-flex flex-wrap justify-content-between align-items-center py-3 my-4 border-top\">\n// // // // // // // // // // //       <div className=\"col-md-4 d-flex align-items-center\">\n// // // // // // // // // // //         <link to=\"/\" className=\"mb-3 me-2 mb-md-0 text-muted text-decoration-none lh-1\">\n// // // // // // // // // // //         </link>\n// // // // // // // // // // //         <span className=\"text-muted\">Â© 2024<i>GoFood</i>, Inc</span>\n// // // // // // // // // // //       </div>\n\n// // // // // // // // // // //       {/* <ul className=\"nav col-md-4 justify-content-end list-unstyled d-flex\">\n// // // // // // // // // // //         <li className=\"ms-3\"><a className=\"text-muted\" href=\"/\"><svg className=\"bi\" width=\"24\" height=\"24\"><use ></use></svg></a></li>\n// // // // // // // // // // //         <li className=\"ms-3\"><a className=\"text-muted\" href=\"/\"><svg className=\"bi\" width=\"24\" height=\"24\"><use ></use></svg></a></li>\n// // // // // // // // // // //         <li className=\"ms-3\"><a className=\"text-muted\" href=\"/\"><svg className=\"bi\" width=\"24\" height=\"24\"><use></use></svg></a></li>\n// // // // // // // // // // //       </ul> */}\n// // // // // // // // // // //     </footer>\n// // // // // // // // // // //   </div>\n// // // // // // // // // // //   </div>\n// // // // // // // // // // //   )\n// // // // // // // // // // // }\n\n// // // // // // // // // // import React, { useEffect, useState } from 'react';\n\n// // // // // // // // // // function Footer() {\n// // // // // // // // // //   const [reviews, setReviews] = useState([]);\n// // // // // // // // // //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// // // // // // // // // //   const [editReview, setEditReview] = useState(null);\n\n// // // // // // // // // //   // Fetch reviews from the backend\n// // // // // // // // // //   const fetchReviews = async () => {\n// // // // // // // // // //     try {\n// // // // // // // // // //       const response = await fetch('http://localhost:5000/api/reviews');\n// // // // // // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // // // // // //       const data = await response.json();\n// // // // // // // // // //       setReviews(data);\n// // // // // // // // // //     } catch (error) {\n// // // // // // // // // //       console.error('Error fetching reviews:', error);\n// // // // // // // // // //     }\n// // // // // // // // // //   };\n\n// // // // // // // // // //   useEffect(() => {\n// // // // // // // // // //     fetchReviews();\n// // // // // // // // // //   }, []);\n\n// // // // // // // // // //   // Create a new review\n// // // // // // // // // //   const handleCreate = async () => {\n// // // // // // // // // //     try {\n// // // // // // // // // //       const response = await fetch('http://localhost:5000/api/reviews', {\n// // // // // // // // // //         method: 'POST',\n// // // // // // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // // // // // //         body: JSON.stringify(newReview),\n// // // // // // // // // //       });\n// // // // // // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // // // // // //       const data = await response.json();\n// // // // // // // // // //       setReviews([...reviews, data]);\n// // // // // // // // // //       setNewReview({ user: '', comment: '', rating: 1 });\n// // // // // // // // // //     } catch (error) {\n// // // // // // // // // //       console.error('Error creating review:', error);\n// // // // // // // // // //     }\n// // // // // // // // // //   };\n\n// // // // // // // // // //   // Update an existing review\n// // // // // // // // // //   const handleUpdate = async () => {\n// // // // // // // // // //     if (!editReview) return;\n\n// // // // // // // // // //     try {\n// // // // // // // // // //       const response = await fetch(`http://localhost:5000/api/reviews/${editReview._id}`, {\n// // // // // // // // // //         method: 'PUT',\n// // // // // // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // // // // // //         body: JSON.stringify(editReview),\n// // // // // // // // // //       });\n// // // // // // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // // // // // //       const data = await response.json();\n// // // // // // // // // //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// // // // // // // // // //       setEditReview(null);\n// // // // // // // // // //     } catch (error) {\n// // // // // // // // // //       console.error('Error updating review:', error);\n// // // // // // // // // //     }\n// // // // // // // // // //   };\n\n// // // // // // // // // //   // Delete a review\n// // // // // // // // // //   const handleDelete = async (id) => {\n// // // // // // // // // //     try {\n// // // // // // // // // //       const response = await fetch(`http://localhost:5000/api/reviews/${id}`, { method: 'DELETE' });\n// // // // // // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // // // // // //       setReviews(reviews.filter(review => review._id !== id));\n// // // // // // // // // //     } catch (error) {\n// // // // // // // // // //       console.error('Error deleting review:', error);\n// // // // // // // // // //     }\n// // // // // // // // // //   };\n\n// // // // // // // // // //   return (\n// // // // // // // // // //     <footer className=\"bg-dark text-light py-3\">\n// // // // // // // // // //       <div className=\"container\">\n// // // // // // // // // //         <h4>User Reviews</h4>\n// // // // // // // // // //         <ul className=\"list-unstyled\">\n// // // // // // // // // //           {reviews.map(review => (\n// // // // // // // // // //             <li key={review._id} className=\"mb-2\">\n// // // // // // // // // //               <div>\n// // // // // // // // // //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// // // // // // // // // //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// // // // // // // // // //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// // // // // // // // // //               </div>\n// // // // // // // // // //             </li>\n// // // // // // // // // //           ))}\n// // // // // // // // // //         </ul>\n// // // // // // // // // //         {editReview ? (\n// // // // // // // // // //           <div>\n// // // // // // // // // //             <h5>Edit Review</h5>\n// // // // // // // // // //             <input\n// // // // // // // // // //               type=\"text\"\n// // // // // // // // // //               value={editReview.user}\n// // // // // // // // // //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// // // // // // // // // //               placeholder=\"User\"\n// // // // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // // // //             />\n// // // // // // // // // //             <input\n// // // // // // // // // //               type=\"text\"\n// // // // // // // // // //               value={editReview.comment}\n// // // // // // // // // //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// // // // // // // // // //               placeholder=\"Comment\"\n// // // // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // // // //             />\n// // // // // // // // // //             <input\n// // // // // // // // // //               type=\"number\"\n// // // // // // // // // //               min=\"1\"\n// // // // // // // // // //               max=\"5\"\n// // // // // // // // // //               value={editReview.rating}\n// // // // // // // // // //               onChange={(e) => setEditReview({ ...editReview, rating: Number(e.target.value) })}\n// // // // // // // // // //               placeholder=\"Rating\"\n// // // // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // // // //             />\n// // // // // // // // // //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// // // // // // // // // //           </div>\n// // // // // // // // // //         ) : (\n// // // // // // // // // //           <div>\n// // // // // // // // // //             <h5>Add Review</h5>\n// // // // // // // // // //             <input\n// // // // // // // // // //               type=\"text\"\n// // // // // // // // // //               value={newReview.user}\n// // // // // // // // // //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// // // // // // // // // //               placeholder=\"User\"\n// // // // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // // // //             />\n// // // // // // // // // //             <input\n// // // // // // // // // //               type=\"text\"\n// // // // // // // // // //               value={newReview.comment}\n// // // // // // // // // //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// // // // // // // // // //               placeholder=\"Comment\"\n// // // // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // // // //             />\n// // // // // // // // // //             <input\n// // // // // // // // // //               type=\"number\"\n// // // // // // // // // //               min=\"1\"\n// // // // // // // // // //               max=\"5\"\n// // // // // // // // // //               value={newReview.rating}\n// // // // // // // // // //               onChange={(e) => setNewReview({ ...newReview, rating: Number(e.target.value) })}\n// // // // // // // // // //               placeholder=\"Rating\"\n// // // // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // // // //             />\n// // // // // // // // // //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// // // // // // // // // //           </div>\n// // // // // // // // // //         )}\n// // // // // // // // // //       </div>\n// // // // // // // // // //     </footer>\n// // // // // // // // // //   );\n// // // // // // // // // // }\n\n// // // // // // // // // // export default Footer;\n\n// // // // // // // // // import React, { useEffect, useState } from 'react';\n\n// // // // // // // // // function Footer() {\n// // // // // // // // //   const [reviews, setReviews] = useState([]);\n// // // // // // // // //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// // // // // // // // //   const [editReview, setEditReview] = useState(null);\n\n// // // // // // // // //   // Fetch reviews from the backend\n// // // // // // // // //   const fetchReviews = async () => {\n// // // // // // // // //     try {\n// // // // // // // // //       const response = await fetch('http://localhost:5000/api/reviews');\n// // // // // // // // //       const data = await response.json();\n// // // // // // // // //       setReviews(data);\n// // // // // // // // //     } catch (error) {\n// // // // // // // // //       console.error('Error fetching reviews:', error);\n// // // // // // // // //     }\n// // // // // // // // //   };\n\n// // // // // // // // //   useEffect(() => {\n// // // // // // // // //     fetchReviews();\n// // // // // // // // //   }, []);\n\n// // // // // // // // //   // Create a new review\n// // // // // // // // //   const handleCreate = async () => {\n// // // // // // // // //     try {\n// // // // // // // // //       const response = await fetch('http://localhost:5000/api/reviews', {\n// // // // // // // // //         method: 'POST',\n// // // // // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // // // // //         body: JSON.stringify(newReview),\n// // // // // // // // //       });\n// // // // // // // // //       const data = await response.json();\n// // // // // // // // //       setReviews([...reviews, data]);\n// // // // // // // // //       setNewReview({ user: '', comment: '', rating: 1 });\n// // // // // // // // //     } catch (error) {\n// // // // // // // // //       console.error('Error creating review:', error);\n// // // // // // // // //     }\n// // // // // // // // //   };\n\n// // // // // // // // //   // Update an existing review\n// // // // // // // // //   const handleUpdate = async () => {\n// // // // // // // // //     if (!editReview) return;\n\n// // // // // // // // //     try {\n// // // // // // // // //       const response = await fetch(`http://localhost:5000/api/reviews/${editReview._id}`, {\n// // // // // // // // //         method: 'PUT',\n// // // // // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // // // // //         body: JSON.stringify(editReview),\n// // // // // // // // //       });\n// // // // // // // // //       const data = await response.json();\n// // // // // // // // //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// // // // // // // // //       setEditReview(null);\n// // // // // // // // //     } catch (error) {\n// // // // // // // // //       console.error('Error updating review:', error);\n// // // // // // // // //     }\n// // // // // // // // //   };\n\n// // // // // // // // //   // Delete a review\n// // // // // // // // //   const handleDelete = async (id) => {\n// // // // // // // // //     try {\n// // // // // // // // //       await fetch(`http://localhost:5000/api/reviews/${id}`, { method: 'DELETE' });\n// // // // // // // // //       setReviews(reviews.filter(review => review._id !== id));\n// // // // // // // // //     } catch (error) {\n// // // // // // // // //       console.error('Error deleting review:', error);\n// // // // // // // // //     }\n// // // // // // // // //   };\n\n// // // // // // // // //   return (\n// // // // // // // // //     <footer className=\"bg-dark text-light py-3\">\n// // // // // // // // //       <div className=\"container\">\n// // // // // // // // //         <h4>User Reviews</h4>\n// // // // // // // // //         <ul className=\"list-unstyled\">\n// // // // // // // // //           {reviews.map(review => (\n// // // // // // // // //             <li key={review._id}>\n// // // // // // // // //               <div>\n// // // // // // // // //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// // // // // // // // //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// // // // // // // // //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// // // // // // // // //               </div>\n// // // // // // // // //             </li>\n// // // // // // // // //           ))}\n// // // // // // // // //         </ul>\n// // // // // // // // //         {editReview ? (\n// // // // // // // // //           <div>\n// // // // // // // // //             <h5>Edit Review</h5>\n// // // // // // // // //             <input\n// // // // // // // // //               type=\"text\"\n// // // // // // // // //               value={editReview.user}\n// // // // // // // // //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// // // // // // // // //               placeholder=\"User\"\n// // // // // // // // //             />\n// // // // // // // // //             <input\n// // // // // // // // //               type=\"text\"\n// // // // // // // // //               value={editReview.comment}\n// // // // // // // // //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// // // // // // // // //               placeholder=\"Comment\"\n// // // // // // // // //             />\n// // // // // // // // //             <input\n// // // // // // // // //               type=\"number\"\n// // // // // // // // //               min=\"1\"\n// // // // // // // // //               max=\"5\"\n// // // // // // // // //               value={editReview.rating}\n// // // // // // // // //               onChange={(e) => setEditReview({ ...editReview, rating: e.target.value })}\n// // // // // // // // //               placeholder=\"Rating\"\n// // // // // // // // //             />\n// // // // // // // // //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// // // // // // // // //           </div>\n// // // // // // // // //         ) : (\n// // // // // // // // //           <div>\n// // // // // // // // //             <h5>Add Review</h5>\n// // // // // // // // //             <input\n// // // // // // // // //               type=\"text\"\n// // // // // // // // //               value={newReview.user}\n// // // // // // // // //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// // // // // // // // //               placeholder=\"User\"\n// // // // // // // // //             />\n// // // // // // // // //             <input\n// // // // // // // // //               type=\"text\"\n// // // // // // // // //               value={newReview.comment}\n// // // // // // // // //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// // // // // // // // //               placeholder=\"Comment\"\n// // // // // // // // //             />\n// // // // // // // // //             <input\n// // // // // // // // //               type=\"number\"\n// // // // // // // // //               min=\"1\"\n// // // // // // // // //               max=\"5\"\n// // // // // // // // //               value={newReview.rating}\n// // // // // // // // //               onChange={(e) => setNewReview({ ...newReview, rating: e.target.value })}\n// // // // // // // // //               placeholder=\"Rating\"\n// // // // // // // // //             />\n// // // // // // // // //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// // // // // // // // //           </div>\n// // // // // // // // //         )}\n// // // // // // // // //       </div>\n// // // // // // // // //     </footer>\n// // // // // // // // //   );\n// // // // // // // // // }\n\n// // // // // // // // // export default Footer;\n\n// // // // // // // // import React, { useEffect, useState } from 'react';\n\n// // // // // // // // function Footer() {\n// // // // // // // //   const [reviews, setReviews] = useState([]);\n// // // // // // // //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// // // // // // // //   const [editReview, setEditReview] = useState(null);\n\n// // // // // // // //   // Fetch reviews from the backend\n// // // // // // // //   const fetchReviews = async () => {\n// // // // // // // //     try {\n// // // // // // // //       const response = await fetch('http://localhost:5000/api/reviews');\n// // // // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // // // //       const data = await response.json();\n// // // // // // // //       setReviews(data);\n// // // // // // // //     } catch (error) {\n// // // // // // // //       console.error('Error fetching reviews:', error);\n// // // // // // // //     }\n// // // // // // // //   };\n\n// // // // // // // //   useEffect(() => {\n// // // // // // // //     fetchReviews();\n// // // // // // // //   }, []);\n\n// // // // // // // //   // Create a new review\n// // // // // // // //   const handleCreate = async () => {\n// // // // // // // //     try {\n// // // // // // // //       const response = await fetch('http://localhost:5000/api/reviews', {\n// // // // // // // //         method: 'POST',\n// // // // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // // // //         body: JSON.stringify(newReview),\n// // // // // // // //       });\n// // // // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // // // //       const data = await response.json();\n// // // // // // // //       setReviews([...reviews, data]);\n// // // // // // // //       setNewReview({ user: '', comment: '', rating: 1 });\n// // // // // // // //     } catch (error) {\n// // // // // // // //       console.error('Error creating review:', error);\n// // // // // // // //     }\n// // // // // // // //   };\n\n// // // // // // // //   // Update an existing review\n// // // // // // // //   const handleUpdate = async () => {\n// // // // // // // //     if (!editReview) return;\n\n// // // // // // // //     try {\n// // // // // // // //       const response = await fetch(`http://localhost:5000/api/reviews/${editReview._id}`, {\n// // // // // // // //         method: 'PUT',\n// // // // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // // // //         body: JSON.stringify(editReview),\n// // // // // // // //       });\n// // // // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // // // //       const data = await response.json();\n// // // // // // // //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// // // // // // // //       setEditReview(null);\n// // // // // // // //     } catch (error) {\n// // // // // // // //       console.error('Error updating review:', error);\n// // // // // // // //     }\n// // // // // // // //   };\n\n// // // // // // // //   // Delete a review\n// // // // // // // //   const handleDelete = async (id) => {\n// // // // // // // //     try {\n// // // // // // // //       const response = await fetch(`http://localhost:5000/api/reviews/${id}`, { method: 'DELETE' });\n// // // // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // // // //       setReviews(reviews.filter(review => review._id !== id));\n// // // // // // // //     } catch (error) {\n// // // // // // // //       console.error('Error deleting review:', error);\n// // // // // // // //     }\n// // // // // // // //   };\n\n// // // // // // // //   return (\n// // // // // // // //     <footer className=\"bg-dark text-light py-3\">\n// // // // // // // //       <div className=\"container\">\n// // // // // // // //         <h4>User Reviews</h4>\n// // // // // // // //         <ul className=\"list-unstyled\">\n// // // // // // // //           {reviews.map(review => (\n// // // // // // // //             <li key={review._id} className=\"mb-2\">\n// // // // // // // //               <div>\n// // // // // // // //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// // // // // // // //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// // // // // // // //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// // // // // // // //               </div>\n// // // // // // // //             </li>\n// // // // // // // //           ))}\n// // // // // // // //         </ul>\n// // // // // // // //         {editReview ? (\n// // // // // // // //           <div>\n// // // // // // // //             <h5>Edit Review</h5>\n// // // // // // // //             <input\n// // // // // // // //               type=\"text\"\n// // // // // // // //               value={editReview.user}\n// // // // // // // //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// // // // // // // //               placeholder=\"User\"\n// // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // //             />\n// // // // // // // //             <input\n// // // // // // // //               type=\"text\"\n// // // // // // // //               value={editReview.comment}\n// // // // // // // //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// // // // // // // //               placeholder=\"Comment\"\n// // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // //             />\n// // // // // // // //             <input\n// // // // // // // //               type=\"number\"\n// // // // // // // //               min=\"1\"\n// // // // // // // //               max=\"5\"\n// // // // // // // //               value={editReview.rating}\n// // // // // // // //               onChange={(e) => setEditReview({ ...editReview, rating: Number(e.target.value) })}\n// // // // // // // //               placeholder=\"Rating\"\n// // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // //             />\n// // // // // // // //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// // // // // // // //           </div>\n// // // // // // // //         ) : (\n// // // // // // // //           <div>\n// // // // // // // //             <h5>Add Review</h5>\n// // // // // // // //             <input\n// // // // // // // //               type=\"text\"\n// // // // // // // //               value={newReview.user}\n// // // // // // // //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// // // // // // // //               placeholder=\"User\"\n// // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // //             />\n// // // // // // // //             <input\n// // // // // // // //               type=\"text\"\n// // // // // // // //               value={newReview.comment}\n// // // // // // // //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// // // // // // // //               placeholder=\"Comment\"\n// // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // //             />\n// // // // // // // //             <input\n// // // // // // // //               type=\"number\"\n// // // // // // // //               min=\"1\"\n// // // // // // // //               max=\"5\"\n// // // // // // // //               value={newReview.rating}\n// // // // // // // //               onChange={(e) => setNewReview({ ...newReview, rating: Number(e.target.value) })}\n// // // // // // // //               placeholder=\"Rating\"\n// // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // //             />\n// // // // // // // //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// // // // // // // //           </div>\n// // // // // // // //         )}\n// // // // // // // //       </div>\n// // // // // // // //     </footer>\n// // // // // // // //   );\n// // // // // // // // }\n\n// // // // // // // // export default Footer;\n\n// // // // // // // import React, { useEffect, useState } from 'react';\n\n// // // // // // // function Footer() {\n// // // // // // //   const [reviews, setReviews] = useState([]);\n// // // // // // //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// // // // // // //   const [editReview, setEditReview] = useState(null);\n\n// // // // // // //   // Fetch reviews from the backend\n// // // // // // //   const fetchReviews = async () => {\n// // // // // // //     try {\n// // // // // // //       const response = await fetch('http://localhost:5000/api');\n// // // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // // //       const data = await response.json();\n// // // // // // //       setReviews(data);\n// // // // // // //     } catch (error) {\n// // // // // // //       console.error('Error fetching reviews:', error);\n// // // // // // //     }\n// // // // // // //   };\n\n// // // // // // //   useEffect(() => {\n// // // // // // //     fetchReviews();\n// // // // // // //   }, []);\n\n// // // // // // //   // Create a new review\n// // // // // // //   const handleCreate = async () => {\n// // // // // // //     if (!newReview.user || !newReview.comment || newReview.rating < 1 || newReview.rating > 5) {\n// // // // // // //       alert('Please fill out all fields correctly.');\n// // // // // // //       return;\n// // // // // // //     }\n// // // // // // //     try {\n// // // // // // //       const response = await fetch('http://localhost:5000/api', {\n// // // // // // //         method: 'POST',\n// // // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // // //         body: JSON.stringify(newReview),\n// // // // // // //       });\n// // // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // // //       const data = await response.json();\n// // // // // // //       setReviews([...reviews, data]);\n// // // // // // //       setNewReview({ user: '', comment: '', rating: 1 });\n// // // // // // //     } catch (error) {\n// // // // // // //       console.error('Error creating review:', error);\n// // // // // // //     }\n// // // // // // //   };\n\n// // // // // // //   // Update an existing review\n// // // // // // //   const handleUpdate = async () => {\n// // // // // // //     if (!editReview || !editReview.user || !editReview.comment || editReview.rating < 1 || editReview.rating > 5) {\n// // // // // // //       alert('Please fill out all fields correctly.');\n// // // // // // //       return;\n// // // // // // //     }\n// // // // // // //     try {\n// // // // // // //       const response = await fetch(`http://localhost:5000/api/${editReview._id}`, {\n// // // // // // //         method: 'PUT',\n// // // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // // //         body: JSON.stringify(editReview),\n// // // // // // //       });\n// // // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // // //       const data = await response.json();\n// // // // // // //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// // // // // // //       setEditReview(null);\n// // // // // // //     } catch (error) {\n// // // // // // //       console.error('Error updating review:', error);\n// // // // // // //     }\n// // // // // // //   };\n\n// // // // // // //   // Delete a review\n// // // // // // //   const handleDelete = async (id) => {\n// // // // // // //     try {\n// // // // // // //       const response = await fetch(`http://localhost:5000/api/${id}`, { method: 'DELETE' });\n// // // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // // //       setReviews(reviews.filter(review => review._id !== id));\n// // // // // // //     } catch (error) {\n// // // // // // //       console.error('Error deleting review:', error);\n// // // // // // //     }\n// // // // // // //   };\n\n// // // // // // //   return (\n// // // // // // //     <footer className=\"bg-dark text-light py-3\">\n// // // // // // //       <div className=\"container\">\n// // // // // // //         <h4>User Reviews</h4>\n// // // // // // //         <ul className=\"list-unstyled\">\n// // // // // // //           {reviews.map(review => (\n// // // // // // //             <li key={review._id} className=\"mb-2\">\n// // // // // // //               <div>\n// // // // // // //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// // // // // // //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// // // // // // //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// // // // // // //               </div>\n// // // // // // //             </li>\n// // // // // // //           ))}\n// // // // // // //         </ul>\n// // // // // // //         {editReview ? (\n// // // // // // //           <div>\n// // // // // // //             <h5>Edit Review</h5>\n// // // // // // //             <input\n// // // // // // //               type=\"text\"\n// // // // // // //               value={editReview.user}\n// // // // // // //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// // // // // // //               placeholder=\"User\"\n// // // // // // //               className=\"form-control mb-2\"\n// // // // // // //             />\n// // // // // // //             <input\n// // // // // // //               type=\"text\"\n// // // // // // //               value={editReview.comment}\n// // // // // // //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// // // // // // //               placeholder=\"Comment\"\n// // // // // // //               className=\"form-control mb-2\"\n// // // // // // //             />\n// // // // // // //             <input\n// // // // // // //               type=\"number\"\n// // // // // // //               min=\"1\"\n// // // // // // //               max=\"5\"\n// // // // // // //               value={editReview.rating}\n// // // // // // //               onChange={(e) => setEditReview({ ...editReview, rating: Number(e.target.value) })}\n// // // // // // //               placeholder=\"Rating\"\n// // // // // // //               className=\"form-control mb-2\"\n// // // // // // //             />\n// // // // // // //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// // // // // // //           </div>\n// // // // // // //         ) : (\n// // // // // // //           <div>\n// // // // // // //             <h5>Add Review</h5>\n// // // // // // //             <input\n// // // // // // //               type=\"text\"\n// // // // // // //               value={newReview.user}\n// // // // // // //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// // // // // // //               placeholder=\"User\"\n// // // // // // //               className=\"form-control mb-2\"\n// // // // // // //             />\n// // // // // // //             <input\n// // // // // // //               type=\"text\"\n// // // // // // //               value={newReview.comment}\n// // // // // // //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// // // // // // //               placeholder=\"Comment\"\n// // // // // // //               className=\"form-control mb-2\"\n// // // // // // //             />\n// // // // // // //             <input\n// // // // // // //               type=\"number\"\n// // // // // // //               min=\"1\"\n// // // // // // //               max=\"5\"\n// // // // // // //               value={newReview.rating}\n// // // // // // //               onChange={(e) => setNewReview({ ...newReview, rating: Number(e.target.value) })}\n// // // // // // //               placeholder=\"Rating\"\n// // // // // // //               className=\"form-control mb-2\"\n// // // // // // //             />\n// // // // // // //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// // // // // // //           </div>\n// // // // // // //         )}\n// // // // // // //       </div>\n// // // // // // //     </footer>\n// // // // // // //   );\n// // // // // // // }\n\n// // // // // // // export default Footer;\n\n// // // // // // import React, { useEffect, useState } from 'react';\n\n// // // // // // function Footer() {\n// // // // // //   const [reviews, setReviews] = useState([]);\n// // // // // //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// // // // // //   const [editReview, setEditReview] = useState(null);\n\n// // // // // //   // Fetch reviews from the backend\n// // // // // //   const fetchReviews = async () => {\n// // // // // //     try {\n// // // // // //       const response = await fetch('http://localhost:5000/api');\n// // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // //       const data = await response.json();\n// // // // // //       console.log('Fetched reviews:', data); // Debugging\n// // // // // //       setReviews(data);\n// // // // // //     } catch (error) {\n// // // // // //       console.error('Error fetching reviews:', error);\n// // // // // //     }\n// // // // // //   };\n\n// // // // // //   useEffect(() => {\n// // // // // //     fetchReviews();\n// // // // // //   }, []);\n\n// // // // // //   // Create a new review\n// // // // // //   const handleCreate = async () => {\n// // // // // //     if (!newReview.user || !newReview.comment || newReview.rating < 1 || newReview.rating > 5) {\n// // // // // //       alert('Please fill out all fields correctly.');\n// // // // // //       return;\n// // // // // //     }\n// // // // // //     try {\n// // // // // //       const response = await fetch('http://localhost:5000/api', {\n// // // // // //         method: 'POST',\n// // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // //         body: JSON.stringify(newReview),\n// // // // // //       });\n// // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // //       const data = await response.json();\n// // // // // //       console.log('Review added:', data); // Debugging\n// // // // // //       setReviews([...reviews, data]);\n// // // // // //       setNewReview({ user: '', comment: '', rating: 1 });\n// // // // // //     } catch (error) {\n// // // // // //       console.error('Error creating review:', error);\n// // // // // //     }\n// // // // // //   };\n\n// // // // // //   // Update an existing review\n// // // // // //   const handleUpdate = async () => {\n// // // // // //     if (!editReview || !editReview.user || !editReview.comment || editReview.rating < 1 || editReview.rating > 5) {\n// // // // // //       alert('Please fill out all fields correctly.');\n// // // // // //       return;\n// // // // // //     }\n// // // // // //     try {\n// // // // // //       const response = await fetch(`http://localhost:5000/api/${editReview._id}`, {\n// // // // // //         method: 'PUT',\n// // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // //         body: JSON.stringify(editReview),\n// // // // // //       });\n// // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // //       const data = await response.json();\n// // // // // //       console.log('Review updated:', data); // Debugging\n// // // // // //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// // // // // //       setEditReview(null);\n// // // // // //     } catch (error) {\n// // // // // //       console.error('Error updating review:', error);\n// // // // // //     }\n// // // // // //   };\n\n// // // // // //   // Delete a review\n// // // // // //   const handleDelete = async (id) => {\n// // // // // //     try {\n// // // // // //       const response = await fetch(`http://localhost:5000/api/${id}`, { method: 'DELETE' });\n// // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // //       console.log('Review deleted:', id); // Debugging\n// // // // // //       setReviews(reviews.filter(review => review._id !== id));\n// // // // // //     } catch (error) {\n// // // // // //       console.error('Error deleting review:', error);\n// // // // // //     }\n// // // // // //   };\n\n// // // // // //   return (\n// // // // // //     <footer className=\"bg-dark text-light py-3\">\n// // // // // //       <div className=\"container\">\n// // // // // //         <h4>User Reviews</h4>\n// // // // // //         <ul className=\"list-unstyled\">\n// // // // // //           {reviews.map(review => (\n// // // // // //             <li key={review._id} className=\"mb-2\">\n// // // // // //               <div>\n// // // // // //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// // // // // //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// // // // // //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// // // // // //               </div>\n// // // // // //             </li>\n// // // // // //           ))}\n// // // // // //         </ul>\n// // // // // //         {editReview ? (\n// // // // // //           <div>\n// // // // // //             <h5>Edit Review</h5>\n// // // // // //             <input\n// // // // // //               type=\"text\"\n// // // // // //               value={editReview.user}\n// // // // // //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// // // // // //               placeholder=\"User\"\n// // // // // //               className=\"form-control mb-2\"\n// // // // // //             />\n// // // // // //             <input\n// // // // // //               type=\"text\"\n// // // // // //               value={editReview.comment}\n// // // // // //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// // // // // //               placeholder=\"Comment\"\n// // // // // //               className=\"form-control mb-2\"\n// // // // // //             />\n// // // // // //             <input\n// // // // // //               type=\"number\"\n// // // // // //               min=\"1\"\n// // // // // //               max=\"5\"\n// // // // // //               value={editReview.rating}\n// // // // // //               onChange={(e) => setEditReview({ ...editReview, rating: Number(e.target.value) })}\n// // // // // //               placeholder=\"Rating\"\n// // // // // //               className=\"form-control mb-2\"\n// // // // // //             />\n// // // // // //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// // // // // //           </div>\n// // // // // //         ) : (\n// // // // // //           <div>\n// // // // // //             <h5>Add Review</h5>\n// // // // // //             <input\n// // // // // //               type=\"text\"\n// // // // // //               value={newReview.user}\n// // // // // //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// // // // // //               placeholder=\"User\"\n// // // // // //               className=\"form-control mb-2\"\n// // // // // //             />\n// // // // // //             <input\n// // // // // //               type=\"text\"\n// // // // // //               value={newReview.comment}\n// // // // // //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// // // // // //               placeholder=\"Comment\"\n// // // // // //               className=\"form-control mb-2\"\n// // // // // //             />\n// // // // // //             <input\n// // // // // //               type=\"number\"\n// // // // // //               min=\"1\"\n// // // // // //               max=\"5\"\n// // // // // //               value={newReview.rating}\n// // // // // //               onChange={(e) => setNewReview({ ...newReview, rating: Number(e.target.value) })}\n// // // // // //               placeholder=\"Rating\"\n// // // // // //               className=\"form-control mb-2\"\n// // // // // //             />\n// // // // // //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// // // // // //           </div>\n// // // // // //         )}\n// // // // // //       </div>\n// // // // // //     </footer>\n// // // // // //   );\n// // // // // // }\n\n// // // // // // export default Footer;\n\n// // // // // import React, { useEffect, useState } from 'react';\n\n// // // // // function Footer() {\n// // // // //   const [reviews, setReviews] = useState([]);\n// // // // //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// // // // //   const [editReview, setEditReview] = useState(null);\n\n// // // // //   // Fetch reviews from the backend\n// // // // //   const fetchReviews = async () => {\n// // // // //     try {\n// // // // //       const response = await fetch('http://localhost:5000/api');\n// // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // //       const data = await response.json();\n// // // // //       setReviews(data);\n// // // // //     } catch (error) {\n// // // // //       console.error('Error fetching reviews:', error);\n// // // // //     }\n// // // // //   };\n\n// // // // //   useEffect(() => {\n// // // // //     fetchReviews();\n// // // // //   }, []);\n\n// // // // //   // Create a new review\n// // // // //   const handleCreate = async () => {\n// // // // //     if (!newReview.user || !newReview.comment || newReview.rating < 1 || newReview.rating > 5) {\n// // // // //       alert('Please fill out all fields correctly.');\n// // // // //       return;\n// // // // //     }\n// // // // //     try {\n// // // // //       const response = await fetch('http://localhost:5000/api', {\n// // // // //         method: 'POST',\n// // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // //         body: JSON.stringify(newReview),\n// // // // //       });\n// // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // //       const data = await response.json();\n// // // // //       setReviews([...reviews, data]);\n// // // // //       setNewReview({ user: '', comment: '', rating: 1 });\n// // // // //     } catch (error) {\n// // // // //       console.error('Error creating review:', error);\n// // // // //     }\n// // // // //   };\n\n// // // // //   // Update an existing review\n// // // // //   const handleUpdate = async () => {\n// // // // //     if (!editReview || !editReview.user || !editReview.comment || editReview.rating < 1 || editReview.rating > 5) {\n// // // // //       alert('Please fill out all fields correctly.');\n// // // // //       return;\n// // // // //     }\n// // // // //     try {\n// // // // //       const response = await fetch(`http://localhost:5000/api/${editReview._id}`, {\n// // // // //         method: 'PUT',\n// // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // //         body: JSON.stringify(editReview),\n// // // // //       });\n// // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // //       const data = await response.json();\n// // // // //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// // // // //       setEditReview(null);\n// // // // //     } catch (error) {\n// // // // //       console.error('Error updating review:', error);\n// // // // //     }\n// // // // //   };\n\n// // // // //   // Delete a review\n// // // // //   const handleDelete = async (id) => {\n// // // // //     try {\n// // // // //       const response = await fetch(`http://localhost:5000/api/${id}`, { method: 'DELETE' });\n// // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // //       setReviews(reviews.filter(review => review._id !== id));\n// // // // //     } catch (error) {\n// // // // //       console.error('Error deleting review:', error);\n// // // // //     }\n// // // // //   };\n\n// // // // //   return (\n// // // // //     <footer className=\"bg-dark text-light py-3\">\n// // // // //       <div className=\"container\">\n// // // // //         <h4>User Reviews</h4>\n// // // // //         <ul className=\"list-unstyled\">\n// // // // //           {reviews.map(review => (\n// // // // //             <li key={review._id} className=\"mb-2\">\n// // // // //               <div>\n// // // // //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// // // // //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// // // // //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// // // // //               </div>\n// // // // //             </li>\n// // // // //           ))}\n// // // // //         </ul>\n// // // // //         {editReview ? (\n// // // // //           <div>\n// // // // //             <h5>Edit Review</h5>\n// // // // //             <input\n// // // // //               type=\"text\"\n// // // // //               value={editReview.user}\n// // // // //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// // // // //               placeholder=\"User\"\n// // // // //               className=\"form-control mb-2\"\n// // // // //             />\n// // // // //             <input\n// // // // //               type=\"text\"\n// // // // //               value={editReview.comment}\n// // // // //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// // // // //               placeholder=\"Comment\"\n// // // // //               className=\"form-control mb-2\"\n// // // // //             />\n// // // // //             <input\n// // // // //               type=\"number\"\n// // // // //               min=\"1\"\n// // // // //               max=\"5\"\n// // // // //               value={editReview.rating}\n// // // // //               onChange={(e) => setEditReview({ ...editReview, rating: Number(e.target.value) })}\n// // // // //               placeholder=\"Rating\"\n// // // // //               className=\"form-control mb-2\"\n// // // // //             />\n// // // // //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// // // // //           </div>\n// // // // //         ) : (\n// // // // //           <div>\n// // // // //             <h5>Add Review</h5>\n// // // // //             <input\n// // // // //               type=\"text\"\n// // // // //               value={newReview.user}\n// // // // //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// // // // //               placeholder=\"User\"\n// // // // //               className=\"form-control mb-2\"\n// // // // //             />\n// // // // //             <input\n// // // // //               type=\"text\"\n// // // // //               value={newReview.comment}\n// // // // //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// // // // //               placeholder=\"Comment\"\n// // // // //               className=\"form-control mb-2\"\n// // // // //             />\n// // // // //             <input\n// // // // //               type=\"number\"\n// // // // //               min=\"1\"\n// // // // //               max=\"5\"\n// // // // //               value={newReview.rating}\n// // // // //               onChange={(e) => setNewReview({ ...newReview, rating: Number(e.target.value) })}\n// // // // //               placeholder=\"Rating\"\n// // // // //               className=\"form-control mb-2\"\n// // // // //             />\n// // // // //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// // // // //           </div>\n// // // // //         )}\n// // // // //       </div>\n// // // // //     </footer>\n// // // // //   );\n// // // // // }\n\n// // // // // export default Footer;\n// // // // import React, { useEffect, useState } from 'react';\n\n// // // // function Footer() {\n// // // //   const [reviews, setReviews] = useState([]);\n// // // //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// // // //   const [editReview, setEditReview] = useState(null);\n\n// // // //   // Fetch reviews from the backend\n// // // //   const fetchReviews = async () => {\n// // // //     try {\n// // // //       const response = await fetch('http://localhost:5000/api/reviews');\n// // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // //       const data = await response.json();\n// // // //       setReviews(data);\n// // // //     } catch (error) {\n// // // //       console.error('Error fetching reviews:', error);\n// // // //     }\n// // // //   };\n\n// // // //   useEffect(() => {\n// // // //     fetchReviews();\n// // // //   }, []);\n\n// // // //   // Create a new review\n// // // //   const handleCreate = async () => {\n// // // //     if (!newReview.user || !newReview.comment || newReview.rating < 1 || newReview.rating > 5) {\n// // // //       alert('Please fill out all fields correctly.');\n// // // //       return;\n// // // //     }\n// // // //     try {\n// // // //       const response = await fetch('http://localhost:5000/api/reviews', {\n// // // //         method: 'POST',\n// // // //         headers: { 'Content-Type': 'application/json' },\n// // // //         body: JSON.stringify(newReview),\n// // // //       });\n// // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // //       const data = await response.json();\n// // // //       setReviews([...reviews, data]);\n// // // //       setNewReview({ user: '', comment: '', rating: 1 });\n// // // //     } catch (error) {\n// // // //       console.error('Error creating review:', error);\n// // // //     }\n// // // //   };\n\n// // // //   // Update an existing review\n// // // //   const handleUpdate = async () => {\n// // // //     if (!editReview || !editReview.user || !editReview.comment || editReview.rating < 1 || editReview.rating > 5) {\n// // // //       alert('Please fill out all fields correctly.');\n// // // //       return;\n// // // //     }\n// // // //     try {\n// // // //       const response = await fetch(`http://localhost:5000/api/reviews/${editReview._id}`, {\n// // // //         method: 'PUT',\n// // // //         headers: { 'Content-Type': 'application/json' },\n// // // //         body: JSON.stringify(editReview),\n// // // //       });\n// // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // //       const data = await response.json();\n// // // //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// // // //       setEditReview(null);\n// // // //     } catch (error) {\n// // // //       console.error('Error updating review:', error);\n// // // //     }\n// // // //   };\n\n// // // //   // Delete a review\n// // // //   const handleDelete = async (id) => {\n// // // //     try {\n// // // //       const response = await fetch(`http://localhost:5000/api/reviews/${id}`, { method: 'DELETE' });\n// // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // //       setReviews(reviews.filter(review => review._id !== id));\n// // // //     } catch (error) {\n// // // //       console.error('Error deleting review:', error);\n// // // //     }\n// // // //   };\n\n// // // //   return (\n// // // //     <footer className=\"bg-dark text-light py-3\">\n// // // //       <div className=\"container\">\n// // // //         <h4>User Reviews</h4>\n// // // //         <ul className=\"list-unstyled\">\n// // // //           {reviews.map(review => (\n// // // //             <li key={review._id} className=\"mb-2\">\n// // // //               <div>\n// // // //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// // // //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// // // //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// // // //               </div>\n// // // //             </li>\n// // // //           ))}\n// // // //         </ul>\n// // // //         {editReview ? (\n// // // //           <div>\n// // // //             <h5>Edit Review</h5>\n// // // //             <input\n// // // //               type=\"text\"\n// // // //               value={editReview.user}\n// // // //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// // // //               placeholder=\"User\"\n// // // //               className=\"form-control mb-2\"\n// // // //             />\n// // // //             <input\n// // // //               type=\"text\"\n// // // //               value={editReview.comment}\n// // // //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// // // //               placeholder=\"Comment\"\n// // // //               className=\"form-control mb-2\"\n// // // //             />\n// // // //             <input\n// // // //               type=\"number\"\n// // // //               min=\"1\"\n// // // //               max=\"5\"\n// // // //               value={editReview.rating}\n// // // //               onChange={(e) => setEditReview({ ...editReview, rating: Number(e.target.value) })}\n// // // //               placeholder=\"Rating\"\n// // // //               className=\"form-control mb-2\"\n// // // //             />\n// // // //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// // // //             <button onClick={() => setEditReview(null)} className=\"btn btn-secondary ms-2\">Cancel</button>\n// // // //           </div>\n// // // //         ) : (\n// // // //           <div>\n// // // //             <h5>Add Review</h5>\n// // // //             <input\n// // // //               type=\"text\"\n// // // //               value={newReview.user}\n// // // //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// // // //               placeholder=\"User\"\n// // // //               className=\"form-control mb-2\"\n// // // //             />\n// // // //             <input\n// // // //               type=\"text\"\n// // // //               value={newReview.comment}\n// // // //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// // // //               placeholder=\"Comment\"\n// // // //               className=\"form-control mb-2\"\n// // // //             />\n// // // //             <input\n// // // //               type=\"number\"\n// // // //               min=\"1\"\n// // // //               max=\"5\"\n// // // //               value={newReview.rating}\n// // // //               onChange={(e) => setNewReview({ ...newReview, rating: Number(e.target.value) })}\n// // // //               placeholder=\"Rating\"\n// // // //               className=\"form-control mb-2\"\n// // // //             />\n// // // //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// // // //           </div>\n// // // //         )}\n// // // //       </div>\n// // // //     </footer>\n// // // //   );\n// // // // }\n\n// // // // export default Footer;\n\n// // // import React, { useEffect, useState } from 'react';\n\n// // // function Footer() {\n// // //   const [reviews, setReviews] = useState([]);\n// // //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// // //   const [editReview, setEditReview] = useState(null);\n\n// // //   // Fetch reviews from the backend\n// // //   const fetchReviews = async () => {\n// // //     try {\n// // //       const response = await fetch('http://localhost:5000/api/reviews');\n// // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // //       const data = await response.json();\n// // //       setReviews(data);\n// // //     } catch (error) {\n// // //       console.error('Error fetching reviews:', error);\n// // //     }\n// // //   };\n\n// // //   useEffect(() => {\n// // //     fetchReviews();\n// // //   }, []);\n\n// // //   // Create a new review\n// // //   const handleCreate = async () => {\n// // //     if (!newReview.user || !newReview.comment || newReview.rating < 1 || newReview.rating > 5) {\n// // //       alert('Please fill out all fields correctly.');\n// // //       return;\n// // //     }\n// // //     try {\n// // //       const response = await fetch('http://localhost:5000/api/reviews', {\n// // //         method: 'POST',\n// // //         headers: { 'Content-Type': 'application/json' },\n// // //         body: JSON.stringify(newReview),\n// // //       });\n// // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // //       const data = await response.json();\n// // //       setReviews([...reviews, data]);\n// // //       setNewReview({ user: '', comment: '', rating: 1 });\n// // //     } catch (error) {\n// // //       console.error('Error creating review:', error);\n// // //     }\n// // //   };\n\n// // //   // Update an existing review\n// // //   const handleUpdate = async () => {\n// // //     if (!editReview || !editReview.user || !editReview.comment || editReview.rating < 1 || editReview.rating > 5) {\n// // //       alert('Please fill out all fields correctly.');\n// // //       return;\n// // //     }\n// // //     try {\n// // //       const response = await fetch(`http://localhost:5000/api/reviews/${editReview._id}`, {\n// // //         method: 'PUT',\n// // //         headers: { 'Content-Type': 'application/json' },\n// // //         body: JSON.stringify(editReview),\n// // //       });\n// // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // //       const data = await response.json();\n// // //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// // //       setEditReview(null);\n// // //     } catch (error) {\n// // //       console.error('Error updating review:', error);\n// // //     }\n// // //   };\n\n// // //   // Delete a review\n// // //   const handleDelete = async (id) => {\n// // //     try {\n// // //       const response = await fetch(`http://localhost:5000/api/reviews/${id}`, { method: 'DELETE' });\n// // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // //       setReviews(reviews.filter(review => review._id !== id));\n// // //     } catch (error) {\n// // //       console.error('Error deleting review:', error);\n// // //     }\n// // //   };\n\n// // //   return (\n// // //     <footer className=\"bg-dark text-light py-3\">\n// // //       <div className=\"container\">\n// // //         <h4>User Reviews</h4>\n// // //         <ul className=\"list-unstyled\">\n// // //           {reviews.map(review => (\n// // //             <li key={review._id} className=\"mb-2\">\n// // //               <div>\n// // //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// // //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// // //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// // //               </div>\n// // //             </li>\n// // //           ))}\n// // //         </ul>\n// // //         {editReview ? (\n// // //           <div>\n// // //             <h5>Edit Review</h5>\n// // //             <input\n// // //               type=\"text\"\n// // //               value={editReview.user}\n// // //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// // //               placeholder=\"User\"\n// // //               className=\"form-control mb-2\"\n// // //             />\n// // //             <input\n// // //               type=\"text\"\n// // //               value={editReview.comment}\n// // //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// // //               placeholder=\"Comment\"\n// // //               className=\"form-control mb-2\"\n// // //             />\n// // //             <input\n// // //               type=\"number\"\n// // //               min=\"1\"\n// // //               max=\"5\"\n// // //               value={editReview.rating}\n// // //               onChange={(e) => setEditReview({ ...editReview, rating: Number(e.target.value) })}\n// // //               placeholder=\"Rating\"\n// // //               className=\"form-control mb-2\"\n// // //             />\n// // //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// // //             <button onClick={() => setEditReview(null)} className=\"btn btn-secondary ms-2\">Cancel</button>\n// // //           </div>\n// // //         ) : (\n// // //           <div>\n// // //             <h5>Add Review</h5>\n// // //             <input\n// // //               type=\"text\"\n// // //               value={newReview.user}\n// // //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// // //               placeholder=\"User\"\n// // //               className=\"form-control mb-2\"\n// // //             />\n// // //             <input\n// // //               type=\"text\"\n// // //               value={newReview.comment}\n// // //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// // //               placeholder=\"Comment\"\n// // //               className=\"form-control mb-2\"\n// // //             />\n// // //             <input\n// // //               type=\"number\"\n// // //               min=\"1\"\n// // //               max=\"5\"\n// // //               value={newReview.rating}\n// // //               onChange={(e) => setNewReview({ ...newReview, rating: Number(e.target.value) })}\n// // //               placeholder=\"Rating\"\n// // //               className=\"form-control mb-2\"\n// // //             />\n// // //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// // //           </div>\n// // //         )}\n// // //       </div>\n// // //     </footer>\n// // //   );\n// // // }\n\n// // // export default Footer;\n\n// // import React, { useState, useEffect } from 'react';\n\n// // const Footer = () => {\n// //   const [reviews, setReviews] = useState([]);\n// //   const [newReview, setNewReview] = useState({\n// //     userId: '',\n// //     foodItemId: '',\n// //     rating: '',\n// //     review: ''\n// //   });\n\n// //   useEffect(() => {\n// //     fetchReviews();\n// //   }, []);\n\n// //   const fetchReviews = async () => {\n// //     try {\n// //       const response = await fetch('http://localhost:5000/api/reviews');\n// //       if (!response.ok) throw new Error('Network response was not ok');\n// //       const data = await response.json();\n// //       setReviews(data);\n// //     } catch (error) {\n// //       console.error('Error fetching reviews:', error);\n// //     }\n// //   };\n\n// //   const handleInputChange = (e) => {\n// //     const { name, value } = e.target;\n// //     setNewReview({\n// //       ...newReview,\n// //       [name]: value\n// //     });\n// //   };\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     try {\n// //       const response = await fetch('http://localhost:5000/api/reviews', {\n// //         method: 'POST',\n// //         headers: {\n// //           'Content-Type': 'application/json'\n// //         },\n// //         body: JSON.stringify(newReview)\n// //       });\n// //       if (!response.ok) throw new Error('Network response was not ok');\n// //       await fetchReviews(); // Refresh the list after adding a new review\n// //       setNewReview({\n// //         userId: '',\n// //         foodItemId: '',\n// //         rating: '',\n// //         review: ''\n// //       });\n// //     } catch (error) {\n// //       console.error('Error creating review:', error);\n// //     }\n// //   };\n\n// //   const handleDelete = async (id) => {\n// //     try {\n// //       const response = await fetch(`http://localhost:5000/api/reviews/${id}`, {\n// //         method: 'DELETE'\n// //       });\n// //       if (!response.ok) throw new Error('Network response was not ok');\n// //       await fetchReviews(); // Refresh the list after deleting a review\n// //     } catch (error) {\n// //       console.error('Error deleting review:', error);\n// //     }\n// //   };\n\n// //   return (\n// //     <div>\n// //       <h2>Footer Component</h2>\n// //       <form onSubmit={handleSubmit}>\n// //         <input\n// //           type=\"text\"\n// //           name=\"userId\"\n// //           value={newReview.userId}\n// //           onChange={handleInputChange}\n// //           placeholder=\"User ID\"\n// //         />\n// //         <input\n// //           type=\"text\"\n// //           name=\"foodItemId\"\n// //           value={newReview.foodItemId}\n// //           onChange={handleInputChange}\n// //           placeholder=\"Food Item ID\"\n// //         />\n// //         <input\n// //           type=\"number\"\n// //           name=\"rating\"\n// //           value={newReview.rating}\n// //           onChange={handleInputChange}\n// //           placeholder=\"Rating\"\n// //         />\n// //         <textarea\n// //           name=\"review\"\n// //           value={newReview.review}\n// //           onChange={handleInputChange}\n// //           placeholder=\"Review\"\n// //         />\n// //         <button type=\"submit\">Add Review</button>\n// //       </form>\n\n// //       <div>\n// //         <h3>Reviews</h3>\n// //         {reviews.map((review) => (\n// //           <div key={review._id}>\n// //             <p>User: {review.userId}</p>\n// //             <p>Food Item: {review.foodItemId}</p>\n// //             <p>Rating: {review.rating}</p>\n// //             <p>Review: {review.review}</p>\n// //             <button onClick={() => handleDelete(review._id)}>Delete</button>\n// //           </div>\n// //         ))}\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default Footer;\n\n// import React, { useEffect, useState } from 'react';\n\n// export default function Footer() {\n//   const [reviews, setReviews] = useState([]);\n//   const [userId, setUserId] = useState('');\n//   const [foodItemId, setFoodItemId] = useState('');\n//   const [rating, setRating] = useState('');\n//   const [review, setReview] = useState('');\n//   const [editMode, setEditMode] = useState(false);\n//   const [currentReviewId, setCurrentReviewId] = useState(null);\n\n//   // Fetch all reviews\n//   const fetchReviews = async () => {\n//     try {\n//       const response = await fetch('http://localhost:5000/api/reviews');\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! Status: ${response.status}`);\n//       }\n//       const data = await response.json();\n//       setReviews(data);\n//     } catch (error) {\n//       console.error('Error fetching reviews:', error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchReviews();\n//   }, []);\n\n//   // Create a new review\n//   const handleCreateReview = async () => {\n//     try {\n//       const response = await fetch('http://localhost:5000/api/reviews', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ userId, foodItemId, rating, review }),\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! Status: ${response.status}`);\n//       }\n\n//       const newReview = await response.json();\n//       setReviews([...reviews, newReview]);\n//       setUserId('');\n//       setFoodItemId('');\n//       setRating('');\n//       setReview('');\n//     } catch (error) {\n//       console.error('Error creating review:', error);\n//     }\n//   };\n\n//   // Update an existing review\n//   const handleUpdateReview = async () => {\n//     try {\n//       const response = await fetch(`http://localhost:5000/api/reviews/${currentReviewId}`, {\n//         method: 'PUT',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ userId, foodItemId, rating, review }),\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! Status: ${response.status}`);\n//       }\n\n//       const updatedReview = await response.json();\n//       setReviews(\n//         reviews.map((r) => (r._id === currentReviewId ? updatedReview : r))\n//       );\n//       setEditMode(false);\n//       setUserId('');\n//       setFoodItemId('');\n//       setRating('');\n//       setReview('');\n//       setCurrentReviewId(null);\n//     } catch (error) {\n//       console.error('Error updating review:', error);\n//     }\n//   };\n\n//   // Delete a review\n//   const handleDeleteReview = async (id) => {\n//     try {\n//       const response = await fetch(`http://localhost:5000/api/reviews/${id}`, {\n//         method: 'DELETE',\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! Status: ${response.status}`);\n//       }\n\n//       setReviews(reviews.filter((review) => review._id !== id));\n//     } catch (error) {\n//       console.error('Error deleting review:', error);\n//     }\n//   };\n\n//   // Set review data for editing\n//   const handleEditReview = (review) => {\n//     setUserId(review.userId);\n//     setFoodItemId(review.foodItemId);\n//     setRating(review.rating);\n//     setReview(review.review);\n//     setCurrentReviewId(review._id);\n//     setEditMode(true);\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h2>Reviews</h2>\n//       <div>\n//         <input\n//           type=\"text\"\n//           placeholder=\"User ID\"\n//           value={userId}\n//           onChange={(e) => setUserId(e.target.value)}\n//         />\n//         <input\n//           type=\"text\"\n//           placeholder=\"Food Item ID\"\n//           value={foodItemId}\n//           onChange={(e) => setFoodItemId(e.target.value)}\n//         />\n//         <input\n//           type=\"number\"\n//           placeholder=\"Rating\"\n//           value={rating}\n//           onChange={(e) => setRating(e.target.value)}\n//         />\n//         <textarea\n//           placeholder=\"Review\"\n//           value={review}\n//           onChange={(e) => setReview(e.target.value)}\n//         ></textarea>\n//         {editMode ? (\n//           <button onClick={handleUpdateReview}>Update Review</button>\n//         ) : (\n//           <button onClick={handleCreateReview}>Submit Review</button>\n//         )}\n//       </div>\n//       <ul>\n//         {reviews.map((review) => (\n//           <li key={review._id}>\n//             <strong>{review.userId}</strong>: {review.review} (Rating: {review.rating})\n//             <button onClick={() => handleEditReview(review)}>Edit</button>\n//             <button onClick={() => handleDeleteReview(review._id)}>Delete</button>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Footer() {\n  _s();\n  const [reviews, setReviews] = useState([]);\n  const [formData, setFormData] = useState({\n    userId: '',\n    foodItemId: '',\n    rating: '',\n    review: ''\n  });\n  const [editMode, setEditMode] = useState(false);\n  const [currentReviewId, setCurrentReviewId] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState({\n    type: '',\n    text: ''\n  });\n  const apiUrl = 'http://localhost:5000/api';\n\n  // Fetch all reviews\n  const fetchReviews = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(apiUrl);\n      if (!response.ok) {\n        throw new Error(`Error: ${response.status} ${response.statusText}`);\n      }\n      const data = await response.json();\n      setReviews(data);\n    } catch (error) {\n      setMessage({\n        type: 'danger',\n        text: error.message\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchReviews();\n  }, []);\n\n  // Handle input change\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  // Validate form data\n  const validateForm = () => {\n    const {\n      userId,\n      foodItemId,\n      rating,\n      review\n    } = formData;\n    if (!userId || !foodItemId || !rating || !review) {\n      setMessage({\n        type: 'warning',\n        text: 'Please fill in all fields.'\n      });\n      return false;\n    }\n    if (rating < 1 || rating > 5) {\n      setMessage({\n        type: 'warning',\n        text: 'Rating must be between 1 and 5.'\n      });\n      return false;\n    }\n    return true;\n  };\n\n  // Create a new review\n  const handleCreateReview = async e => {\n    e.preventDefault();\n    if (!validateForm()) return;\n    setLoading(true);\n    try {\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to create review.');\n      }\n      const newReview = await response.json();\n      setReviews([...reviews, newReview]);\n      setFormData({\n        userId: '',\n        foodItemId: '',\n        rating: '',\n        review: ''\n      });\n      setMessage({\n        type: 'success',\n        text: 'Review added successfully.'\n      });\n    } catch (error) {\n      setMessage({\n        type: 'danger',\n        text: error.message\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Update an existing review\n  const handleUpdateReview = async e => {\n    e.preventDefault();\n    if (!validateForm()) return;\n    setLoading(true);\n    try {\n      const response = await fetch(`${apiUrl}/${currentReviewId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update review.');\n      }\n      const updatedReview = await response.json();\n      setReviews(reviews.map(review => review._id === currentReviewId ? updatedReview : review));\n      setEditMode(false);\n      setCurrentReviewId(null);\n      setFormData({\n        userId: '',\n        foodItemId: '',\n        rating: '',\n        review: ''\n      });\n      setMessage({\n        type: 'success',\n        text: 'Review updated successfully.'\n      });\n    } catch (error) {\n      setMessage({\n        type: 'danger',\n        text: error.message\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Delete a review\n  const handleDeleteReview = async id => {\n    if (!window.confirm('Are you sure you want to delete this review?')) return;\n    setLoading(true);\n    try {\n      const response = await fetch(`${apiUrl}/${id}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error('Failed to delete review.');\n      }\n      setReviews(reviews.filter(review => review._id !== id));\n      setMessage({\n        type: 'success',\n        text: 'Review deleted successfully.'\n      });\n    } catch (error) {\n      setMessage({\n        type: 'danger',\n        text: error.message\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Set review data for editing\n  const handleEditReview = review => {\n    setEditMode(true);\n    setCurrentReviewId(review._id);\n    setFormData({\n      userId: review.userId,\n      foodItemId: review.foodItemId,\n      rating: review.rating,\n      review: review.review\n    });\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"footer\", {\n    className: \"bg-dark text-light py-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mb-4\",\n        children: \"User Reviews\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1681,\n        columnNumber: 9\n      }, this), message.text && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `alert alert-${message.type}`,\n        role: \"alert\",\n        children: message.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1685,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: editMode ? handleUpdateReview : handleCreateReview,\n        className: \"mb-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row g-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"userId\",\n              className: \"form-label\",\n              children: \"User ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1697,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"userId\",\n              name: \"userId\",\n              value: formData.userId,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1700,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1696,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"foodItemId\",\n              className: \"form-label\",\n              children: \"Food Item ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1711,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"foodItemId\",\n              name: \"foodItemId\",\n              value: formData.foodItemId,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1714,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1710,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"rating\",\n              className: \"form-label\",\n              children: \"Rating\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1725,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              className: \"form-control\",\n              id: \"rating\",\n              name: \"rating\",\n              min: \"1\",\n              max: \"5\",\n              value: formData.rating,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1728,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1724,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"review\",\n              className: \"form-label\",\n              children: \"Review\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1741,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-control\",\n              id: \"review\",\n              name: \"review\",\n              rows: \"1\",\n              value: formData.review,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1744,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1740,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1695,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: `btn ${editMode ? 'btn-warning' : 'btn-success'}`,\n            disabled: loading,\n            children: loading ? 'Processing...' : editMode ? 'Update Review' : 'Submit Review'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1756,\n            columnNumber: 13\n          }, this), editMode && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-secondary ms-2\",\n            onClick: () => {\n              setEditMode(false);\n              setFormData({\n                userId: '',\n                foodItemId: '',\n                rating: '',\n                review: ''\n              });\n              setCurrentReviewId(null);\n            },\n            disabled: loading,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1768,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1755,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1691,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner-border text-light\",\n            role: \"status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1793,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ms-2\",\n            children: \"Loading Reviews...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1797,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1792,\n          columnNumber: 13\n        }, this) : reviews.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: reviews.map(review => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card bg-secondary text-light\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"card-title\",\n                  children: [\"User: \", review.userId, \" | Food Item: \", review.foodItemId]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1805,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                  className: \"card-subtitle mb-2 text-warning\",\n                  children: [\"Rating: \", review.rating, \"/5\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1808,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-text\",\n                  children: review.review\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1811,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-primary me-2\",\n                  onClick: () => handleEditReview(review),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1812,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-danger\",\n                  onClick: () => handleDeleteReview(review._id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1818,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1804,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1803,\n              columnNumber: 19\n            }, this)\n          }, review._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1802,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1800,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No reviews available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1830,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1790,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1680,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1679,\n    columnNumber: 5\n  }, this);\n}\n_s(Footer, \"zchsEpzuVkAyy9lWDfHvuP7Lnoc=\");\n_c = Footer;\nvar _c;\n$RefreshReg$(_c, \"Footer\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Footer","_s","reviews","setReviews","formData","setFormData","userId","foodItemId","rating","review","editMode","setEditMode","currentReviewId","setCurrentReviewId","loading","setLoading","message","setMessage","type","text","apiUrl","fetchReviews","response","fetch","ok","Error","status","statusText","data","json","error","handleInputChange","e","name","value","target","validateForm","handleCreateReview","preventDefault","method","headers","body","JSON","stringify","newReview","handleUpdateReview","updatedReview","map","_id","handleDeleteReview","id","window","confirm","filter","handleEditReview","scrollTo","top","behavior","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","onSubmit","htmlFor","onChange","required","min","max","rows","disabled","onClick","length","_c","$RefreshReg$"],"sources":["C:/Users/ruhan/Documents/gofood/mernapp/src/components/Footer.js"],"sourcesContent":["// // // // // // // // // // // import React from 'react'\n// // // // // // // // // // // import {link} from 'react-router-dom'\n// // // // // // // // // // // export default function Footer() {\n// // // // // // // // // // //   return (\n// // // // // // // // // // //     <div><div className=\"container\">\n// // // // // // // // // // //     <footer className=\"d-flex flex-wrap justify-content-between align-items-center py-3 my-4 border-top\">\n// // // // // // // // // // //       <div className=\"col-md-4 d-flex align-items-center\">\n// // // // // // // // // // //         <link to=\"/\" className=\"mb-3 me-2 mb-md-0 text-muted text-decoration-none lh-1\">\n// // // // // // // // // // //         </link>\n// // // // // // // // // // //         <span className=\"text-muted\">Â© 2024<i>GoFood</i>, Inc</span>\n// // // // // // // // // // //       </div>\n  \n// // // // // // // // // // //       {/* <ul className=\"nav col-md-4 justify-content-end list-unstyled d-flex\">\n// // // // // // // // // // //         <li className=\"ms-3\"><a className=\"text-muted\" href=\"/\"><svg className=\"bi\" width=\"24\" height=\"24\"><use ></use></svg></a></li>\n// // // // // // // // // // //         <li className=\"ms-3\"><a className=\"text-muted\" href=\"/\"><svg className=\"bi\" width=\"24\" height=\"24\"><use ></use></svg></a></li>\n// // // // // // // // // // //         <li className=\"ms-3\"><a className=\"text-muted\" href=\"/\"><svg className=\"bi\" width=\"24\" height=\"24\"><use></use></svg></a></li>\n// // // // // // // // // // //       </ul> */}\n// // // // // // // // // // //     </footer>\n// // // // // // // // // // //   </div>\n// // // // // // // // // // //   </div>\n// // // // // // // // // // //   )\n// // // // // // // // // // // }\n\n// // // // // // // // // // import React, { useEffect, useState } from 'react';\n\n// // // // // // // // // // function Footer() {\n// // // // // // // // // //   const [reviews, setReviews] = useState([]);\n// // // // // // // // // //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// // // // // // // // // //   const [editReview, setEditReview] = useState(null);\n\n// // // // // // // // // //   // Fetch reviews from the backend\n// // // // // // // // // //   const fetchReviews = async () => {\n// // // // // // // // // //     try {\n// // // // // // // // // //       const response = await fetch('http://localhost:5000/api/reviews');\n// // // // // // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // // // // // //       const data = await response.json();\n// // // // // // // // // //       setReviews(data);\n// // // // // // // // // //     } catch (error) {\n// // // // // // // // // //       console.error('Error fetching reviews:', error);\n// // // // // // // // // //     }\n// // // // // // // // // //   };\n\n// // // // // // // // // //   useEffect(() => {\n// // // // // // // // // //     fetchReviews();\n// // // // // // // // // //   }, []);\n\n// // // // // // // // // //   // Create a new review\n// // // // // // // // // //   const handleCreate = async () => {\n// // // // // // // // // //     try {\n// // // // // // // // // //       const response = await fetch('http://localhost:5000/api/reviews', {\n// // // // // // // // // //         method: 'POST',\n// // // // // // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // // // // // //         body: JSON.stringify(newReview),\n// // // // // // // // // //       });\n// // // // // // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // // // // // //       const data = await response.json();\n// // // // // // // // // //       setReviews([...reviews, data]);\n// // // // // // // // // //       setNewReview({ user: '', comment: '', rating: 1 });\n// // // // // // // // // //     } catch (error) {\n// // // // // // // // // //       console.error('Error creating review:', error);\n// // // // // // // // // //     }\n// // // // // // // // // //   };\n\n// // // // // // // // // //   // Update an existing review\n// // // // // // // // // //   const handleUpdate = async () => {\n// // // // // // // // // //     if (!editReview) return;\n\n// // // // // // // // // //     try {\n// // // // // // // // // //       const response = await fetch(`http://localhost:5000/api/reviews/${editReview._id}`, {\n// // // // // // // // // //         method: 'PUT',\n// // // // // // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // // // // // //         body: JSON.stringify(editReview),\n// // // // // // // // // //       });\n// // // // // // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // // // // // //       const data = await response.json();\n// // // // // // // // // //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// // // // // // // // // //       setEditReview(null);\n// // // // // // // // // //     } catch (error) {\n// // // // // // // // // //       console.error('Error updating review:', error);\n// // // // // // // // // //     }\n// // // // // // // // // //   };\n\n// // // // // // // // // //   // Delete a review\n// // // // // // // // // //   const handleDelete = async (id) => {\n// // // // // // // // // //     try {\n// // // // // // // // // //       const response = await fetch(`http://localhost:5000/api/reviews/${id}`, { method: 'DELETE' });\n// // // // // // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // // // // // //       setReviews(reviews.filter(review => review._id !== id));\n// // // // // // // // // //     } catch (error) {\n// // // // // // // // // //       console.error('Error deleting review:', error);\n// // // // // // // // // //     }\n// // // // // // // // // //   };\n\n// // // // // // // // // //   return (\n// // // // // // // // // //     <footer className=\"bg-dark text-light py-3\">\n// // // // // // // // // //       <div className=\"container\">\n// // // // // // // // // //         <h4>User Reviews</h4>\n// // // // // // // // // //         <ul className=\"list-unstyled\">\n// // // // // // // // // //           {reviews.map(review => (\n// // // // // // // // // //             <li key={review._id} className=\"mb-2\">\n// // // // // // // // // //               <div>\n// // // // // // // // // //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// // // // // // // // // //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// // // // // // // // // //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// // // // // // // // // //               </div>\n// // // // // // // // // //             </li>\n// // // // // // // // // //           ))}\n// // // // // // // // // //         </ul>\n// // // // // // // // // //         {editReview ? (\n// // // // // // // // // //           <div>\n// // // // // // // // // //             <h5>Edit Review</h5>\n// // // // // // // // // //             <input\n// // // // // // // // // //               type=\"text\"\n// // // // // // // // // //               value={editReview.user}\n// // // // // // // // // //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// // // // // // // // // //               placeholder=\"User\"\n// // // // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // // // //             />\n// // // // // // // // // //             <input\n// // // // // // // // // //               type=\"text\"\n// // // // // // // // // //               value={editReview.comment}\n// // // // // // // // // //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// // // // // // // // // //               placeholder=\"Comment\"\n// // // // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // // // //             />\n// // // // // // // // // //             <input\n// // // // // // // // // //               type=\"number\"\n// // // // // // // // // //               min=\"1\"\n// // // // // // // // // //               max=\"5\"\n// // // // // // // // // //               value={editReview.rating}\n// // // // // // // // // //               onChange={(e) => setEditReview({ ...editReview, rating: Number(e.target.value) })}\n// // // // // // // // // //               placeholder=\"Rating\"\n// // // // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // // // //             />\n// // // // // // // // // //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// // // // // // // // // //           </div>\n// // // // // // // // // //         ) : (\n// // // // // // // // // //           <div>\n// // // // // // // // // //             <h5>Add Review</h5>\n// // // // // // // // // //             <input\n// // // // // // // // // //               type=\"text\"\n// // // // // // // // // //               value={newReview.user}\n// // // // // // // // // //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// // // // // // // // // //               placeholder=\"User\"\n// // // // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // // // //             />\n// // // // // // // // // //             <input\n// // // // // // // // // //               type=\"text\"\n// // // // // // // // // //               value={newReview.comment}\n// // // // // // // // // //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// // // // // // // // // //               placeholder=\"Comment\"\n// // // // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // // // //             />\n// // // // // // // // // //             <input\n// // // // // // // // // //               type=\"number\"\n// // // // // // // // // //               min=\"1\"\n// // // // // // // // // //               max=\"5\"\n// // // // // // // // // //               value={newReview.rating}\n// // // // // // // // // //               onChange={(e) => setNewReview({ ...newReview, rating: Number(e.target.value) })}\n// // // // // // // // // //               placeholder=\"Rating\"\n// // // // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // // // //             />\n// // // // // // // // // //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// // // // // // // // // //           </div>\n// // // // // // // // // //         )}\n// // // // // // // // // //       </div>\n// // // // // // // // // //     </footer>\n// // // // // // // // // //   );\n// // // // // // // // // // }\n\n// // // // // // // // // // export default Footer;\n\n\n// // // // // // // // // import React, { useEffect, useState } from 'react';\n\n// // // // // // // // // function Footer() {\n// // // // // // // // //   const [reviews, setReviews] = useState([]);\n// // // // // // // // //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// // // // // // // // //   const [editReview, setEditReview] = useState(null);\n\n// // // // // // // // //   // Fetch reviews from the backend\n// // // // // // // // //   const fetchReviews = async () => {\n// // // // // // // // //     try {\n// // // // // // // // //       const response = await fetch('http://localhost:5000/api/reviews');\n// // // // // // // // //       const data = await response.json();\n// // // // // // // // //       setReviews(data);\n// // // // // // // // //     } catch (error) {\n// // // // // // // // //       console.error('Error fetching reviews:', error);\n// // // // // // // // //     }\n// // // // // // // // //   };\n\n// // // // // // // // //   useEffect(() => {\n// // // // // // // // //     fetchReviews();\n// // // // // // // // //   }, []);\n\n// // // // // // // // //   // Create a new review\n// // // // // // // // //   const handleCreate = async () => {\n// // // // // // // // //     try {\n// // // // // // // // //       const response = await fetch('http://localhost:5000/api/reviews', {\n// // // // // // // // //         method: 'POST',\n// // // // // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // // // // //         body: JSON.stringify(newReview),\n// // // // // // // // //       });\n// // // // // // // // //       const data = await response.json();\n// // // // // // // // //       setReviews([...reviews, data]);\n// // // // // // // // //       setNewReview({ user: '', comment: '', rating: 1 });\n// // // // // // // // //     } catch (error) {\n// // // // // // // // //       console.error('Error creating review:', error);\n// // // // // // // // //     }\n// // // // // // // // //   };\n\n// // // // // // // // //   // Update an existing review\n// // // // // // // // //   const handleUpdate = async () => {\n// // // // // // // // //     if (!editReview) return;\n\n// // // // // // // // //     try {\n// // // // // // // // //       const response = await fetch(`http://localhost:5000/api/reviews/${editReview._id}`, {\n// // // // // // // // //         method: 'PUT',\n// // // // // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // // // // //         body: JSON.stringify(editReview),\n// // // // // // // // //       });\n// // // // // // // // //       const data = await response.json();\n// // // // // // // // //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// // // // // // // // //       setEditReview(null);\n// // // // // // // // //     } catch (error) {\n// // // // // // // // //       console.error('Error updating review:', error);\n// // // // // // // // //     }\n// // // // // // // // //   };\n\n// // // // // // // // //   // Delete a review\n// // // // // // // // //   const handleDelete = async (id) => {\n// // // // // // // // //     try {\n// // // // // // // // //       await fetch(`http://localhost:5000/api/reviews/${id}`, { method: 'DELETE' });\n// // // // // // // // //       setReviews(reviews.filter(review => review._id !== id));\n// // // // // // // // //     } catch (error) {\n// // // // // // // // //       console.error('Error deleting review:', error);\n// // // // // // // // //     }\n// // // // // // // // //   };\n\n// // // // // // // // //   return (\n// // // // // // // // //     <footer className=\"bg-dark text-light py-3\">\n// // // // // // // // //       <div className=\"container\">\n// // // // // // // // //         <h4>User Reviews</h4>\n// // // // // // // // //         <ul className=\"list-unstyled\">\n// // // // // // // // //           {reviews.map(review => (\n// // // // // // // // //             <li key={review._id}>\n// // // // // // // // //               <div>\n// // // // // // // // //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// // // // // // // // //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// // // // // // // // //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// // // // // // // // //               </div>\n// // // // // // // // //             </li>\n// // // // // // // // //           ))}\n// // // // // // // // //         </ul>\n// // // // // // // // //         {editReview ? (\n// // // // // // // // //           <div>\n// // // // // // // // //             <h5>Edit Review</h5>\n// // // // // // // // //             <input\n// // // // // // // // //               type=\"text\"\n// // // // // // // // //               value={editReview.user}\n// // // // // // // // //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// // // // // // // // //               placeholder=\"User\"\n// // // // // // // // //             />\n// // // // // // // // //             <input\n// // // // // // // // //               type=\"text\"\n// // // // // // // // //               value={editReview.comment}\n// // // // // // // // //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// // // // // // // // //               placeholder=\"Comment\"\n// // // // // // // // //             />\n// // // // // // // // //             <input\n// // // // // // // // //               type=\"number\"\n// // // // // // // // //               min=\"1\"\n// // // // // // // // //               max=\"5\"\n// // // // // // // // //               value={editReview.rating}\n// // // // // // // // //               onChange={(e) => setEditReview({ ...editReview, rating: e.target.value })}\n// // // // // // // // //               placeholder=\"Rating\"\n// // // // // // // // //             />\n// // // // // // // // //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// // // // // // // // //           </div>\n// // // // // // // // //         ) : (\n// // // // // // // // //           <div>\n// // // // // // // // //             <h5>Add Review</h5>\n// // // // // // // // //             <input\n// // // // // // // // //               type=\"text\"\n// // // // // // // // //               value={newReview.user}\n// // // // // // // // //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// // // // // // // // //               placeholder=\"User\"\n// // // // // // // // //             />\n// // // // // // // // //             <input\n// // // // // // // // //               type=\"text\"\n// // // // // // // // //               value={newReview.comment}\n// // // // // // // // //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// // // // // // // // //               placeholder=\"Comment\"\n// // // // // // // // //             />\n// // // // // // // // //             <input\n// // // // // // // // //               type=\"number\"\n// // // // // // // // //               min=\"1\"\n// // // // // // // // //               max=\"5\"\n// // // // // // // // //               value={newReview.rating}\n// // // // // // // // //               onChange={(e) => setNewReview({ ...newReview, rating: e.target.value })}\n// // // // // // // // //               placeholder=\"Rating\"\n// // // // // // // // //             />\n// // // // // // // // //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// // // // // // // // //           </div>\n// // // // // // // // //         )}\n// // // // // // // // //       </div>\n// // // // // // // // //     </footer>\n// // // // // // // // //   );\n// // // // // // // // // }\n\n// // // // // // // // // export default Footer;\n\n// // // // // // // // import React, { useEffect, useState } from 'react';\n\n// // // // // // // // function Footer() {\n// // // // // // // //   const [reviews, setReviews] = useState([]);\n// // // // // // // //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// // // // // // // //   const [editReview, setEditReview] = useState(null);\n\n// // // // // // // //   // Fetch reviews from the backend\n// // // // // // // //   const fetchReviews = async () => {\n// // // // // // // //     try {\n// // // // // // // //       const response = await fetch('http://localhost:5000/api/reviews');\n// // // // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // // // //       const data = await response.json();\n// // // // // // // //       setReviews(data);\n// // // // // // // //     } catch (error) {\n// // // // // // // //       console.error('Error fetching reviews:', error);\n// // // // // // // //     }\n// // // // // // // //   };\n\n// // // // // // // //   useEffect(() => {\n// // // // // // // //     fetchReviews();\n// // // // // // // //   }, []);\n\n// // // // // // // //   // Create a new review\n// // // // // // // //   const handleCreate = async () => {\n// // // // // // // //     try {\n// // // // // // // //       const response = await fetch('http://localhost:5000/api/reviews', {\n// // // // // // // //         method: 'POST',\n// // // // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // // // //         body: JSON.stringify(newReview),\n// // // // // // // //       });\n// // // // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // // // //       const data = await response.json();\n// // // // // // // //       setReviews([...reviews, data]);\n// // // // // // // //       setNewReview({ user: '', comment: '', rating: 1 });\n// // // // // // // //     } catch (error) {\n// // // // // // // //       console.error('Error creating review:', error);\n// // // // // // // //     }\n// // // // // // // //   };\n\n// // // // // // // //   // Update an existing review\n// // // // // // // //   const handleUpdate = async () => {\n// // // // // // // //     if (!editReview) return;\n\n// // // // // // // //     try {\n// // // // // // // //       const response = await fetch(`http://localhost:5000/api/reviews/${editReview._id}`, {\n// // // // // // // //         method: 'PUT',\n// // // // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // // // //         body: JSON.stringify(editReview),\n// // // // // // // //       });\n// // // // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // // // //       const data = await response.json();\n// // // // // // // //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// // // // // // // //       setEditReview(null);\n// // // // // // // //     } catch (error) {\n// // // // // // // //       console.error('Error updating review:', error);\n// // // // // // // //     }\n// // // // // // // //   };\n\n// // // // // // // //   // Delete a review\n// // // // // // // //   const handleDelete = async (id) => {\n// // // // // // // //     try {\n// // // // // // // //       const response = await fetch(`http://localhost:5000/api/reviews/${id}`, { method: 'DELETE' });\n// // // // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // // // //       setReviews(reviews.filter(review => review._id !== id));\n// // // // // // // //     } catch (error) {\n// // // // // // // //       console.error('Error deleting review:', error);\n// // // // // // // //     }\n// // // // // // // //   };\n\n// // // // // // // //   return (\n// // // // // // // //     <footer className=\"bg-dark text-light py-3\">\n// // // // // // // //       <div className=\"container\">\n// // // // // // // //         <h4>User Reviews</h4>\n// // // // // // // //         <ul className=\"list-unstyled\">\n// // // // // // // //           {reviews.map(review => (\n// // // // // // // //             <li key={review._id} className=\"mb-2\">\n// // // // // // // //               <div>\n// // // // // // // //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// // // // // // // //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// // // // // // // //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// // // // // // // //               </div>\n// // // // // // // //             </li>\n// // // // // // // //           ))}\n// // // // // // // //         </ul>\n// // // // // // // //         {editReview ? (\n// // // // // // // //           <div>\n// // // // // // // //             <h5>Edit Review</h5>\n// // // // // // // //             <input\n// // // // // // // //               type=\"text\"\n// // // // // // // //               value={editReview.user}\n// // // // // // // //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// // // // // // // //               placeholder=\"User\"\n// // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // //             />\n// // // // // // // //             <input\n// // // // // // // //               type=\"text\"\n// // // // // // // //               value={editReview.comment}\n// // // // // // // //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// // // // // // // //               placeholder=\"Comment\"\n// // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // //             />\n// // // // // // // //             <input\n// // // // // // // //               type=\"number\"\n// // // // // // // //               min=\"1\"\n// // // // // // // //               max=\"5\"\n// // // // // // // //               value={editReview.rating}\n// // // // // // // //               onChange={(e) => setEditReview({ ...editReview, rating: Number(e.target.value) })}\n// // // // // // // //               placeholder=\"Rating\"\n// // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // //             />\n// // // // // // // //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// // // // // // // //           </div>\n// // // // // // // //         ) : (\n// // // // // // // //           <div>\n// // // // // // // //             <h5>Add Review</h5>\n// // // // // // // //             <input\n// // // // // // // //               type=\"text\"\n// // // // // // // //               value={newReview.user}\n// // // // // // // //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// // // // // // // //               placeholder=\"User\"\n// // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // //             />\n// // // // // // // //             <input\n// // // // // // // //               type=\"text\"\n// // // // // // // //               value={newReview.comment}\n// // // // // // // //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// // // // // // // //               placeholder=\"Comment\"\n// // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // //             />\n// // // // // // // //             <input\n// // // // // // // //               type=\"number\"\n// // // // // // // //               min=\"1\"\n// // // // // // // //               max=\"5\"\n// // // // // // // //               value={newReview.rating}\n// // // // // // // //               onChange={(e) => setNewReview({ ...newReview, rating: Number(e.target.value) })}\n// // // // // // // //               placeholder=\"Rating\"\n// // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // //             />\n// // // // // // // //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// // // // // // // //           </div>\n// // // // // // // //         )}\n// // // // // // // //       </div>\n// // // // // // // //     </footer>\n// // // // // // // //   );\n// // // // // // // // }\n\n// // // // // // // // export default Footer;\n\n\n// // // // // // // import React, { useEffect, useState } from 'react';\n\n// // // // // // // function Footer() {\n// // // // // // //   const [reviews, setReviews] = useState([]);\n// // // // // // //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// // // // // // //   const [editReview, setEditReview] = useState(null);\n\n// // // // // // //   // Fetch reviews from the backend\n// // // // // // //   const fetchReviews = async () => {\n// // // // // // //     try {\n// // // // // // //       const response = await fetch('http://localhost:5000/api');\n// // // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // // //       const data = await response.json();\n// // // // // // //       setReviews(data);\n// // // // // // //     } catch (error) {\n// // // // // // //       console.error('Error fetching reviews:', error);\n// // // // // // //     }\n// // // // // // //   };\n\n// // // // // // //   useEffect(() => {\n// // // // // // //     fetchReviews();\n// // // // // // //   }, []);\n\n// // // // // // //   // Create a new review\n// // // // // // //   const handleCreate = async () => {\n// // // // // // //     if (!newReview.user || !newReview.comment || newReview.rating < 1 || newReview.rating > 5) {\n// // // // // // //       alert('Please fill out all fields correctly.');\n// // // // // // //       return;\n// // // // // // //     }\n// // // // // // //     try {\n// // // // // // //       const response = await fetch('http://localhost:5000/api', {\n// // // // // // //         method: 'POST',\n// // // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // // //         body: JSON.stringify(newReview),\n// // // // // // //       });\n// // // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // // //       const data = await response.json();\n// // // // // // //       setReviews([...reviews, data]);\n// // // // // // //       setNewReview({ user: '', comment: '', rating: 1 });\n// // // // // // //     } catch (error) {\n// // // // // // //       console.error('Error creating review:', error);\n// // // // // // //     }\n// // // // // // //   };\n\n// // // // // // //   // Update an existing review\n// // // // // // //   const handleUpdate = async () => {\n// // // // // // //     if (!editReview || !editReview.user || !editReview.comment || editReview.rating < 1 || editReview.rating > 5) {\n// // // // // // //       alert('Please fill out all fields correctly.');\n// // // // // // //       return;\n// // // // // // //     }\n// // // // // // //     try {\n// // // // // // //       const response = await fetch(`http://localhost:5000/api/${editReview._id}`, {\n// // // // // // //         method: 'PUT',\n// // // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // // //         body: JSON.stringify(editReview),\n// // // // // // //       });\n// // // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // // //       const data = await response.json();\n// // // // // // //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// // // // // // //       setEditReview(null);\n// // // // // // //     } catch (error) {\n// // // // // // //       console.error('Error updating review:', error);\n// // // // // // //     }\n// // // // // // //   };\n\n// // // // // // //   // Delete a review\n// // // // // // //   const handleDelete = async (id) => {\n// // // // // // //     try {\n// // // // // // //       const response = await fetch(`http://localhost:5000/api/${id}`, { method: 'DELETE' });\n// // // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // // //       setReviews(reviews.filter(review => review._id !== id));\n// // // // // // //     } catch (error) {\n// // // // // // //       console.error('Error deleting review:', error);\n// // // // // // //     }\n// // // // // // //   };\n\n// // // // // // //   return (\n// // // // // // //     <footer className=\"bg-dark text-light py-3\">\n// // // // // // //       <div className=\"container\">\n// // // // // // //         <h4>User Reviews</h4>\n// // // // // // //         <ul className=\"list-unstyled\">\n// // // // // // //           {reviews.map(review => (\n// // // // // // //             <li key={review._id} className=\"mb-2\">\n// // // // // // //               <div>\n// // // // // // //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// // // // // // //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// // // // // // //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// // // // // // //               </div>\n// // // // // // //             </li>\n// // // // // // //           ))}\n// // // // // // //         </ul>\n// // // // // // //         {editReview ? (\n// // // // // // //           <div>\n// // // // // // //             <h5>Edit Review</h5>\n// // // // // // //             <input\n// // // // // // //               type=\"text\"\n// // // // // // //               value={editReview.user}\n// // // // // // //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// // // // // // //               placeholder=\"User\"\n// // // // // // //               className=\"form-control mb-2\"\n// // // // // // //             />\n// // // // // // //             <input\n// // // // // // //               type=\"text\"\n// // // // // // //               value={editReview.comment}\n// // // // // // //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// // // // // // //               placeholder=\"Comment\"\n// // // // // // //               className=\"form-control mb-2\"\n// // // // // // //             />\n// // // // // // //             <input\n// // // // // // //               type=\"number\"\n// // // // // // //               min=\"1\"\n// // // // // // //               max=\"5\"\n// // // // // // //               value={editReview.rating}\n// // // // // // //               onChange={(e) => setEditReview({ ...editReview, rating: Number(e.target.value) })}\n// // // // // // //               placeholder=\"Rating\"\n// // // // // // //               className=\"form-control mb-2\"\n// // // // // // //             />\n// // // // // // //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// // // // // // //           </div>\n// // // // // // //         ) : (\n// // // // // // //           <div>\n// // // // // // //             <h5>Add Review</h5>\n// // // // // // //             <input\n// // // // // // //               type=\"text\"\n// // // // // // //               value={newReview.user}\n// // // // // // //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// // // // // // //               placeholder=\"User\"\n// // // // // // //               className=\"form-control mb-2\"\n// // // // // // //             />\n// // // // // // //             <input\n// // // // // // //               type=\"text\"\n// // // // // // //               value={newReview.comment}\n// // // // // // //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// // // // // // //               placeholder=\"Comment\"\n// // // // // // //               className=\"form-control mb-2\"\n// // // // // // //             />\n// // // // // // //             <input\n// // // // // // //               type=\"number\"\n// // // // // // //               min=\"1\"\n// // // // // // //               max=\"5\"\n// // // // // // //               value={newReview.rating}\n// // // // // // //               onChange={(e) => setNewReview({ ...newReview, rating: Number(e.target.value) })}\n// // // // // // //               placeholder=\"Rating\"\n// // // // // // //               className=\"form-control mb-2\"\n// // // // // // //             />\n// // // // // // //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// // // // // // //           </div>\n// // // // // // //         )}\n// // // // // // //       </div>\n// // // // // // //     </footer>\n// // // // // // //   );\n// // // // // // // }\n\n// // // // // // // export default Footer;\n\n\n// // // // // // import React, { useEffect, useState } from 'react';\n\n// // // // // // function Footer() {\n// // // // // //   const [reviews, setReviews] = useState([]);\n// // // // // //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// // // // // //   const [editReview, setEditReview] = useState(null);\n\n// // // // // //   // Fetch reviews from the backend\n// // // // // //   const fetchReviews = async () => {\n// // // // // //     try {\n// // // // // //       const response = await fetch('http://localhost:5000/api');\n// // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // //       const data = await response.json();\n// // // // // //       console.log('Fetched reviews:', data); // Debugging\n// // // // // //       setReviews(data);\n// // // // // //     } catch (error) {\n// // // // // //       console.error('Error fetching reviews:', error);\n// // // // // //     }\n// // // // // //   };\n\n// // // // // //   useEffect(() => {\n// // // // // //     fetchReviews();\n// // // // // //   }, []);\n\n// // // // // //   // Create a new review\n// // // // // //   const handleCreate = async () => {\n// // // // // //     if (!newReview.user || !newReview.comment || newReview.rating < 1 || newReview.rating > 5) {\n// // // // // //       alert('Please fill out all fields correctly.');\n// // // // // //       return;\n// // // // // //     }\n// // // // // //     try {\n// // // // // //       const response = await fetch('http://localhost:5000/api', {\n// // // // // //         method: 'POST',\n// // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // //         body: JSON.stringify(newReview),\n// // // // // //       });\n// // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // //       const data = await response.json();\n// // // // // //       console.log('Review added:', data); // Debugging\n// // // // // //       setReviews([...reviews, data]);\n// // // // // //       setNewReview({ user: '', comment: '', rating: 1 });\n// // // // // //     } catch (error) {\n// // // // // //       console.error('Error creating review:', error);\n// // // // // //     }\n// // // // // //   };\n\n// // // // // //   // Update an existing review\n// // // // // //   const handleUpdate = async () => {\n// // // // // //     if (!editReview || !editReview.user || !editReview.comment || editReview.rating < 1 || editReview.rating > 5) {\n// // // // // //       alert('Please fill out all fields correctly.');\n// // // // // //       return;\n// // // // // //     }\n// // // // // //     try {\n// // // // // //       const response = await fetch(`http://localhost:5000/api/${editReview._id}`, {\n// // // // // //         method: 'PUT',\n// // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // //         body: JSON.stringify(editReview),\n// // // // // //       });\n// // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // //       const data = await response.json();\n// // // // // //       console.log('Review updated:', data); // Debugging\n// // // // // //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// // // // // //       setEditReview(null);\n// // // // // //     } catch (error) {\n// // // // // //       console.error('Error updating review:', error);\n// // // // // //     }\n// // // // // //   };\n\n// // // // // //   // Delete a review\n// // // // // //   const handleDelete = async (id) => {\n// // // // // //     try {\n// // // // // //       const response = await fetch(`http://localhost:5000/api/${id}`, { method: 'DELETE' });\n// // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // //       console.log('Review deleted:', id); // Debugging\n// // // // // //       setReviews(reviews.filter(review => review._id !== id));\n// // // // // //     } catch (error) {\n// // // // // //       console.error('Error deleting review:', error);\n// // // // // //     }\n// // // // // //   };\n\n// // // // // //   return (\n// // // // // //     <footer className=\"bg-dark text-light py-3\">\n// // // // // //       <div className=\"container\">\n// // // // // //         <h4>User Reviews</h4>\n// // // // // //         <ul className=\"list-unstyled\">\n// // // // // //           {reviews.map(review => (\n// // // // // //             <li key={review._id} className=\"mb-2\">\n// // // // // //               <div>\n// // // // // //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// // // // // //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// // // // // //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// // // // // //               </div>\n// // // // // //             </li>\n// // // // // //           ))}\n// // // // // //         </ul>\n// // // // // //         {editReview ? (\n// // // // // //           <div>\n// // // // // //             <h5>Edit Review</h5>\n// // // // // //             <input\n// // // // // //               type=\"text\"\n// // // // // //               value={editReview.user}\n// // // // // //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// // // // // //               placeholder=\"User\"\n// // // // // //               className=\"form-control mb-2\"\n// // // // // //             />\n// // // // // //             <input\n// // // // // //               type=\"text\"\n// // // // // //               value={editReview.comment}\n// // // // // //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// // // // // //               placeholder=\"Comment\"\n// // // // // //               className=\"form-control mb-2\"\n// // // // // //             />\n// // // // // //             <input\n// // // // // //               type=\"number\"\n// // // // // //               min=\"1\"\n// // // // // //               max=\"5\"\n// // // // // //               value={editReview.rating}\n// // // // // //               onChange={(e) => setEditReview({ ...editReview, rating: Number(e.target.value) })}\n// // // // // //               placeholder=\"Rating\"\n// // // // // //               className=\"form-control mb-2\"\n// // // // // //             />\n// // // // // //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// // // // // //           </div>\n// // // // // //         ) : (\n// // // // // //           <div>\n// // // // // //             <h5>Add Review</h5>\n// // // // // //             <input\n// // // // // //               type=\"text\"\n// // // // // //               value={newReview.user}\n// // // // // //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// // // // // //               placeholder=\"User\"\n// // // // // //               className=\"form-control mb-2\"\n// // // // // //             />\n// // // // // //             <input\n// // // // // //               type=\"text\"\n// // // // // //               value={newReview.comment}\n// // // // // //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// // // // // //               placeholder=\"Comment\"\n// // // // // //               className=\"form-control mb-2\"\n// // // // // //             />\n// // // // // //             <input\n// // // // // //               type=\"number\"\n// // // // // //               min=\"1\"\n// // // // // //               max=\"5\"\n// // // // // //               value={newReview.rating}\n// // // // // //               onChange={(e) => setNewReview({ ...newReview, rating: Number(e.target.value) })}\n// // // // // //               placeholder=\"Rating\"\n// // // // // //               className=\"form-control mb-2\"\n// // // // // //             />\n// // // // // //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// // // // // //           </div>\n// // // // // //         )}\n// // // // // //       </div>\n// // // // // //     </footer>\n// // // // // //   );\n// // // // // // }\n\n// // // // // // export default Footer;\n\n\n\n// // // // // import React, { useEffect, useState } from 'react';\n\n// // // // // function Footer() {\n// // // // //   const [reviews, setReviews] = useState([]);\n// // // // //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// // // // //   const [editReview, setEditReview] = useState(null);\n\n// // // // //   // Fetch reviews from the backend\n// // // // //   const fetchReviews = async () => {\n// // // // //     try {\n// // // // //       const response = await fetch('http://localhost:5000/api');\n// // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // //       const data = await response.json();\n// // // // //       setReviews(data);\n// // // // //     } catch (error) {\n// // // // //       console.error('Error fetching reviews:', error);\n// // // // //     }\n// // // // //   };\n\n// // // // //   useEffect(() => {\n// // // // //     fetchReviews();\n// // // // //   }, []);\n\n// // // // //   // Create a new review\n// // // // //   const handleCreate = async () => {\n// // // // //     if (!newReview.user || !newReview.comment || newReview.rating < 1 || newReview.rating > 5) {\n// // // // //       alert('Please fill out all fields correctly.');\n// // // // //       return;\n// // // // //     }\n// // // // //     try {\n// // // // //       const response = await fetch('http://localhost:5000/api', {\n// // // // //         method: 'POST',\n// // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // //         body: JSON.stringify(newReview),\n// // // // //       });\n// // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // //       const data = await response.json();\n// // // // //       setReviews([...reviews, data]);\n// // // // //       setNewReview({ user: '', comment: '', rating: 1 });\n// // // // //     } catch (error) {\n// // // // //       console.error('Error creating review:', error);\n// // // // //     }\n// // // // //   };\n\n// // // // //   // Update an existing review\n// // // // //   const handleUpdate = async () => {\n// // // // //     if (!editReview || !editReview.user || !editReview.comment || editReview.rating < 1 || editReview.rating > 5) {\n// // // // //       alert('Please fill out all fields correctly.');\n// // // // //       return;\n// // // // //     }\n// // // // //     try {\n// // // // //       const response = await fetch(`http://localhost:5000/api/${editReview._id}`, {\n// // // // //         method: 'PUT',\n// // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // //         body: JSON.stringify(editReview),\n// // // // //       });\n// // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // //       const data = await response.json();\n// // // // //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// // // // //       setEditReview(null);\n// // // // //     } catch (error) {\n// // // // //       console.error('Error updating review:', error);\n// // // // //     }\n// // // // //   };\n\n// // // // //   // Delete a review\n// // // // //   const handleDelete = async (id) => {\n// // // // //     try {\n// // // // //       const response = await fetch(`http://localhost:5000/api/${id}`, { method: 'DELETE' });\n// // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // //       setReviews(reviews.filter(review => review._id !== id));\n// // // // //     } catch (error) {\n// // // // //       console.error('Error deleting review:', error);\n// // // // //     }\n// // // // //   };\n\n// // // // //   return (\n// // // // //     <footer className=\"bg-dark text-light py-3\">\n// // // // //       <div className=\"container\">\n// // // // //         <h4>User Reviews</h4>\n// // // // //         <ul className=\"list-unstyled\">\n// // // // //           {reviews.map(review => (\n// // // // //             <li key={review._id} className=\"mb-2\">\n// // // // //               <div>\n// // // // //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// // // // //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// // // // //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// // // // //               </div>\n// // // // //             </li>\n// // // // //           ))}\n// // // // //         </ul>\n// // // // //         {editReview ? (\n// // // // //           <div>\n// // // // //             <h5>Edit Review</h5>\n// // // // //             <input\n// // // // //               type=\"text\"\n// // // // //               value={editReview.user}\n// // // // //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// // // // //               placeholder=\"User\"\n// // // // //               className=\"form-control mb-2\"\n// // // // //             />\n// // // // //             <input\n// // // // //               type=\"text\"\n// // // // //               value={editReview.comment}\n// // // // //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// // // // //               placeholder=\"Comment\"\n// // // // //               className=\"form-control mb-2\"\n// // // // //             />\n// // // // //             <input\n// // // // //               type=\"number\"\n// // // // //               min=\"1\"\n// // // // //               max=\"5\"\n// // // // //               value={editReview.rating}\n// // // // //               onChange={(e) => setEditReview({ ...editReview, rating: Number(e.target.value) })}\n// // // // //               placeholder=\"Rating\"\n// // // // //               className=\"form-control mb-2\"\n// // // // //             />\n// // // // //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// // // // //           </div>\n// // // // //         ) : (\n// // // // //           <div>\n// // // // //             <h5>Add Review</h5>\n// // // // //             <input\n// // // // //               type=\"text\"\n// // // // //               value={newReview.user}\n// // // // //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// // // // //               placeholder=\"User\"\n// // // // //               className=\"form-control mb-2\"\n// // // // //             />\n// // // // //             <input\n// // // // //               type=\"text\"\n// // // // //               value={newReview.comment}\n// // // // //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// // // // //               placeholder=\"Comment\"\n// // // // //               className=\"form-control mb-2\"\n// // // // //             />\n// // // // //             <input\n// // // // //               type=\"number\"\n// // // // //               min=\"1\"\n// // // // //               max=\"5\"\n// // // // //               value={newReview.rating}\n// // // // //               onChange={(e) => setNewReview({ ...newReview, rating: Number(e.target.value) })}\n// // // // //               placeholder=\"Rating\"\n// // // // //               className=\"form-control mb-2\"\n// // // // //             />\n// // // // //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// // // // //           </div>\n// // // // //         )}\n// // // // //       </div>\n// // // // //     </footer>\n// // // // //   );\n// // // // // }\n\n// // // // // export default Footer;\n// // // // import React, { useEffect, useState } from 'react';\n\n// // // // function Footer() {\n// // // //   const [reviews, setReviews] = useState([]);\n// // // //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// // // //   const [editReview, setEditReview] = useState(null);\n\n// // // //   // Fetch reviews from the backend\n// // // //   const fetchReviews = async () => {\n// // // //     try {\n// // // //       const response = await fetch('http://localhost:5000/api/reviews');\n// // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // //       const data = await response.json();\n// // // //       setReviews(data);\n// // // //     } catch (error) {\n// // // //       console.error('Error fetching reviews:', error);\n// // // //     }\n// // // //   };\n\n// // // //   useEffect(() => {\n// // // //     fetchReviews();\n// // // //   }, []);\n\n// // // //   // Create a new review\n// // // //   const handleCreate = async () => {\n// // // //     if (!newReview.user || !newReview.comment || newReview.rating < 1 || newReview.rating > 5) {\n// // // //       alert('Please fill out all fields correctly.');\n// // // //       return;\n// // // //     }\n// // // //     try {\n// // // //       const response = await fetch('http://localhost:5000/api/reviews', {\n// // // //         method: 'POST',\n// // // //         headers: { 'Content-Type': 'application/json' },\n// // // //         body: JSON.stringify(newReview),\n// // // //       });\n// // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // //       const data = await response.json();\n// // // //       setReviews([...reviews, data]);\n// // // //       setNewReview({ user: '', comment: '', rating: 1 });\n// // // //     } catch (error) {\n// // // //       console.error('Error creating review:', error);\n// // // //     }\n// // // //   };\n\n// // // //   // Update an existing review\n// // // //   const handleUpdate = async () => {\n// // // //     if (!editReview || !editReview.user || !editReview.comment || editReview.rating < 1 || editReview.rating > 5) {\n// // // //       alert('Please fill out all fields correctly.');\n// // // //       return;\n// // // //     }\n// // // //     try {\n// // // //       const response = await fetch(`http://localhost:5000/api/reviews/${editReview._id}`, {\n// // // //         method: 'PUT',\n// // // //         headers: { 'Content-Type': 'application/json' },\n// // // //         body: JSON.stringify(editReview),\n// // // //       });\n// // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // //       const data = await response.json();\n// // // //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// // // //       setEditReview(null);\n// // // //     } catch (error) {\n// // // //       console.error('Error updating review:', error);\n// // // //     }\n// // // //   };\n\n// // // //   // Delete a review\n// // // //   const handleDelete = async (id) => {\n// // // //     try {\n// // // //       const response = await fetch(`http://localhost:5000/api/reviews/${id}`, { method: 'DELETE' });\n// // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // //       setReviews(reviews.filter(review => review._id !== id));\n// // // //     } catch (error) {\n// // // //       console.error('Error deleting review:', error);\n// // // //     }\n// // // //   };\n\n// // // //   return (\n// // // //     <footer className=\"bg-dark text-light py-3\">\n// // // //       <div className=\"container\">\n// // // //         <h4>User Reviews</h4>\n// // // //         <ul className=\"list-unstyled\">\n// // // //           {reviews.map(review => (\n// // // //             <li key={review._id} className=\"mb-2\">\n// // // //               <div>\n// // // //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// // // //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// // // //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// // // //               </div>\n// // // //             </li>\n// // // //           ))}\n// // // //         </ul>\n// // // //         {editReview ? (\n// // // //           <div>\n// // // //             <h5>Edit Review</h5>\n// // // //             <input\n// // // //               type=\"text\"\n// // // //               value={editReview.user}\n// // // //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// // // //               placeholder=\"User\"\n// // // //               className=\"form-control mb-2\"\n// // // //             />\n// // // //             <input\n// // // //               type=\"text\"\n// // // //               value={editReview.comment}\n// // // //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// // // //               placeholder=\"Comment\"\n// // // //               className=\"form-control mb-2\"\n// // // //             />\n// // // //             <input\n// // // //               type=\"number\"\n// // // //               min=\"1\"\n// // // //               max=\"5\"\n// // // //               value={editReview.rating}\n// // // //               onChange={(e) => setEditReview({ ...editReview, rating: Number(e.target.value) })}\n// // // //               placeholder=\"Rating\"\n// // // //               className=\"form-control mb-2\"\n// // // //             />\n// // // //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// // // //             <button onClick={() => setEditReview(null)} className=\"btn btn-secondary ms-2\">Cancel</button>\n// // // //           </div>\n// // // //         ) : (\n// // // //           <div>\n// // // //             <h5>Add Review</h5>\n// // // //             <input\n// // // //               type=\"text\"\n// // // //               value={newReview.user}\n// // // //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// // // //               placeholder=\"User\"\n// // // //               className=\"form-control mb-2\"\n// // // //             />\n// // // //             <input\n// // // //               type=\"text\"\n// // // //               value={newReview.comment}\n// // // //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// // // //               placeholder=\"Comment\"\n// // // //               className=\"form-control mb-2\"\n// // // //             />\n// // // //             <input\n// // // //               type=\"number\"\n// // // //               min=\"1\"\n// // // //               max=\"5\"\n// // // //               value={newReview.rating}\n// // // //               onChange={(e) => setNewReview({ ...newReview, rating: Number(e.target.value) })}\n// // // //               placeholder=\"Rating\"\n// // // //               className=\"form-control mb-2\"\n// // // //             />\n// // // //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// // // //           </div>\n// // // //         )}\n// // // //       </div>\n// // // //     </footer>\n// // // //   );\n// // // // }\n\n// // // // export default Footer;\n\n// // // import React, { useEffect, useState } from 'react';\n\n// // // function Footer() {\n// // //   const [reviews, setReviews] = useState([]);\n// // //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// // //   const [editReview, setEditReview] = useState(null);\n\n// // //   // Fetch reviews from the backend\n// // //   const fetchReviews = async () => {\n// // //     try {\n// // //       const response = await fetch('http://localhost:5000/api/reviews');\n// // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // //       const data = await response.json();\n// // //       setReviews(data);\n// // //     } catch (error) {\n// // //       console.error('Error fetching reviews:', error);\n// // //     }\n// // //   };\n\n// // //   useEffect(() => {\n// // //     fetchReviews();\n// // //   }, []);\n\n// // //   // Create a new review\n// // //   const handleCreate = async () => {\n// // //     if (!newReview.user || !newReview.comment || newReview.rating < 1 || newReview.rating > 5) {\n// // //       alert('Please fill out all fields correctly.');\n// // //       return;\n// // //     }\n// // //     try {\n// // //       const response = await fetch('http://localhost:5000/api/reviews', {\n// // //         method: 'POST',\n// // //         headers: { 'Content-Type': 'application/json' },\n// // //         body: JSON.stringify(newReview),\n// // //       });\n// // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // //       const data = await response.json();\n// // //       setReviews([...reviews, data]);\n// // //       setNewReview({ user: '', comment: '', rating: 1 });\n// // //     } catch (error) {\n// // //       console.error('Error creating review:', error);\n// // //     }\n// // //   };\n\n// // //   // Update an existing review\n// // //   const handleUpdate = async () => {\n// // //     if (!editReview || !editReview.user || !editReview.comment || editReview.rating < 1 || editReview.rating > 5) {\n// // //       alert('Please fill out all fields correctly.');\n// // //       return;\n// // //     }\n// // //     try {\n// // //       const response = await fetch(`http://localhost:5000/api/reviews/${editReview._id}`, {\n// // //         method: 'PUT',\n// // //         headers: { 'Content-Type': 'application/json' },\n// // //         body: JSON.stringify(editReview),\n// // //       });\n// // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // //       const data = await response.json();\n// // //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// // //       setEditReview(null);\n// // //     } catch (error) {\n// // //       console.error('Error updating review:', error);\n// // //     }\n// // //   };\n\n// // //   // Delete a review\n// // //   const handleDelete = async (id) => {\n// // //     try {\n// // //       const response = await fetch(`http://localhost:5000/api/reviews/${id}`, { method: 'DELETE' });\n// // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // //       setReviews(reviews.filter(review => review._id !== id));\n// // //     } catch (error) {\n// // //       console.error('Error deleting review:', error);\n// // //     }\n// // //   };\n\n// // //   return (\n// // //     <footer className=\"bg-dark text-light py-3\">\n// // //       <div className=\"container\">\n// // //         <h4>User Reviews</h4>\n// // //         <ul className=\"list-unstyled\">\n// // //           {reviews.map(review => (\n// // //             <li key={review._id} className=\"mb-2\">\n// // //               <div>\n// // //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// // //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// // //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// // //               </div>\n// // //             </li>\n// // //           ))}\n// // //         </ul>\n// // //         {editReview ? (\n// // //           <div>\n// // //             <h5>Edit Review</h5>\n// // //             <input\n// // //               type=\"text\"\n// // //               value={editReview.user}\n// // //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// // //               placeholder=\"User\"\n// // //               className=\"form-control mb-2\"\n// // //             />\n// // //             <input\n// // //               type=\"text\"\n// // //               value={editReview.comment}\n// // //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// // //               placeholder=\"Comment\"\n// // //               className=\"form-control mb-2\"\n// // //             />\n// // //             <input\n// // //               type=\"number\"\n// // //               min=\"1\"\n// // //               max=\"5\"\n// // //               value={editReview.rating}\n// // //               onChange={(e) => setEditReview({ ...editReview, rating: Number(e.target.value) })}\n// // //               placeholder=\"Rating\"\n// // //               className=\"form-control mb-2\"\n// // //             />\n// // //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// // //             <button onClick={() => setEditReview(null)} className=\"btn btn-secondary ms-2\">Cancel</button>\n// // //           </div>\n// // //         ) : (\n// // //           <div>\n// // //             <h5>Add Review</h5>\n// // //             <input\n// // //               type=\"text\"\n// // //               value={newReview.user}\n// // //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// // //               placeholder=\"User\"\n// // //               className=\"form-control mb-2\"\n// // //             />\n// // //             <input\n// // //               type=\"text\"\n// // //               value={newReview.comment}\n// // //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// // //               placeholder=\"Comment\"\n// // //               className=\"form-control mb-2\"\n// // //             />\n// // //             <input\n// // //               type=\"number\"\n// // //               min=\"1\"\n// // //               max=\"5\"\n// // //               value={newReview.rating}\n// // //               onChange={(e) => setNewReview({ ...newReview, rating: Number(e.target.value) })}\n// // //               placeholder=\"Rating\"\n// // //               className=\"form-control mb-2\"\n// // //             />\n// // //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// // //           </div>\n// // //         )}\n// // //       </div>\n// // //     </footer>\n// // //   );\n// // // }\n\n// // // export default Footer;\n\n// // import React, { useState, useEffect } from 'react';\n\n// // const Footer = () => {\n// //   const [reviews, setReviews] = useState([]);\n// //   const [newReview, setNewReview] = useState({\n// //     userId: '',\n// //     foodItemId: '',\n// //     rating: '',\n// //     review: ''\n// //   });\n\n// //   useEffect(() => {\n// //     fetchReviews();\n// //   }, []);\n\n// //   const fetchReviews = async () => {\n// //     try {\n// //       const response = await fetch('http://localhost:5000/api/reviews');\n// //       if (!response.ok) throw new Error('Network response was not ok');\n// //       const data = await response.json();\n// //       setReviews(data);\n// //     } catch (error) {\n// //       console.error('Error fetching reviews:', error);\n// //     }\n// //   };\n\n// //   const handleInputChange = (e) => {\n// //     const { name, value } = e.target;\n// //     setNewReview({\n// //       ...newReview,\n// //       [name]: value\n// //     });\n// //   };\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     try {\n// //       const response = await fetch('http://localhost:5000/api/reviews', {\n// //         method: 'POST',\n// //         headers: {\n// //           'Content-Type': 'application/json'\n// //         },\n// //         body: JSON.stringify(newReview)\n// //       });\n// //       if (!response.ok) throw new Error('Network response was not ok');\n// //       await fetchReviews(); // Refresh the list after adding a new review\n// //       setNewReview({\n// //         userId: '',\n// //         foodItemId: '',\n// //         rating: '',\n// //         review: ''\n// //       });\n// //     } catch (error) {\n// //       console.error('Error creating review:', error);\n// //     }\n// //   };\n\n// //   const handleDelete = async (id) => {\n// //     try {\n// //       const response = await fetch(`http://localhost:5000/api/reviews/${id}`, {\n// //         method: 'DELETE'\n// //       });\n// //       if (!response.ok) throw new Error('Network response was not ok');\n// //       await fetchReviews(); // Refresh the list after deleting a review\n// //     } catch (error) {\n// //       console.error('Error deleting review:', error);\n// //     }\n// //   };\n\n// //   return (\n// //     <div>\n// //       <h2>Footer Component</h2>\n// //       <form onSubmit={handleSubmit}>\n// //         <input\n// //           type=\"text\"\n// //           name=\"userId\"\n// //           value={newReview.userId}\n// //           onChange={handleInputChange}\n// //           placeholder=\"User ID\"\n// //         />\n// //         <input\n// //           type=\"text\"\n// //           name=\"foodItemId\"\n// //           value={newReview.foodItemId}\n// //           onChange={handleInputChange}\n// //           placeholder=\"Food Item ID\"\n// //         />\n// //         <input\n// //           type=\"number\"\n// //           name=\"rating\"\n// //           value={newReview.rating}\n// //           onChange={handleInputChange}\n// //           placeholder=\"Rating\"\n// //         />\n// //         <textarea\n// //           name=\"review\"\n// //           value={newReview.review}\n// //           onChange={handleInputChange}\n// //           placeholder=\"Review\"\n// //         />\n// //         <button type=\"submit\">Add Review</button>\n// //       </form>\n\n// //       <div>\n// //         <h3>Reviews</h3>\n// //         {reviews.map((review) => (\n// //           <div key={review._id}>\n// //             <p>User: {review.userId}</p>\n// //             <p>Food Item: {review.foodItemId}</p>\n// //             <p>Rating: {review.rating}</p>\n// //             <p>Review: {review.review}</p>\n// //             <button onClick={() => handleDelete(review._id)}>Delete</button>\n// //           </div>\n// //         ))}\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default Footer;\n\n\n// import React, { useEffect, useState } from 'react';\n\n// export default function Footer() {\n//   const [reviews, setReviews] = useState([]);\n//   const [userId, setUserId] = useState('');\n//   const [foodItemId, setFoodItemId] = useState('');\n//   const [rating, setRating] = useState('');\n//   const [review, setReview] = useState('');\n//   const [editMode, setEditMode] = useState(false);\n//   const [currentReviewId, setCurrentReviewId] = useState(null);\n\n//   // Fetch all reviews\n//   const fetchReviews = async () => {\n//     try {\n//       const response = await fetch('http://localhost:5000/api/reviews');\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! Status: ${response.status}`);\n//       }\n//       const data = await response.json();\n//       setReviews(data);\n//     } catch (error) {\n//       console.error('Error fetching reviews:', error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchReviews();\n//   }, []);\n\n//   // Create a new review\n//   const handleCreateReview = async () => {\n//     try {\n//       const response = await fetch('http://localhost:5000/api/reviews', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ userId, foodItemId, rating, review }),\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! Status: ${response.status}`);\n//       }\n\n//       const newReview = await response.json();\n//       setReviews([...reviews, newReview]);\n//       setUserId('');\n//       setFoodItemId('');\n//       setRating('');\n//       setReview('');\n//     } catch (error) {\n//       console.error('Error creating review:', error);\n//     }\n//   };\n\n//   // Update an existing review\n//   const handleUpdateReview = async () => {\n//     try {\n//       const response = await fetch(`http://localhost:5000/api/reviews/${currentReviewId}`, {\n//         method: 'PUT',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ userId, foodItemId, rating, review }),\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! Status: ${response.status}`);\n//       }\n\n//       const updatedReview = await response.json();\n//       setReviews(\n//         reviews.map((r) => (r._id === currentReviewId ? updatedReview : r))\n//       );\n//       setEditMode(false);\n//       setUserId('');\n//       setFoodItemId('');\n//       setRating('');\n//       setReview('');\n//       setCurrentReviewId(null);\n//     } catch (error) {\n//       console.error('Error updating review:', error);\n//     }\n//   };\n\n//   // Delete a review\n//   const handleDeleteReview = async (id) => {\n//     try {\n//       const response = await fetch(`http://localhost:5000/api/reviews/${id}`, {\n//         method: 'DELETE',\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! Status: ${response.status}`);\n//       }\n\n//       setReviews(reviews.filter((review) => review._id !== id));\n//     } catch (error) {\n//       console.error('Error deleting review:', error);\n//     }\n//   };\n\n//   // Set review data for editing\n//   const handleEditReview = (review) => {\n//     setUserId(review.userId);\n//     setFoodItemId(review.foodItemId);\n//     setRating(review.rating);\n//     setReview(review.review);\n//     setCurrentReviewId(review._id);\n//     setEditMode(true);\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h2>Reviews</h2>\n//       <div>\n//         <input\n//           type=\"text\"\n//           placeholder=\"User ID\"\n//           value={userId}\n//           onChange={(e) => setUserId(e.target.value)}\n//         />\n//         <input\n//           type=\"text\"\n//           placeholder=\"Food Item ID\"\n//           value={foodItemId}\n//           onChange={(e) => setFoodItemId(e.target.value)}\n//         />\n//         <input\n//           type=\"number\"\n//           placeholder=\"Rating\"\n//           value={rating}\n//           onChange={(e) => setRating(e.target.value)}\n//         />\n//         <textarea\n//           placeholder=\"Review\"\n//           value={review}\n//           onChange={(e) => setReview(e.target.value)}\n//         ></textarea>\n//         {editMode ? (\n//           <button onClick={handleUpdateReview}>Update Review</button>\n//         ) : (\n//           <button onClick={handleCreateReview}>Submit Review</button>\n//         )}\n//       </div>\n//       <ul>\n//         {reviews.map((review) => (\n//           <li key={review._id}>\n//             <strong>{review.userId}</strong>: {review.review} (Rating: {review.rating})\n//             <button onClick={() => handleEditReview(review)}>Edit</button>\n//             <button onClick={() => handleDeleteReview(review._id)}>Delete</button>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n\n\n\n\n\nimport React, { useEffect, useState } from 'react';\n\nexport default function Footer() {\n  const [reviews, setReviews] = useState([]);\n  const [formData, setFormData] = useState({\n    userId: '',\n    foodItemId: '',\n    rating: '',\n    review: '',\n  });\n  const [editMode, setEditMode] = useState(false);\n  const [currentReviewId, setCurrentReviewId] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState({ type: '', text: '' });\n\n  const apiUrl = 'http://localhost:5000/api';\n\n  // Fetch all reviews\n  const fetchReviews = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(apiUrl);\n      if (!response.ok) {\n        throw new Error(`Error: ${response.status} ${response.statusText}`);\n      }\n      const data = await response.json();\n      setReviews(data);\n    } catch (error) {\n      setMessage({ type: 'danger', text: error.message });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchReviews();\n  }, []);\n\n  // Handle input change\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  // Validate form data\n  const validateForm = () => {\n    const { userId, foodItemId, rating, review } = formData;\n    if (!userId || !foodItemId || !rating || !review) {\n      setMessage({ type: 'warning', text: 'Please fill in all fields.' });\n      return false;\n    }\n    if (rating < 1 || rating > 5) {\n      setMessage({ type: 'warning', text: 'Rating must be between 1 and 5.' });\n      return false;\n    }\n    return true;\n  };\n\n  // Create a new review\n  const handleCreateReview = async (e) => {\n    e.preventDefault();\n    if (!validateForm()) return;\n    setLoading(true);\n    try {\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(formData),\n      });\n      if (!response.ok) {\n        throw new Error('Failed to create review.');\n      }\n      const newReview = await response.json();\n      setReviews([...reviews, newReview]);\n      setFormData({ userId: '', foodItemId: '', rating: '', review: '' });\n      setMessage({ type: 'success', text: 'Review added successfully.' });\n    } catch (error) {\n      setMessage({ type: 'danger', text: error.message });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Update an existing review\n  const handleUpdateReview = async (e) => {\n    e.preventDefault();\n    if (!validateForm()) return;\n    setLoading(true);\n    try {\n      const response = await fetch(`${apiUrl}/${currentReviewId}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(formData),\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update review.');\n      }\n      const updatedReview = await response.json();\n      setReviews(\n        reviews.map((review) =>\n          review._id === currentReviewId ? updatedReview : review\n        )\n      );\n      setEditMode(false);\n      setCurrentReviewId(null);\n      setFormData({ userId: '', foodItemId: '', rating: '', review: '' });\n      setMessage({ type: 'success', text: 'Review updated successfully.' });\n    } catch (error) {\n      setMessage({ type: 'danger', text: error.message });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Delete a review\n  const handleDeleteReview = async (id) => {\n    if (!window.confirm('Are you sure you want to delete this review?')) return;\n    setLoading(true);\n    try {\n      const response = await fetch(`${apiUrl}/${id}`, {\n        method: 'DELETE',\n      });\n      if (!response.ok) {\n        throw new Error('Failed to delete review.');\n      }\n      setReviews(reviews.filter((review) => review._id !== id));\n      setMessage({ type: 'success', text: 'Review deleted successfully.' });\n    } catch (error) {\n      setMessage({ type: 'danger', text: error.message });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Set review data for editing\n  const handleEditReview = (review) => {\n    setEditMode(true);\n    setCurrentReviewId(review._id);\n    setFormData({\n      userId: review.userId,\n      foodItemId: review.foodItemId,\n      rating: review.rating,\n      review: review.review,\n    });\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  return (\n    <footer className=\"bg-dark text-light py-5\">\n      <div className=\"container\">\n        <h2 className=\"mb-4\">User Reviews</h2>\n\n        {/* Alert Message */}\n        {message.text && (\n          <div className={`alert alert-${message.type}`} role=\"alert\">\n            {message.text}\n          </div>\n        )}\n\n        {/* Review Form */}\n        <form\n          onSubmit={editMode ? handleUpdateReview : handleCreateReview}\n          className=\"mb-5\"\n        >\n          <div className=\"row g-3\">\n            <div className=\"col-md-3\">\n              <label htmlFor=\"userId\" className=\"form-label\">\n                User ID\n              </label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"userId\"\n                name=\"userId\"\n                value={formData.userId}\n                onChange={handleInputChange}\n                required\n              />\n            </div>\n            <div className=\"col-md-3\">\n              <label htmlFor=\"foodItemId\" className=\"form-label\">\n                Food Item ID\n              </label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"foodItemId\"\n                name=\"foodItemId\"\n                value={formData.foodItemId}\n                onChange={handleInputChange}\n                required\n              />\n            </div>\n            <div className=\"col-md-2\">\n              <label htmlFor=\"rating\" className=\"form-label\">\n                Rating\n              </label>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                id=\"rating\"\n                name=\"rating\"\n                min=\"1\"\n                max=\"5\"\n                value={formData.rating}\n                onChange={handleInputChange}\n                required\n              />\n            </div>\n            <div className=\"col-md-4\">\n              <label htmlFor=\"review\" className=\"form-label\">\n                Review\n              </label>\n              <textarea\n                className=\"form-control\"\n                id=\"review\"\n                name=\"review\"\n                rows=\"1\"\n                value={formData.review}\n                onChange={handleInputChange}\n                required\n              ></textarea>\n            </div>\n          </div>\n          <div className=\"mt-3\">\n            <button\n              type=\"submit\"\n              className={`btn ${editMode ? 'btn-warning' : 'btn-success'}`}\n              disabled={loading}\n            >\n              {loading\n                ? 'Processing...'\n                : editMode\n                ? 'Update Review'\n                : 'Submit Review'}\n            </button>\n            {editMode && (\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary ms-2\"\n                onClick={() => {\n                  setEditMode(false);\n                  setFormData({\n                    userId: '',\n                    foodItemId: '',\n                    rating: '',\n                    review: '',\n                  });\n                  setCurrentReviewId(null);\n                }}\n                disabled={loading}\n              >\n                Cancel\n              </button>\n            )}\n          </div>\n        </form>\n\n        {/* Reviews List */}\n        <div>\n          {loading ? (\n            <div className=\"text-center\">\n              <div\n                className=\"spinner-border text-light\"\n                role=\"status\"\n              ></div>\n              <span className=\"ms-2\">Loading Reviews...</span>\n            </div>\n          ) : reviews.length > 0 ? (\n            <div className=\"row\">\n              {reviews.map((review) => (\n                <div className=\"col-md-6 mb-4\" key={review._id}>\n                  <div className=\"card bg-secondary text-light\">\n                    <div className=\"card-body\">\n                      <h5 className=\"card-title\">\n                        User: {review.userId} | Food Item: {review.foodItemId}\n                      </h5>\n                      <h6 className=\"card-subtitle mb-2 text-warning\">\n                        Rating: {review.rating}/5\n                      </h6>\n                      <p className=\"card-text\">{review.review}</p>\n                      <button\n                        className=\"btn btn-primary me-2\"\n                        onClick={() => handleEditReview(review)}\n                      >\n                        Edit\n                      </button>\n                      <button\n                        className=\"btn btn-danger\"\n                        onClick={() => handleDeleteReview(review._id)}\n                      >\n                        Delete\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <p>No reviews available.</p>\n          )}\n        </div>\n      </div>\n    </footer>\n  );\n}\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOA,OA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}