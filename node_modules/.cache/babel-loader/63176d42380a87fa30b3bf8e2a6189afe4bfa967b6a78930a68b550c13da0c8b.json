{"ast":null,"code":"// // import React, { useEffect } from 'react';\n// // import { useCart, useDispatchCart } from '../components/ContextReducer';\n\n// // export default function Cart() {\n// //     const cartItems = useCart(); // Fetch items from cart context\n// //     const dispatch = useDispatchCart();\n\n// //     // Debug: Log cartItems to see what items are in the cart\n// //     useEffect(() => {\n// //         console.log('Cart Items:', cartItems);\n// //     }, [cartItems]);\n\n// //     // Calculate the grand total of all cart items (price * quantity for each item)\n// //     let totalPrice = cartItems.reduce((total, food) => total + (food.price * food.qty), 0);\n\n// //     const handleRemove = (index) => {\n// //         dispatch({ type: 'REMOVE', index });\n// //     };\n\n// //     if (cartItems.length === 0) {\n// //         return (\n// //             <div className=\"text-center m-5 text-light\">\n// //                 Your Cart is Empty\n// //             </div>\n// //         );\n// //     }\n// // const  handleCheckOut=async()=>{\n// //   let userEmail=localStorage.getItem(\"userEmail\");\n// //   let response=await fetch(\"http://localhost:5000/api/orderData\"),{\n// //   method:'POST',\n// //   headers:{\n// //     'Content-Type':'application/json'\n// //   },\n// //   body:JSON.stringnify{\n// //     order_data:cartItems,\n// //     email:userEmail,\n// //     order_date:new Date().toString()\n// //   }\n// // };\n// // if(response.status===200){\n// //   dispatch({type:\"DROP\"})\n// // }\n// // }\n// //     return (\n// //         <div className=\"container m-auto mt-5 responsive table-responsive-sm table-responsive-md\">\n// //             <h2 className=\"table table-hover\">Your Cart</h2>\n// //             <table className=\"table table-dark table-bordered table-hover\">\n// //                 <thead>\n// //                     <tr>\n// //                         <th scope=\"col\" className=\"text-light\">S.No</th>\n// //                         <th scope=\"col\" className=\"text-light\">Food Name</th>\n// //                         <th scope=\"col\" className=\"text-light\">Quantity</th>\n// //                         <th scope=\"col\" className=\"text-light\">Option</th>\n// //                         <th scope=\"col\" className=\"text-light\">Amount</th>\n// //                         <th scope=\"col\" className=\"text-light\">Action</th>\n// //                     </tr>\n// //                 </thead>\n// //                 <tbody>\n// //                     {cartItems.map((item, index) => (\n// //                         <tr key={index}>\n// //                             <td className=\"text-light\">{index + 1}</td>\n// //                             <td className=\"text-light\">{item.name}</td>\n// //                             <td className=\"text-light\">{item.qty}</td>\n// //                             <td className=\"text-light\">{item.size}</td>\n// //                             <td className=\"text-light\">₹{item.price * item.qty}</td>\n// //                             <td>\n// //                                 <button className=\"btn btn-danger\" onClick={() => handleRemove(index)}>\n// //                                     Remove\n// //                                 </button>\n// //                             </td>\n// //                         </tr>\n// //                     ))}\n// //                 </tbody>\n// //             </table>\n// //             <div className=\"fs-2 mt-3 text-light\">\n// //                 {/* Displaying the grand total */}\n// //                 <h1>Grand Total: ₹{totalPrice}</h1>\n// //             </div>\n// //             <div>\n// //                 <button className='btn btn-success mt-5'>CheckOut</button>\n// //             </div>\n// //         </div>\n// //     );\n// // } \n\n// import React, { useEffect } from 'react';\n// import { useCart, useDispatchCart } from '../components/ContextReducer';\n\n// export default function Cart() {\n//     const cartItems = useCart(); // Fetch items from cart context\n//     const dispatch = useDispatchCart();\n\n//     // Debug: Log cartItems to see what items are in the cart\n//     useEffect(() => {\n//         console.log('Cart Items:', cartItems);\n//     }, [cartItems]);\n\n//     // Calculate the grand total of all cart items (price * quantity for each item)\n//     let totalPrice = cartItems.reduce((total, food) => total + (food.price * food.qty), 0);\n\n//     const handleRemove = (index) => {\n//         dispatch({ type: 'REMOVE', index });\n//     };\n\n//     if (cartItems.length === 0) {\n//         return (\n//             <div className=\"text-center m-5 text-light\">\n//                 Your Cart is Empty\n//             </div>\n//         );\n//     }\n\n//     const handleCheckOut = async () => {\n//         let userEmail = localStorage.getItem(\"userEmail\");\n//         let response = await fetch(\"http://localhost:5000/api/orderData\", {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json'\n//             },\n//             body: JSON.stringify({  // Corrected to use JSON.stringify properly\n//                 order_data: cartItems,\n//                 email: userEmail,\n//                 order_date: new Date().toString()\n//             })\n//         });\n\n//         if (response.status === 200) {\n//             dispatch({ type: \"DROP\" });\n//             // Optionally, redirect to a confirmation page or show a success message here\n//         } else {\n//             console.error('Failed to place order'); // Handle error appropriately\n//         }\n//     };\n\n//     return (\n//         <div className=\"container m-auto mt-5 responsive table-responsive-sm table-responsive-md\">\n//             <h2 className=\"table table-hover text-light\">Your Cart</h2>\n//             <table className=\"table table-dark table-bordered table-hover\">\n//                 <thead>\n//                     <tr>\n//                         <th scope=\"col\" className=\"text-light\">S.No</th>\n//                         <th scope=\"col\" className=\"text-light\">Food Name</th>\n//                         <th scope=\"col\" className=\"text-light\">Quantity</th>\n//                         <th scope=\"col\" className=\"text-light\">Option</th>\n//                         <th scope=\"col\" className=\"text-light\">Amount</th>\n//                         <th scope=\"col\" className=\"text-light\">Action</th>\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {cartItems.map((item, index) => (\n//                         <tr key={index}>\n//                             <td className=\"text-light\">{index + 1}</td>\n//                             <td className=\"text-light\">{item.name}</td>\n//                             <td className=\"text-light\">{item.qty}</td>\n//                             <td className=\"text-light\">{item.size}</td>\n//                             <td className=\"text-light\">₹{item.price * item.qty}</td>\n//                             <td>\n//                                 <button className=\"btn btn-danger\" onClick={() => handleRemove(index)}>\n//                                     Remove\n//                                 </button>\n//                             </td>\n//                         </tr>\n//                     ))}\n//                 </tbody>\n//             </table>\n//             <div className=\"fs-2 mt-3 text-light\">\n//                 {/* Displaying the grand total */}\n//                 <h1>Grand Total: ₹{totalPrice}</h1>\n//             </div>\n//             <div>\n//                 <button className='btn btn-success mt-5' onClick={handleCheckOut}>CheckOut</button>\n//             </div>\n//         </div>\n//     );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/ruhan/Documents/gofood/mernapp/src/screens/Cart.js"],"sourcesContent":["// // import React, { useEffect } from 'react';\r\n// // import { useCart, useDispatchCart } from '../components/ContextReducer';\r\n\r\n// // export default function Cart() {\r\n// //     const cartItems = useCart(); // Fetch items from cart context\r\n// //     const dispatch = useDispatchCart();\r\n\r\n// //     // Debug: Log cartItems to see what items are in the cart\r\n// //     useEffect(() => {\r\n// //         console.log('Cart Items:', cartItems);\r\n// //     }, [cartItems]);\r\n\r\n// //     // Calculate the grand total of all cart items (price * quantity for each item)\r\n// //     let totalPrice = cartItems.reduce((total, food) => total + (food.price * food.qty), 0);\r\n\r\n// //     const handleRemove = (index) => {\r\n// //         dispatch({ type: 'REMOVE', index });\r\n// //     };\r\n\r\n// //     if (cartItems.length === 0) {\r\n// //         return (\r\n// //             <div className=\"text-center m-5 text-light\">\r\n// //                 Your Cart is Empty\r\n// //             </div>\r\n// //         );\r\n// //     }\r\n// // const  handleCheckOut=async()=>{\r\n// //   let userEmail=localStorage.getItem(\"userEmail\");\r\n// //   let response=await fetch(\"http://localhost:5000/api/orderData\"),{\r\n// //   method:'POST',\r\n// //   headers:{\r\n// //     'Content-Type':'application/json'\r\n// //   },\r\n// //   body:JSON.stringnify{\r\n// //     order_data:cartItems,\r\n// //     email:userEmail,\r\n// //     order_date:new Date().toString()\r\n// //   }\r\n// // };\r\n// // if(response.status===200){\r\n// //   dispatch({type:\"DROP\"})\r\n// // }\r\n// // }\r\n// //     return (\r\n// //         <div className=\"container m-auto mt-5 responsive table-responsive-sm table-responsive-md\">\r\n// //             <h2 className=\"table table-hover\">Your Cart</h2>\r\n// //             <table className=\"table table-dark table-bordered table-hover\">\r\n// //                 <thead>\r\n// //                     <tr>\r\n// //                         <th scope=\"col\" className=\"text-light\">S.No</th>\r\n// //                         <th scope=\"col\" className=\"text-light\">Food Name</th>\r\n// //                         <th scope=\"col\" className=\"text-light\">Quantity</th>\r\n// //                         <th scope=\"col\" className=\"text-light\">Option</th>\r\n// //                         <th scope=\"col\" className=\"text-light\">Amount</th>\r\n// //                         <th scope=\"col\" className=\"text-light\">Action</th>\r\n// //                     </tr>\r\n// //                 </thead>\r\n// //                 <tbody>\r\n// //                     {cartItems.map((item, index) => (\r\n// //                         <tr key={index}>\r\n// //                             <td className=\"text-light\">{index + 1}</td>\r\n// //                             <td className=\"text-light\">{item.name}</td>\r\n// //                             <td className=\"text-light\">{item.qty}</td>\r\n// //                             <td className=\"text-light\">{item.size}</td>\r\n// //                             <td className=\"text-light\">₹{item.price * item.qty}</td>\r\n// //                             <td>\r\n// //                                 <button className=\"btn btn-danger\" onClick={() => handleRemove(index)}>\r\n// //                                     Remove\r\n// //                                 </button>\r\n// //                             </td>\r\n// //                         </tr>\r\n// //                     ))}\r\n// //                 </tbody>\r\n// //             </table>\r\n// //             <div className=\"fs-2 mt-3 text-light\">\r\n// //                 {/* Displaying the grand total */}\r\n// //                 <h1>Grand Total: ₹{totalPrice}</h1>\r\n// //             </div>\r\n// //             <div>\r\n// //                 <button className='btn btn-success mt-5'>CheckOut</button>\r\n// //             </div>\r\n// //         </div>\r\n// //     );\r\n// // } \r\n\r\n// import React, { useEffect } from 'react';\r\n// import { useCart, useDispatchCart } from '../components/ContextReducer';\r\n\r\n// export default function Cart() {\r\n//     const cartItems = useCart(); // Fetch items from cart context\r\n//     const dispatch = useDispatchCart();\r\n\r\n//     // Debug: Log cartItems to see what items are in the cart\r\n//     useEffect(() => {\r\n//         console.log('Cart Items:', cartItems);\r\n//     }, [cartItems]);\r\n\r\n//     // Calculate the grand total of all cart items (price * quantity for each item)\r\n//     let totalPrice = cartItems.reduce((total, food) => total + (food.price * food.qty), 0);\r\n\r\n//     const handleRemove = (index) => {\r\n//         dispatch({ type: 'REMOVE', index });\r\n//     };\r\n\r\n//     if (cartItems.length === 0) {\r\n//         return (\r\n//             <div className=\"text-center m-5 text-light\">\r\n//                 Your Cart is Empty\r\n//             </div>\r\n//         );\r\n//     }\r\n\r\n//     const handleCheckOut = async () => {\r\n//         let userEmail = localStorage.getItem(\"userEmail\");\r\n//         let response = await fetch(\"http://localhost:5000/api/orderData\", {\r\n//             method: 'POST',\r\n//             headers: {\r\n//                 'Content-Type': 'application/json'\r\n//             },\r\n//             body: JSON.stringify({  // Corrected to use JSON.stringify properly\r\n//                 order_data: cartItems,\r\n//                 email: userEmail,\r\n//                 order_date: new Date().toString()\r\n//             })\r\n//         });\r\n\r\n//         if (response.status === 200) {\r\n//             dispatch({ type: \"DROP\" });\r\n//             // Optionally, redirect to a confirmation page or show a success message here\r\n//         } else {\r\n//             console.error('Failed to place order'); // Handle error appropriately\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"container m-auto mt-5 responsive table-responsive-sm table-responsive-md\">\r\n//             <h2 className=\"table table-hover text-light\">Your Cart</h2>\r\n//             <table className=\"table table-dark table-bordered table-hover\">\r\n//                 <thead>\r\n//                     <tr>\r\n//                         <th scope=\"col\" className=\"text-light\">S.No</th>\r\n//                         <th scope=\"col\" className=\"text-light\">Food Name</th>\r\n//                         <th scope=\"col\" className=\"text-light\">Quantity</th>\r\n//                         <th scope=\"col\" className=\"text-light\">Option</th>\r\n//                         <th scope=\"col\" className=\"text-light\">Amount</th>\r\n//                         <th scope=\"col\" className=\"text-light\">Action</th>\r\n//                     </tr>\r\n//                 </thead>\r\n//                 <tbody>\r\n//                     {cartItems.map((item, index) => (\r\n//                         <tr key={index}>\r\n//                             <td className=\"text-light\">{index + 1}</td>\r\n//                             <td className=\"text-light\">{item.name}</td>\r\n//                             <td className=\"text-light\">{item.qty}</td>\r\n//                             <td className=\"text-light\">{item.size}</td>\r\n//                             <td className=\"text-light\">₹{item.price * item.qty}</td>\r\n//                             <td>\r\n//                                 <button className=\"btn btn-danger\" onClick={() => handleRemove(index)}>\r\n//                                     Remove\r\n//                                 </button>\r\n//                             </td>\r\n//                         </tr>\r\n//                     ))}\r\n//                 </tbody>\r\n//             </table>\r\n//             <div className=\"fs-2 mt-3 text-light\">\r\n//                 {/* Displaying the grand total */}\r\n//                 <h1>Grand Total: ₹{totalPrice}</h1>\r\n//             </div>\r\n//             <div>\r\n//                 <button className='btn btn-success mt-5' onClick={handleCheckOut}>CheckOut</button>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}