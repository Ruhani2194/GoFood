{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruhan\\\\Documents\\\\gofood\\\\mernapp\\\\src\\\\components\\\\Footer.js\",\n  _s = $RefreshSig$();\n// // // // // // // // // import React from 'react'\n// // // // // // // // // import {link} from 'react-router-dom'\n// // // // // // // // // export default function Footer() {\n// // // // // // // // //   return (\n// // // // // // // // //     <div><div className=\"container\">\n// // // // // // // // //     <footer className=\"d-flex flex-wrap justify-content-between align-items-center py-3 my-4 border-top\">\n// // // // // // // // //       <div className=\"col-md-4 d-flex align-items-center\">\n// // // // // // // // //         <link to=\"/\" className=\"mb-3 me-2 mb-md-0 text-muted text-decoration-none lh-1\">\n// // // // // // // // //         </link>\n// // // // // // // // //         <span className=\"text-muted\">Â© 2024<i>GoFood</i>, Inc</span>\n// // // // // // // // //       </div>\n\n// // // // // // // // //       {/* <ul className=\"nav col-md-4 justify-content-end list-unstyled d-flex\">\n// // // // // // // // //         <li className=\"ms-3\"><a className=\"text-muted\" href=\"/\"><svg className=\"bi\" width=\"24\" height=\"24\"><use ></use></svg></a></li>\n// // // // // // // // //         <li className=\"ms-3\"><a className=\"text-muted\" href=\"/\"><svg className=\"bi\" width=\"24\" height=\"24\"><use ></use></svg></a></li>\n// // // // // // // // //         <li className=\"ms-3\"><a className=\"text-muted\" href=\"/\"><svg className=\"bi\" width=\"24\" height=\"24\"><use></use></svg></a></li>\n// // // // // // // // //       </ul> */}\n// // // // // // // // //     </footer>\n// // // // // // // // //   </div>\n// // // // // // // // //   </div>\n// // // // // // // // //   )\n// // // // // // // // // }\n\n// // // // // // // // import React, { useEffect, useState } from 'react';\n\n// // // // // // // // function Footer() {\n// // // // // // // //   const [reviews, setReviews] = useState([]);\n// // // // // // // //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// // // // // // // //   const [editReview, setEditReview] = useState(null);\n\n// // // // // // // //   // Fetch reviews from the backend\n// // // // // // // //   const fetchReviews = async () => {\n// // // // // // // //     try {\n// // // // // // // //       const response = await fetch('http://localhost:5000/api/reviews');\n// // // // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // // // //       const data = await response.json();\n// // // // // // // //       setReviews(data);\n// // // // // // // //     } catch (error) {\n// // // // // // // //       console.error('Error fetching reviews:', error);\n// // // // // // // //     }\n// // // // // // // //   };\n\n// // // // // // // //   useEffect(() => {\n// // // // // // // //     fetchReviews();\n// // // // // // // //   }, []);\n\n// // // // // // // //   // Create a new review\n// // // // // // // //   const handleCreate = async () => {\n// // // // // // // //     try {\n// // // // // // // //       const response = await fetch('http://localhost:5000/api/reviews', {\n// // // // // // // //         method: 'POST',\n// // // // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // // // //         body: JSON.stringify(newReview),\n// // // // // // // //       });\n// // // // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // // // //       const data = await response.json();\n// // // // // // // //       setReviews([...reviews, data]);\n// // // // // // // //       setNewReview({ user: '', comment: '', rating: 1 });\n// // // // // // // //     } catch (error) {\n// // // // // // // //       console.error('Error creating review:', error);\n// // // // // // // //     }\n// // // // // // // //   };\n\n// // // // // // // //   // Update an existing review\n// // // // // // // //   const handleUpdate = async () => {\n// // // // // // // //     if (!editReview) return;\n\n// // // // // // // //     try {\n// // // // // // // //       const response = await fetch(`http://localhost:5000/api/reviews/${editReview._id}`, {\n// // // // // // // //         method: 'PUT',\n// // // // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // // // //         body: JSON.stringify(editReview),\n// // // // // // // //       });\n// // // // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // // // //       const data = await response.json();\n// // // // // // // //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// // // // // // // //       setEditReview(null);\n// // // // // // // //     } catch (error) {\n// // // // // // // //       console.error('Error updating review:', error);\n// // // // // // // //     }\n// // // // // // // //   };\n\n// // // // // // // //   // Delete a review\n// // // // // // // //   const handleDelete = async (id) => {\n// // // // // // // //     try {\n// // // // // // // //       const response = await fetch(`http://localhost:5000/api/reviews/${id}`, { method: 'DELETE' });\n// // // // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // // // //       setReviews(reviews.filter(review => review._id !== id));\n// // // // // // // //     } catch (error) {\n// // // // // // // //       console.error('Error deleting review:', error);\n// // // // // // // //     }\n// // // // // // // //   };\n\n// // // // // // // //   return (\n// // // // // // // //     <footer className=\"bg-dark text-light py-3\">\n// // // // // // // //       <div className=\"container\">\n// // // // // // // //         <h4>User Reviews</h4>\n// // // // // // // //         <ul className=\"list-unstyled\">\n// // // // // // // //           {reviews.map(review => (\n// // // // // // // //             <li key={review._id} className=\"mb-2\">\n// // // // // // // //               <div>\n// // // // // // // //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// // // // // // // //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// // // // // // // //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// // // // // // // //               </div>\n// // // // // // // //             </li>\n// // // // // // // //           ))}\n// // // // // // // //         </ul>\n// // // // // // // //         {editReview ? (\n// // // // // // // //           <div>\n// // // // // // // //             <h5>Edit Review</h5>\n// // // // // // // //             <input\n// // // // // // // //               type=\"text\"\n// // // // // // // //               value={editReview.user}\n// // // // // // // //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// // // // // // // //               placeholder=\"User\"\n// // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // //             />\n// // // // // // // //             <input\n// // // // // // // //               type=\"text\"\n// // // // // // // //               value={editReview.comment}\n// // // // // // // //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// // // // // // // //               placeholder=\"Comment\"\n// // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // //             />\n// // // // // // // //             <input\n// // // // // // // //               type=\"number\"\n// // // // // // // //               min=\"1\"\n// // // // // // // //               max=\"5\"\n// // // // // // // //               value={editReview.rating}\n// // // // // // // //               onChange={(e) => setEditReview({ ...editReview, rating: Number(e.target.value) })}\n// // // // // // // //               placeholder=\"Rating\"\n// // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // //             />\n// // // // // // // //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// // // // // // // //           </div>\n// // // // // // // //         ) : (\n// // // // // // // //           <div>\n// // // // // // // //             <h5>Add Review</h5>\n// // // // // // // //             <input\n// // // // // // // //               type=\"text\"\n// // // // // // // //               value={newReview.user}\n// // // // // // // //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// // // // // // // //               placeholder=\"User\"\n// // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // //             />\n// // // // // // // //             <input\n// // // // // // // //               type=\"text\"\n// // // // // // // //               value={newReview.comment}\n// // // // // // // //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// // // // // // // //               placeholder=\"Comment\"\n// // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // //             />\n// // // // // // // //             <input\n// // // // // // // //               type=\"number\"\n// // // // // // // //               min=\"1\"\n// // // // // // // //               max=\"5\"\n// // // // // // // //               value={newReview.rating}\n// // // // // // // //               onChange={(e) => setNewReview({ ...newReview, rating: Number(e.target.value) })}\n// // // // // // // //               placeholder=\"Rating\"\n// // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // //             />\n// // // // // // // //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// // // // // // // //           </div>\n// // // // // // // //         )}\n// // // // // // // //       </div>\n// // // // // // // //     </footer>\n// // // // // // // //   );\n// // // // // // // // }\n\n// // // // // // // // export default Footer;\n\n// // // // // // // import React, { useEffect, useState } from 'react';\n\n// // // // // // // function Footer() {\n// // // // // // //   const [reviews, setReviews] = useState([]);\n// // // // // // //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// // // // // // //   const [editReview, setEditReview] = useState(null);\n\n// // // // // // //   // Fetch reviews from the backend\n// // // // // // //   const fetchReviews = async () => {\n// // // // // // //     try {\n// // // // // // //       const response = await fetch('http://localhost:5000/api/reviews');\n// // // // // // //       const data = await response.json();\n// // // // // // //       setReviews(data);\n// // // // // // //     } catch (error) {\n// // // // // // //       console.error('Error fetching reviews:', error);\n// // // // // // //     }\n// // // // // // //   };\n\n// // // // // // //   useEffect(() => {\n// // // // // // //     fetchReviews();\n// // // // // // //   }, []);\n\n// // // // // // //   // Create a new review\n// // // // // // //   const handleCreate = async () => {\n// // // // // // //     try {\n// // // // // // //       const response = await fetch('http://localhost:5000/api/reviews', {\n// // // // // // //         method: 'POST',\n// // // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // // //         body: JSON.stringify(newReview),\n// // // // // // //       });\n// // // // // // //       const data = await response.json();\n// // // // // // //       setReviews([...reviews, data]);\n// // // // // // //       setNewReview({ user: '', comment: '', rating: 1 });\n// // // // // // //     } catch (error) {\n// // // // // // //       console.error('Error creating review:', error);\n// // // // // // //     }\n// // // // // // //   };\n\n// // // // // // //   // Update an existing review\n// // // // // // //   const handleUpdate = async () => {\n// // // // // // //     if (!editReview) return;\n\n// // // // // // //     try {\n// // // // // // //       const response = await fetch(`http://localhost:5000/api/reviews/${editReview._id}`, {\n// // // // // // //         method: 'PUT',\n// // // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // // //         body: JSON.stringify(editReview),\n// // // // // // //       });\n// // // // // // //       const data = await response.json();\n// // // // // // //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// // // // // // //       setEditReview(null);\n// // // // // // //     } catch (error) {\n// // // // // // //       console.error('Error updating review:', error);\n// // // // // // //     }\n// // // // // // //   };\n\n// // // // // // //   // Delete a review\n// // // // // // //   const handleDelete = async (id) => {\n// // // // // // //     try {\n// // // // // // //       await fetch(`http://localhost:5000/api/reviews/${id}`, { method: 'DELETE' });\n// // // // // // //       setReviews(reviews.filter(review => review._id !== id));\n// // // // // // //     } catch (error) {\n// // // // // // //       console.error('Error deleting review:', error);\n// // // // // // //     }\n// // // // // // //   };\n\n// // // // // // //   return (\n// // // // // // //     <footer className=\"bg-dark text-light py-3\">\n// // // // // // //       <div className=\"container\">\n// // // // // // //         <h4>User Reviews</h4>\n// // // // // // //         <ul className=\"list-unstyled\">\n// // // // // // //           {reviews.map(review => (\n// // // // // // //             <li key={review._id}>\n// // // // // // //               <div>\n// // // // // // //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// // // // // // //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// // // // // // //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// // // // // // //               </div>\n// // // // // // //             </li>\n// // // // // // //           ))}\n// // // // // // //         </ul>\n// // // // // // //         {editReview ? (\n// // // // // // //           <div>\n// // // // // // //             <h5>Edit Review</h5>\n// // // // // // //             <input\n// // // // // // //               type=\"text\"\n// // // // // // //               value={editReview.user}\n// // // // // // //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// // // // // // //               placeholder=\"User\"\n// // // // // // //             />\n// // // // // // //             <input\n// // // // // // //               type=\"text\"\n// // // // // // //               value={editReview.comment}\n// // // // // // //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// // // // // // //               placeholder=\"Comment\"\n// // // // // // //             />\n// // // // // // //             <input\n// // // // // // //               type=\"number\"\n// // // // // // //               min=\"1\"\n// // // // // // //               max=\"5\"\n// // // // // // //               value={editReview.rating}\n// // // // // // //               onChange={(e) => setEditReview({ ...editReview, rating: e.target.value })}\n// // // // // // //               placeholder=\"Rating\"\n// // // // // // //             />\n// // // // // // //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// // // // // // //           </div>\n// // // // // // //         ) : (\n// // // // // // //           <div>\n// // // // // // //             <h5>Add Review</h5>\n// // // // // // //             <input\n// // // // // // //               type=\"text\"\n// // // // // // //               value={newReview.user}\n// // // // // // //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// // // // // // //               placeholder=\"User\"\n// // // // // // //             />\n// // // // // // //             <input\n// // // // // // //               type=\"text\"\n// // // // // // //               value={newReview.comment}\n// // // // // // //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// // // // // // //               placeholder=\"Comment\"\n// // // // // // //             />\n// // // // // // //             <input\n// // // // // // //               type=\"number\"\n// // // // // // //               min=\"1\"\n// // // // // // //               max=\"5\"\n// // // // // // //               value={newReview.rating}\n// // // // // // //               onChange={(e) => setNewReview({ ...newReview, rating: e.target.value })}\n// // // // // // //               placeholder=\"Rating\"\n// // // // // // //             />\n// // // // // // //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// // // // // // //           </div>\n// // // // // // //         )}\n// // // // // // //       </div>\n// // // // // // //     </footer>\n// // // // // // //   );\n// // // // // // // }\n\n// // // // // // // export default Footer;\n\n// // // // // // import React, { useEffect, useState } from 'react';\n\n// // // // // // function Footer() {\n// // // // // //   const [reviews, setReviews] = useState([]);\n// // // // // //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// // // // // //   const [editReview, setEditReview] = useState(null);\n\n// // // // // //   // Fetch reviews from the backend\n// // // // // //   const fetchReviews = async () => {\n// // // // // //     try {\n// // // // // //       const response = await fetch('http://localhost:5000/api/reviews');\n// // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // //       const data = await response.json();\n// // // // // //       setReviews(data);\n// // // // // //     } catch (error) {\n// // // // // //       console.error('Error fetching reviews:', error);\n// // // // // //     }\n// // // // // //   };\n\n// // // // // //   useEffect(() => {\n// // // // // //     fetchReviews();\n// // // // // //   }, []);\n\n// // // // // //   // Create a new review\n// // // // // //   const handleCreate = async () => {\n// // // // // //     try {\n// // // // // //       const response = await fetch('http://localhost:5000/api/reviews', {\n// // // // // //         method: 'POST',\n// // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // //         body: JSON.stringify(newReview),\n// // // // // //       });\n// // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // //       const data = await response.json();\n// // // // // //       setReviews([...reviews, data]);\n// // // // // //       setNewReview({ user: '', comment: '', rating: 1 });\n// // // // // //     } catch (error) {\n// // // // // //       console.error('Error creating review:', error);\n// // // // // //     }\n// // // // // //   };\n\n// // // // // //   // Update an existing review\n// // // // // //   const handleUpdate = async () => {\n// // // // // //     if (!editReview) return;\n\n// // // // // //     try {\n// // // // // //       const response = await fetch(`http://localhost:5000/api/reviews/${editReview._id}`, {\n// // // // // //         method: 'PUT',\n// // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // //         body: JSON.stringify(editReview),\n// // // // // //       });\n// // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // //       const data = await response.json();\n// // // // // //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// // // // // //       setEditReview(null);\n// // // // // //     } catch (error) {\n// // // // // //       console.error('Error updating review:', error);\n// // // // // //     }\n// // // // // //   };\n\n// // // // // //   // Delete a review\n// // // // // //   const handleDelete = async (id) => {\n// // // // // //     try {\n// // // // // //       const response = await fetch(`http://localhost:5000/api/reviews/${id}`, { method: 'DELETE' });\n// // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // //       setReviews(reviews.filter(review => review._id !== id));\n// // // // // //     } catch (error) {\n// // // // // //       console.error('Error deleting review:', error);\n// // // // // //     }\n// // // // // //   };\n\n// // // // // //   return (\n// // // // // //     <footer className=\"bg-dark text-light py-3\">\n// // // // // //       <div className=\"container\">\n// // // // // //         <h4>User Reviews</h4>\n// // // // // //         <ul className=\"list-unstyled\">\n// // // // // //           {reviews.map(review => (\n// // // // // //             <li key={review._id} className=\"mb-2\">\n// // // // // //               <div>\n// // // // // //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// // // // // //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// // // // // //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// // // // // //               </div>\n// // // // // //             </li>\n// // // // // //           ))}\n// // // // // //         </ul>\n// // // // // //         {editReview ? (\n// // // // // //           <div>\n// // // // // //             <h5>Edit Review</h5>\n// // // // // //             <input\n// // // // // //               type=\"text\"\n// // // // // //               value={editReview.user}\n// // // // // //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// // // // // //               placeholder=\"User\"\n// // // // // //               className=\"form-control mb-2\"\n// // // // // //             />\n// // // // // //             <input\n// // // // // //               type=\"text\"\n// // // // // //               value={editReview.comment}\n// // // // // //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// // // // // //               placeholder=\"Comment\"\n// // // // // //               className=\"form-control mb-2\"\n// // // // // //             />\n// // // // // //             <input\n// // // // // //               type=\"number\"\n// // // // // //               min=\"1\"\n// // // // // //               max=\"5\"\n// // // // // //               value={editReview.rating}\n// // // // // //               onChange={(e) => setEditReview({ ...editReview, rating: Number(e.target.value) })}\n// // // // // //               placeholder=\"Rating\"\n// // // // // //               className=\"form-control mb-2\"\n// // // // // //             />\n// // // // // //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// // // // // //           </div>\n// // // // // //         ) : (\n// // // // // //           <div>\n// // // // // //             <h5>Add Review</h5>\n// // // // // //             <input\n// // // // // //               type=\"text\"\n// // // // // //               value={newReview.user}\n// // // // // //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// // // // // //               placeholder=\"User\"\n// // // // // //               className=\"form-control mb-2\"\n// // // // // //             />\n// // // // // //             <input\n// // // // // //               type=\"text\"\n// // // // // //               value={newReview.comment}\n// // // // // //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// // // // // //               placeholder=\"Comment\"\n// // // // // //               className=\"form-control mb-2\"\n// // // // // //             />\n// // // // // //             <input\n// // // // // //               type=\"number\"\n// // // // // //               min=\"1\"\n// // // // // //               max=\"5\"\n// // // // // //               value={newReview.rating}\n// // // // // //               onChange={(e) => setNewReview({ ...newReview, rating: Number(e.target.value) })}\n// // // // // //               placeholder=\"Rating\"\n// // // // // //               className=\"form-control mb-2\"\n// // // // // //             />\n// // // // // //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// // // // // //           </div>\n// // // // // //         )}\n// // // // // //       </div>\n// // // // // //     </footer>\n// // // // // //   );\n// // // // // // }\n\n// // // // // // export default Footer;\n\n// // // // // import React, { useEffect, useState } from 'react';\n\n// // // // // function Footer() {\n// // // // //   const [reviews, setReviews] = useState([]);\n// // // // //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// // // // //   const [editReview, setEditReview] = useState(null);\n\n// // // // //   // Fetch reviews from the backend\n// // // // //   const fetchReviews = async () => {\n// // // // //     try {\n// // // // //       const response = await fetch('http://localhost:5000/api');\n// // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // //       const data = await response.json();\n// // // // //       setReviews(data);\n// // // // //     } catch (error) {\n// // // // //       console.error('Error fetching reviews:', error);\n// // // // //     }\n// // // // //   };\n\n// // // // //   useEffect(() => {\n// // // // //     fetchReviews();\n// // // // //   }, []);\n\n// // // // //   // Create a new review\n// // // // //   const handleCreate = async () => {\n// // // // //     if (!newReview.user || !newReview.comment || newReview.rating < 1 || newReview.rating > 5) {\n// // // // //       alert('Please fill out all fields correctly.');\n// // // // //       return;\n// // // // //     }\n// // // // //     try {\n// // // // //       const response = await fetch('http://localhost:5000/api', {\n// // // // //         method: 'POST',\n// // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // //         body: JSON.stringify(newReview),\n// // // // //       });\n// // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // //       const data = await response.json();\n// // // // //       setReviews([...reviews, data]);\n// // // // //       setNewReview({ user: '', comment: '', rating: 1 });\n// // // // //     } catch (error) {\n// // // // //       console.error('Error creating review:', error);\n// // // // //     }\n// // // // //   };\n\n// // // // //   // Update an existing review\n// // // // //   const handleUpdate = async () => {\n// // // // //     if (!editReview || !editReview.user || !editReview.comment || editReview.rating < 1 || editReview.rating > 5) {\n// // // // //       alert('Please fill out all fields correctly.');\n// // // // //       return;\n// // // // //     }\n// // // // //     try {\n// // // // //       const response = await fetch(`http://localhost:5000/api/${editReview._id}`, {\n// // // // //         method: 'PUT',\n// // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // //         body: JSON.stringify(editReview),\n// // // // //       });\n// // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // //       const data = await response.json();\n// // // // //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// // // // //       setEditReview(null);\n// // // // //     } catch (error) {\n// // // // //       console.error('Error updating review:', error);\n// // // // //     }\n// // // // //   };\n\n// // // // //   // Delete a review\n// // // // //   const handleDelete = async (id) => {\n// // // // //     try {\n// // // // //       const response = await fetch(`http://localhost:5000/api/${id}`, { method: 'DELETE' });\n// // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // //       setReviews(reviews.filter(review => review._id !== id));\n// // // // //     } catch (error) {\n// // // // //       console.error('Error deleting review:', error);\n// // // // //     }\n// // // // //   };\n\n// // // // //   return (\n// // // // //     <footer className=\"bg-dark text-light py-3\">\n// // // // //       <div className=\"container\">\n// // // // //         <h4>User Reviews</h4>\n// // // // //         <ul className=\"list-unstyled\">\n// // // // //           {reviews.map(review => (\n// // // // //             <li key={review._id} className=\"mb-2\">\n// // // // //               <div>\n// // // // //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// // // // //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// // // // //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// // // // //               </div>\n// // // // //             </li>\n// // // // //           ))}\n// // // // //         </ul>\n// // // // //         {editReview ? (\n// // // // //           <div>\n// // // // //             <h5>Edit Review</h5>\n// // // // //             <input\n// // // // //               type=\"text\"\n// // // // //               value={editReview.user}\n// // // // //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// // // // //               placeholder=\"User\"\n// // // // //               className=\"form-control mb-2\"\n// // // // //             />\n// // // // //             <input\n// // // // //               type=\"text\"\n// // // // //               value={editReview.comment}\n// // // // //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// // // // //               placeholder=\"Comment\"\n// // // // //               className=\"form-control mb-2\"\n// // // // //             />\n// // // // //             <input\n// // // // //               type=\"number\"\n// // // // //               min=\"1\"\n// // // // //               max=\"5\"\n// // // // //               value={editReview.rating}\n// // // // //               onChange={(e) => setEditReview({ ...editReview, rating: Number(e.target.value) })}\n// // // // //               placeholder=\"Rating\"\n// // // // //               className=\"form-control mb-2\"\n// // // // //             />\n// // // // //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// // // // //           </div>\n// // // // //         ) : (\n// // // // //           <div>\n// // // // //             <h5>Add Review</h5>\n// // // // //             <input\n// // // // //               type=\"text\"\n// // // // //               value={newReview.user}\n// // // // //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// // // // //               placeholder=\"User\"\n// // // // //               className=\"form-control mb-2\"\n// // // // //             />\n// // // // //             <input\n// // // // //               type=\"text\"\n// // // // //               value={newReview.comment}\n// // // // //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// // // // //               placeholder=\"Comment\"\n// // // // //               className=\"form-control mb-2\"\n// // // // //             />\n// // // // //             <input\n// // // // //               type=\"number\"\n// // // // //               min=\"1\"\n// // // // //               max=\"5\"\n// // // // //               value={newReview.rating}\n// // // // //               onChange={(e) => setNewReview({ ...newReview, rating: Number(e.target.value) })}\n// // // // //               placeholder=\"Rating\"\n// // // // //               className=\"form-control mb-2\"\n// // // // //             />\n// // // // //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// // // // //           </div>\n// // // // //         )}\n// // // // //       </div>\n// // // // //     </footer>\n// // // // //   );\n// // // // // }\n\n// // // // // export default Footer;\n\n// // // // import React, { useEffect, useState } from 'react';\n\n// // // // function Footer() {\n// // // //   const [reviews, setReviews] = useState([]);\n// // // //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// // // //   const [editReview, setEditReview] = useState(null);\n\n// // // //   // Fetch reviews from the backend\n// // // //   const fetchReviews = async () => {\n// // // //     try {\n// // // //       const response = await fetch('http://localhost:5000/api');\n// // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // //       const data = await response.json();\n// // // //       console.log('Fetched reviews:', data); // Debugging\n// // // //       setReviews(data);\n// // // //     } catch (error) {\n// // // //       console.error('Error fetching reviews:', error);\n// // // //     }\n// // // //   };\n\n// // // //   useEffect(() => {\n// // // //     fetchReviews();\n// // // //   }, []);\n\n// // // //   // Create a new review\n// // // //   const handleCreate = async () => {\n// // // //     if (!newReview.user || !newReview.comment || newReview.rating < 1 || newReview.rating > 5) {\n// // // //       alert('Please fill out all fields correctly.');\n// // // //       return;\n// // // //     }\n// // // //     try {\n// // // //       const response = await fetch('http://localhost:5000/api', {\n// // // //         method: 'POST',\n// // // //         headers: { 'Content-Type': 'application/json' },\n// // // //         body: JSON.stringify(newReview),\n// // // //       });\n// // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // //       const data = await response.json();\n// // // //       console.log('Review added:', data); // Debugging\n// // // //       setReviews([...reviews, data]);\n// // // //       setNewReview({ user: '', comment: '', rating: 1 });\n// // // //     } catch (error) {\n// // // //       console.error('Error creating review:', error);\n// // // //     }\n// // // //   };\n\n// // // //   // Update an existing review\n// // // //   const handleUpdate = async () => {\n// // // //     if (!editReview || !editReview.user || !editReview.comment || editReview.rating < 1 || editReview.rating > 5) {\n// // // //       alert('Please fill out all fields correctly.');\n// // // //       return;\n// // // //     }\n// // // //     try {\n// // // //       const response = await fetch(`http://localhost:5000/api/${editReview._id}`, {\n// // // //         method: 'PUT',\n// // // //         headers: { 'Content-Type': 'application/json' },\n// // // //         body: JSON.stringify(editReview),\n// // // //       });\n// // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // //       const data = await response.json();\n// // // //       console.log('Review updated:', data); // Debugging\n// // // //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// // // //       setEditReview(null);\n// // // //     } catch (error) {\n// // // //       console.error('Error updating review:', error);\n// // // //     }\n// // // //   };\n\n// // // //   // Delete a review\n// // // //   const handleDelete = async (id) => {\n// // // //     try {\n// // // //       const response = await fetch(`http://localhost:5000/api/${id}`, { method: 'DELETE' });\n// // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // //       console.log('Review deleted:', id); // Debugging\n// // // //       setReviews(reviews.filter(review => review._id !== id));\n// // // //     } catch (error) {\n// // // //       console.error('Error deleting review:', error);\n// // // //     }\n// // // //   };\n\n// // // //   return (\n// // // //     <footer className=\"bg-dark text-light py-3\">\n// // // //       <div className=\"container\">\n// // // //         <h4>User Reviews</h4>\n// // // //         <ul className=\"list-unstyled\">\n// // // //           {reviews.map(review => (\n// // // //             <li key={review._id} className=\"mb-2\">\n// // // //               <div>\n// // // //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// // // //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// // // //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// // // //               </div>\n// // // //             </li>\n// // // //           ))}\n// // // //         </ul>\n// // // //         {editReview ? (\n// // // //           <div>\n// // // //             <h5>Edit Review</h5>\n// // // //             <input\n// // // //               type=\"text\"\n// // // //               value={editReview.user}\n// // // //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// // // //               placeholder=\"User\"\n// // // //               className=\"form-control mb-2\"\n// // // //             />\n// // // //             <input\n// // // //               type=\"text\"\n// // // //               value={editReview.comment}\n// // // //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// // // //               placeholder=\"Comment\"\n// // // //               className=\"form-control mb-2\"\n// // // //             />\n// // // //             <input\n// // // //               type=\"number\"\n// // // //               min=\"1\"\n// // // //               max=\"5\"\n// // // //               value={editReview.rating}\n// // // //               onChange={(e) => setEditReview({ ...editReview, rating: Number(e.target.value) })}\n// // // //               placeholder=\"Rating\"\n// // // //               className=\"form-control mb-2\"\n// // // //             />\n// // // //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// // // //           </div>\n// // // //         ) : (\n// // // //           <div>\n// // // //             <h5>Add Review</h5>\n// // // //             <input\n// // // //               type=\"text\"\n// // // //               value={newReview.user}\n// // // //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// // // //               placeholder=\"User\"\n// // // //               className=\"form-control mb-2\"\n// // // //             />\n// // // //             <input\n// // // //               type=\"text\"\n// // // //               value={newReview.comment}\n// // // //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// // // //               placeholder=\"Comment\"\n// // // //               className=\"form-control mb-2\"\n// // // //             />\n// // // //             <input\n// // // //               type=\"number\"\n// // // //               min=\"1\"\n// // // //               max=\"5\"\n// // // //               value={newReview.rating}\n// // // //               onChange={(e) => setNewReview({ ...newReview, rating: Number(e.target.value) })}\n// // // //               placeholder=\"Rating\"\n// // // //               className=\"form-control mb-2\"\n// // // //             />\n// // // //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// // // //           </div>\n// // // //         )}\n// // // //       </div>\n// // // //     </footer>\n// // // //   );\n// // // // }\n\n// // // // export default Footer;\n\n// // // import React, { useEffect, useState } from 'react';\n\n// // // function Footer() {\n// // //   const [reviews, setReviews] = useState([]);\n// // //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// // //   const [editReview, setEditReview] = useState(null);\n\n// // //   // Fetch reviews from the backend\n// // //   const fetchReviews = async () => {\n// // //     try {\n// // //       const response = await fetch('http://localhost:5000/api');\n// // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // //       const data = await response.json();\n// // //       setReviews(data);\n// // //     } catch (error) {\n// // //       console.error('Error fetching reviews:', error);\n// // //     }\n// // //   };\n\n// // //   useEffect(() => {\n// // //     fetchReviews();\n// // //   }, []);\n\n// // //   // Create a new review\n// // //   const handleCreate = async () => {\n// // //     if (!newReview.user || !newReview.comment || newReview.rating < 1 || newReview.rating > 5) {\n// // //       alert('Please fill out all fields correctly.');\n// // //       return;\n// // //     }\n// // //     try {\n// // //       const response = await fetch('http://localhost:5000/api', {\n// // //         method: 'POST',\n// // //         headers: { 'Content-Type': 'application/json' },\n// // //         body: JSON.stringify(newReview),\n// // //       });\n// // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // //       const data = await response.json();\n// // //       setReviews([...reviews, data]);\n// // //       setNewReview({ user: '', comment: '', rating: 1 });\n// // //     } catch (error) {\n// // //       console.error('Error creating review:', error);\n// // //     }\n// // //   };\n\n// // //   // Update an existing review\n// // //   const handleUpdate = async () => {\n// // //     if (!editReview || !editReview.user || !editReview.comment || editReview.rating < 1 || editReview.rating > 5) {\n// // //       alert('Please fill out all fields correctly.');\n// // //       return;\n// // //     }\n// // //     try {\n// // //       const response = await fetch(`http://localhost:5000/api/${editReview._id}`, {\n// // //         method: 'PUT',\n// // //         headers: { 'Content-Type': 'application/json' },\n// // //         body: JSON.stringify(editReview),\n// // //       });\n// // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // //       const data = await response.json();\n// // //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// // //       setEditReview(null);\n// // //     } catch (error) {\n// // //       console.error('Error updating review:', error);\n// // //     }\n// // //   };\n\n// // //   // Delete a review\n// // //   const handleDelete = async (id) => {\n// // //     try {\n// // //       const response = await fetch(`http://localhost:5000/api/${id}`, { method: 'DELETE' });\n// // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // //       setReviews(reviews.filter(review => review._id !== id));\n// // //     } catch (error) {\n// // //       console.error('Error deleting review:', error);\n// // //     }\n// // //   };\n\n// // //   return (\n// // //     <footer className=\"bg-dark text-light py-3\">\n// // //       <div className=\"container\">\n// // //         <h4>User Reviews</h4>\n// // //         <ul className=\"list-unstyled\">\n// // //           {reviews.map(review => (\n// // //             <li key={review._id} className=\"mb-2\">\n// // //               <div>\n// // //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// // //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// // //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// // //               </div>\n// // //             </li>\n// // //           ))}\n// // //         </ul>\n// // //         {editReview ? (\n// // //           <div>\n// // //             <h5>Edit Review</h5>\n// // //             <input\n// // //               type=\"text\"\n// // //               value={editReview.user}\n// // //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// // //               placeholder=\"User\"\n// // //               className=\"form-control mb-2\"\n// // //             />\n// // //             <input\n// // //               type=\"text\"\n// // //               value={editReview.comment}\n// // //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// // //               placeholder=\"Comment\"\n// // //               className=\"form-control mb-2\"\n// // //             />\n// // //             <input\n// // //               type=\"number\"\n// // //               min=\"1\"\n// // //               max=\"5\"\n// // //               value={editReview.rating}\n// // //               onChange={(e) => setEditReview({ ...editReview, rating: Number(e.target.value) })}\n// // //               placeholder=\"Rating\"\n// // //               className=\"form-control mb-2\"\n// // //             />\n// // //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// // //           </div>\n// // //         ) : (\n// // //           <div>\n// // //             <h5>Add Review</h5>\n// // //             <input\n// // //               type=\"text\"\n// // //               value={newReview.user}\n// // //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// // //               placeholder=\"User\"\n// // //               className=\"form-control mb-2\"\n// // //             />\n// // //             <input\n// // //               type=\"text\"\n// // //               value={newReview.comment}\n// // //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// // //               placeholder=\"Comment\"\n// // //               className=\"form-control mb-2\"\n// // //             />\n// // //             <input\n// // //               type=\"number\"\n// // //               min=\"1\"\n// // //               max=\"5\"\n// // //               value={newReview.rating}\n// // //               onChange={(e) => setNewReview({ ...newReview, rating: Number(e.target.value) })}\n// // //               placeholder=\"Rating\"\n// // //               className=\"form-control mb-2\"\n// // //             />\n// // //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// // //           </div>\n// // //         )}\n// // //       </div>\n// // //     </footer>\n// // //   );\n// // // }\n\n// // // export default Footer;\n// // import React, { useEffect, useState } from 'react';\n\n// // function Footer() {\n// //   const [reviews, setReviews] = useState([]);\n// //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// //   const [editReview, setEditReview] = useState(null);\n\n// //   // Fetch reviews from the backend\n// //   const fetchReviews = async () => {\n// //     try {\n// //       const response = await fetch('http://localhost:5000/api/reviews');\n// //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// //       const data = await response.json();\n// //       setReviews(data);\n// //     } catch (error) {\n// //       console.error('Error fetching reviews:', error);\n// //     }\n// //   };\n\n// //   useEffect(() => {\n// //     fetchReviews();\n// //   }, []);\n\n// //   // Create a new review\n// //   const handleCreate = async () => {\n// //     if (!newReview.user || !newReview.comment || newReview.rating < 1 || newReview.rating > 5) {\n// //       alert('Please fill out all fields correctly.');\n// //       return;\n// //     }\n// //     try {\n// //       const response = await fetch('http://localhost:5000/api/reviews', {\n// //         method: 'POST',\n// //         headers: { 'Content-Type': 'application/json' },\n// //         body: JSON.stringify(newReview),\n// //       });\n// //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// //       const data = await response.json();\n// //       setReviews([...reviews, data]);\n// //       setNewReview({ user: '', comment: '', rating: 1 });\n// //     } catch (error) {\n// //       console.error('Error creating review:', error);\n// //     }\n// //   };\n\n// //   // Update an existing review\n// //   const handleUpdate = async () => {\n// //     if (!editReview || !editReview.user || !editReview.comment || editReview.rating < 1 || editReview.rating > 5) {\n// //       alert('Please fill out all fields correctly.');\n// //       return;\n// //     }\n// //     try {\n// //       const response = await fetch(`http://localhost:5000/api/reviews/${editReview._id}`, {\n// //         method: 'PUT',\n// //         headers: { 'Content-Type': 'application/json' },\n// //         body: JSON.stringify(editReview),\n// //       });\n// //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// //       const data = await response.json();\n// //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// //       setEditReview(null);\n// //     } catch (error) {\n// //       console.error('Error updating review:', error);\n// //     }\n// //   };\n\n// //   // Delete a review\n// //   const handleDelete = async (id) => {\n// //     try {\n// //       const response = await fetch(`http://localhost:5000/api/reviews/${id}`, { method: 'DELETE' });\n// //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// //       setReviews(reviews.filter(review => review._id !== id));\n// //     } catch (error) {\n// //       console.error('Error deleting review:', error);\n// //     }\n// //   };\n\n// //   return (\n// //     <footer className=\"bg-dark text-light py-3\">\n// //       <div className=\"container\">\n// //         <h4>User Reviews</h4>\n// //         <ul className=\"list-unstyled\">\n// //           {reviews.map(review => (\n// //             <li key={review._id} className=\"mb-2\">\n// //               <div>\n// //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// //               </div>\n// //             </li>\n// //           ))}\n// //         </ul>\n// //         {editReview ? (\n// //           <div>\n// //             <h5>Edit Review</h5>\n// //             <input\n// //               type=\"text\"\n// //               value={editReview.user}\n// //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// //               placeholder=\"User\"\n// //               className=\"form-control mb-2\"\n// //             />\n// //             <input\n// //               type=\"text\"\n// //               value={editReview.comment}\n// //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// //               placeholder=\"Comment\"\n// //               className=\"form-control mb-2\"\n// //             />\n// //             <input\n// //               type=\"number\"\n// //               min=\"1\"\n// //               max=\"5\"\n// //               value={editReview.rating}\n// //               onChange={(e) => setEditReview({ ...editReview, rating: Number(e.target.value) })}\n// //               placeholder=\"Rating\"\n// //               className=\"form-control mb-2\"\n// //             />\n// //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// //             <button onClick={() => setEditReview(null)} className=\"btn btn-secondary ms-2\">Cancel</button>\n// //           </div>\n// //         ) : (\n// //           <div>\n// //             <h5>Add Review</h5>\n// //             <input\n// //               type=\"text\"\n// //               value={newReview.user}\n// //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// //               placeholder=\"User\"\n// //               className=\"form-control mb-2\"\n// //             />\n// //             <input\n// //               type=\"text\"\n// //               value={newReview.comment}\n// //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// //               placeholder=\"Comment\"\n// //               className=\"form-control mb-2\"\n// //             />\n// //             <input\n// //               type=\"number\"\n// //               min=\"1\"\n// //               max=\"5\"\n// //               value={newReview.rating}\n// //               onChange={(e) => setNewReview({ ...newReview, rating: Number(e.target.value) })}\n// //               placeholder=\"Rating\"\n// //               className=\"form-control mb-2\"\n// //             />\n// //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// //           </div>\n// //         )}\n// //       </div>\n// //     </footer>\n// //   );\n// // }\n\n// // export default Footer;\n\n// import React, { useEffect, useState } from 'react';\n\n// function Footer() {\n//   const [reviews, setReviews] = useState([]);\n//   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n//   const [editReview, setEditReview] = useState(null);\n\n//   // Fetch reviews from the backend\n//   const fetchReviews = async () => {\n//     try {\n//       const response = await fetch('http://localhost:5000/api/reviews');\n//       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n//       const data = await response.json();\n//       setReviews(data);\n//     } catch (error) {\n//       console.error('Error fetching reviews:', error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchReviews();\n//   }, []);\n\n//   // Create a new review\n//   const handleCreate = async () => {\n//     if (!newReview.user || !newReview.comment || newReview.rating < 1 || newReview.rating > 5) {\n//       alert('Please fill out all fields correctly.');\n//       return;\n//     }\n//     try {\n//       const response = await fetch('http://localhost:5000/api/reviews', {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify(newReview),\n//       });\n//       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n//       const data = await response.json();\n//       setReviews([...reviews, data]);\n//       setNewReview({ user: '', comment: '', rating: 1 });\n//     } catch (error) {\n//       console.error('Error creating review:', error);\n//     }\n//   };\n\n//   // Update an existing review\n//   const handleUpdate = async () => {\n//     if (!editReview || !editReview.user || !editReview.comment || editReview.rating < 1 || editReview.rating > 5) {\n//       alert('Please fill out all fields correctly.');\n//       return;\n//     }\n//     try {\n//       const response = await fetch(`http://localhost:5000/api/reviews/${editReview._id}`, {\n//         method: 'PUT',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify(editReview),\n//       });\n//       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n//       const data = await response.json();\n//       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n//       setEditReview(null);\n//     } catch (error) {\n//       console.error('Error updating review:', error);\n//     }\n//   };\n\n//   // Delete a review\n//   const handleDelete = async (id) => {\n//     try {\n//       const response = await fetch(`http://localhost:5000/api/reviews/${id}`, { method: 'DELETE' });\n//       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n//       setReviews(reviews.filter(review => review._id !== id));\n//     } catch (error) {\n//       console.error('Error deleting review:', error);\n//     }\n//   };\n\n//   return (\n//     <footer className=\"bg-dark text-light py-3\">\n//       <div className=\"container\">\n//         <h4>User Reviews</h4>\n//         <ul className=\"list-unstyled\">\n//           {reviews.map(review => (\n//             <li key={review._id} className=\"mb-2\">\n//               <div>\n//                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n//                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n//                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n//               </div>\n//             </li>\n//           ))}\n//         </ul>\n//         {editReview ? (\n//           <div>\n//             <h5>Edit Review</h5>\n//             <input\n//               type=\"text\"\n//               value={editReview.user}\n//               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n//               placeholder=\"User\"\n//               className=\"form-control mb-2\"\n//             />\n//             <input\n//               type=\"text\"\n//               value={editReview.comment}\n//               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n//               placeholder=\"Comment\"\n//               className=\"form-control mb-2\"\n//             />\n//             <input\n//               type=\"number\"\n//               min=\"1\"\n//               max=\"5\"\n//               value={editReview.rating}\n//               onChange={(e) => setEditReview({ ...editReview, rating: Number(e.target.value) })}\n//               placeholder=\"Rating\"\n//               className=\"form-control mb-2\"\n//             />\n//             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n//             <button onClick={() => setEditReview(null)} className=\"btn btn-secondary ms-2\">Cancel</button>\n//           </div>\n//         ) : (\n//           <div>\n//             <h5>Add Review</h5>\n//             <input\n//               type=\"text\"\n//               value={newReview.user}\n//               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n//               placeholder=\"User\"\n//               className=\"form-control mb-2\"\n//             />\n//             <input\n//               type=\"text\"\n//               value={newReview.comment}\n//               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n//               placeholder=\"Comment\"\n//               className=\"form-control mb-2\"\n//             />\n//             <input\n//               type=\"number\"\n//               min=\"1\"\n//               max=\"5\"\n//               value={newReview.rating}\n//               onChange={(e) => setNewReview({ ...newReview, rating: Number(e.target.value) })}\n//               placeholder=\"Rating\"\n//               className=\"form-control mb-2\"\n//             />\n//             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n//           </div>\n//         )}\n//       </div>\n//     </footer>\n//   );\n// }\n\n// export default Footer;\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Footer = () => {\n  _s();\n  const [reviews, setReviews] = useState([]);\n  const [newReview, setNewReview] = useState({\n    userId: '',\n    foodItemId: '',\n    rating: '',\n    review: ''\n  });\n  useEffect(() => {\n    fetchReviews();\n  }, []);\n  const fetchReviews = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/reviews');\n      if (!response.ok) throw new Error('Network response was not ok');\n      const data = await response.json();\n      setReviews(data);\n    } catch (error) {\n      console.error('Error fetching reviews:', error);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewReview({\n      ...newReview,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:5000/api/reviews', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newReview)\n      });\n      if (!response.ok) throw new Error('Network response was not ok');\n      await fetchReviews(); // Refresh the list after adding a new review\n      setNewReview({\n        userId: '',\n        foodItemId: '',\n        rating: '',\n        review: ''\n      });\n    } catch (error) {\n      console.error('Error creating review:', error);\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/reviews/${id}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) throw new Error('Network response was not ok');\n      await fetchReviews(); // Refresh the list after deleting a review\n    } catch (error) {\n      console.error('Error deleting review:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Footer Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1317,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"userId\",\n        value: newReview.userId,\n        onChange: handleInputChange,\n        placeholder: \"User ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1319,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"foodItemId\",\n        value: newReview.foodItemId,\n        onChange: handleInputChange,\n        placeholder: \"Food Item ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"rating\",\n        value: newReview.rating,\n        onChange: handleInputChange,\n        placeholder: \"Rating\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"review\",\n        value: newReview.review,\n        onChange: handleInputChange,\n        placeholder: \"Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1340,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1346,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1318,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Reviews\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1350,\n        columnNumber: 9\n      }, this), reviews.map(review => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"User: \", review.userId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1353,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Food Item: \", review.foodItemId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1354,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Rating: \", review.rating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1355,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Review: \", review.review]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1356,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(review._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1357,\n          columnNumber: 13\n        }, this)]\n      }, review._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1352,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1349,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1316,\n    columnNumber: 5\n  }, this);\n};\n_s(Footer, \"iR0jlwxEszMb4YnLARR7NSQ4INA=\");\n_c = Footer;\nexport default Footer;\nvar _c;\n$RefreshReg$(_c, \"Footer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Footer","_s","reviews","setReviews","newReview","setNewReview","userId","foodItemId","rating","review","fetchReviews","response","fetch","ok","Error","data","json","error","console","handleInputChange","e","name","value","target","handleSubmit","preventDefault","method","headers","body","JSON","stringify","handleDelete","id","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","map","onClick","_id","_c","$RefreshReg$"],"sources":["C:/Users/ruhan/Documents/gofood/mernapp/src/components/Footer.js"],"sourcesContent":["// // // // // // // // // import React from 'react'\n// // // // // // // // // import {link} from 'react-router-dom'\n// // // // // // // // // export default function Footer() {\n// // // // // // // // //   return (\n// // // // // // // // //     <div><div className=\"container\">\n// // // // // // // // //     <footer className=\"d-flex flex-wrap justify-content-between align-items-center py-3 my-4 border-top\">\n// // // // // // // // //       <div className=\"col-md-4 d-flex align-items-center\">\n// // // // // // // // //         <link to=\"/\" className=\"mb-3 me-2 mb-md-0 text-muted text-decoration-none lh-1\">\n// // // // // // // // //         </link>\n// // // // // // // // //         <span className=\"text-muted\">Â© 2024<i>GoFood</i>, Inc</span>\n// // // // // // // // //       </div>\n  \n// // // // // // // // //       {/* <ul className=\"nav col-md-4 justify-content-end list-unstyled d-flex\">\n// // // // // // // // //         <li className=\"ms-3\"><a className=\"text-muted\" href=\"/\"><svg className=\"bi\" width=\"24\" height=\"24\"><use ></use></svg></a></li>\n// // // // // // // // //         <li className=\"ms-3\"><a className=\"text-muted\" href=\"/\"><svg className=\"bi\" width=\"24\" height=\"24\"><use ></use></svg></a></li>\n// // // // // // // // //         <li className=\"ms-3\"><a className=\"text-muted\" href=\"/\"><svg className=\"bi\" width=\"24\" height=\"24\"><use></use></svg></a></li>\n// // // // // // // // //       </ul> */}\n// // // // // // // // //     </footer>\n// // // // // // // // //   </div>\n// // // // // // // // //   </div>\n// // // // // // // // //   )\n// // // // // // // // // }\n\n// // // // // // // // import React, { useEffect, useState } from 'react';\n\n// // // // // // // // function Footer() {\n// // // // // // // //   const [reviews, setReviews] = useState([]);\n// // // // // // // //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// // // // // // // //   const [editReview, setEditReview] = useState(null);\n\n// // // // // // // //   // Fetch reviews from the backend\n// // // // // // // //   const fetchReviews = async () => {\n// // // // // // // //     try {\n// // // // // // // //       const response = await fetch('http://localhost:5000/api/reviews');\n// // // // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // // // //       const data = await response.json();\n// // // // // // // //       setReviews(data);\n// // // // // // // //     } catch (error) {\n// // // // // // // //       console.error('Error fetching reviews:', error);\n// // // // // // // //     }\n// // // // // // // //   };\n\n// // // // // // // //   useEffect(() => {\n// // // // // // // //     fetchReviews();\n// // // // // // // //   }, []);\n\n// // // // // // // //   // Create a new review\n// // // // // // // //   const handleCreate = async () => {\n// // // // // // // //     try {\n// // // // // // // //       const response = await fetch('http://localhost:5000/api/reviews', {\n// // // // // // // //         method: 'POST',\n// // // // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // // // //         body: JSON.stringify(newReview),\n// // // // // // // //       });\n// // // // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // // // //       const data = await response.json();\n// // // // // // // //       setReviews([...reviews, data]);\n// // // // // // // //       setNewReview({ user: '', comment: '', rating: 1 });\n// // // // // // // //     } catch (error) {\n// // // // // // // //       console.error('Error creating review:', error);\n// // // // // // // //     }\n// // // // // // // //   };\n\n// // // // // // // //   // Update an existing review\n// // // // // // // //   const handleUpdate = async () => {\n// // // // // // // //     if (!editReview) return;\n\n// // // // // // // //     try {\n// // // // // // // //       const response = await fetch(`http://localhost:5000/api/reviews/${editReview._id}`, {\n// // // // // // // //         method: 'PUT',\n// // // // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // // // //         body: JSON.stringify(editReview),\n// // // // // // // //       });\n// // // // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // // // //       const data = await response.json();\n// // // // // // // //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// // // // // // // //       setEditReview(null);\n// // // // // // // //     } catch (error) {\n// // // // // // // //       console.error('Error updating review:', error);\n// // // // // // // //     }\n// // // // // // // //   };\n\n// // // // // // // //   // Delete a review\n// // // // // // // //   const handleDelete = async (id) => {\n// // // // // // // //     try {\n// // // // // // // //       const response = await fetch(`http://localhost:5000/api/reviews/${id}`, { method: 'DELETE' });\n// // // // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // // // //       setReviews(reviews.filter(review => review._id !== id));\n// // // // // // // //     } catch (error) {\n// // // // // // // //       console.error('Error deleting review:', error);\n// // // // // // // //     }\n// // // // // // // //   };\n\n// // // // // // // //   return (\n// // // // // // // //     <footer className=\"bg-dark text-light py-3\">\n// // // // // // // //       <div className=\"container\">\n// // // // // // // //         <h4>User Reviews</h4>\n// // // // // // // //         <ul className=\"list-unstyled\">\n// // // // // // // //           {reviews.map(review => (\n// // // // // // // //             <li key={review._id} className=\"mb-2\">\n// // // // // // // //               <div>\n// // // // // // // //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// // // // // // // //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// // // // // // // //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// // // // // // // //               </div>\n// // // // // // // //             </li>\n// // // // // // // //           ))}\n// // // // // // // //         </ul>\n// // // // // // // //         {editReview ? (\n// // // // // // // //           <div>\n// // // // // // // //             <h5>Edit Review</h5>\n// // // // // // // //             <input\n// // // // // // // //               type=\"text\"\n// // // // // // // //               value={editReview.user}\n// // // // // // // //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// // // // // // // //               placeholder=\"User\"\n// // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // //             />\n// // // // // // // //             <input\n// // // // // // // //               type=\"text\"\n// // // // // // // //               value={editReview.comment}\n// // // // // // // //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// // // // // // // //               placeholder=\"Comment\"\n// // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // //             />\n// // // // // // // //             <input\n// // // // // // // //               type=\"number\"\n// // // // // // // //               min=\"1\"\n// // // // // // // //               max=\"5\"\n// // // // // // // //               value={editReview.rating}\n// // // // // // // //               onChange={(e) => setEditReview({ ...editReview, rating: Number(e.target.value) })}\n// // // // // // // //               placeholder=\"Rating\"\n// // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // //             />\n// // // // // // // //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// // // // // // // //           </div>\n// // // // // // // //         ) : (\n// // // // // // // //           <div>\n// // // // // // // //             <h5>Add Review</h5>\n// // // // // // // //             <input\n// // // // // // // //               type=\"text\"\n// // // // // // // //               value={newReview.user}\n// // // // // // // //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// // // // // // // //               placeholder=\"User\"\n// // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // //             />\n// // // // // // // //             <input\n// // // // // // // //               type=\"text\"\n// // // // // // // //               value={newReview.comment}\n// // // // // // // //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// // // // // // // //               placeholder=\"Comment\"\n// // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // //             />\n// // // // // // // //             <input\n// // // // // // // //               type=\"number\"\n// // // // // // // //               min=\"1\"\n// // // // // // // //               max=\"5\"\n// // // // // // // //               value={newReview.rating}\n// // // // // // // //               onChange={(e) => setNewReview({ ...newReview, rating: Number(e.target.value) })}\n// // // // // // // //               placeholder=\"Rating\"\n// // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // //             />\n// // // // // // // //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// // // // // // // //           </div>\n// // // // // // // //         )}\n// // // // // // // //       </div>\n// // // // // // // //     </footer>\n// // // // // // // //   );\n// // // // // // // // }\n\n// // // // // // // // export default Footer;\n\n\n// // // // // // // import React, { useEffect, useState } from 'react';\n\n// // // // // // // function Footer() {\n// // // // // // //   const [reviews, setReviews] = useState([]);\n// // // // // // //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// // // // // // //   const [editReview, setEditReview] = useState(null);\n\n// // // // // // //   // Fetch reviews from the backend\n// // // // // // //   const fetchReviews = async () => {\n// // // // // // //     try {\n// // // // // // //       const response = await fetch('http://localhost:5000/api/reviews');\n// // // // // // //       const data = await response.json();\n// // // // // // //       setReviews(data);\n// // // // // // //     } catch (error) {\n// // // // // // //       console.error('Error fetching reviews:', error);\n// // // // // // //     }\n// // // // // // //   };\n\n// // // // // // //   useEffect(() => {\n// // // // // // //     fetchReviews();\n// // // // // // //   }, []);\n\n// // // // // // //   // Create a new review\n// // // // // // //   const handleCreate = async () => {\n// // // // // // //     try {\n// // // // // // //       const response = await fetch('http://localhost:5000/api/reviews', {\n// // // // // // //         method: 'POST',\n// // // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // // //         body: JSON.stringify(newReview),\n// // // // // // //       });\n// // // // // // //       const data = await response.json();\n// // // // // // //       setReviews([...reviews, data]);\n// // // // // // //       setNewReview({ user: '', comment: '', rating: 1 });\n// // // // // // //     } catch (error) {\n// // // // // // //       console.error('Error creating review:', error);\n// // // // // // //     }\n// // // // // // //   };\n\n// // // // // // //   // Update an existing review\n// // // // // // //   const handleUpdate = async () => {\n// // // // // // //     if (!editReview) return;\n\n// // // // // // //     try {\n// // // // // // //       const response = await fetch(`http://localhost:5000/api/reviews/${editReview._id}`, {\n// // // // // // //         method: 'PUT',\n// // // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // // //         body: JSON.stringify(editReview),\n// // // // // // //       });\n// // // // // // //       const data = await response.json();\n// // // // // // //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// // // // // // //       setEditReview(null);\n// // // // // // //     } catch (error) {\n// // // // // // //       console.error('Error updating review:', error);\n// // // // // // //     }\n// // // // // // //   };\n\n// // // // // // //   // Delete a review\n// // // // // // //   const handleDelete = async (id) => {\n// // // // // // //     try {\n// // // // // // //       await fetch(`http://localhost:5000/api/reviews/${id}`, { method: 'DELETE' });\n// // // // // // //       setReviews(reviews.filter(review => review._id !== id));\n// // // // // // //     } catch (error) {\n// // // // // // //       console.error('Error deleting review:', error);\n// // // // // // //     }\n// // // // // // //   };\n\n// // // // // // //   return (\n// // // // // // //     <footer className=\"bg-dark text-light py-3\">\n// // // // // // //       <div className=\"container\">\n// // // // // // //         <h4>User Reviews</h4>\n// // // // // // //         <ul className=\"list-unstyled\">\n// // // // // // //           {reviews.map(review => (\n// // // // // // //             <li key={review._id}>\n// // // // // // //               <div>\n// // // // // // //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// // // // // // //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// // // // // // //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// // // // // // //               </div>\n// // // // // // //             </li>\n// // // // // // //           ))}\n// // // // // // //         </ul>\n// // // // // // //         {editReview ? (\n// // // // // // //           <div>\n// // // // // // //             <h5>Edit Review</h5>\n// // // // // // //             <input\n// // // // // // //               type=\"text\"\n// // // // // // //               value={editReview.user}\n// // // // // // //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// // // // // // //               placeholder=\"User\"\n// // // // // // //             />\n// // // // // // //             <input\n// // // // // // //               type=\"text\"\n// // // // // // //               value={editReview.comment}\n// // // // // // //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// // // // // // //               placeholder=\"Comment\"\n// // // // // // //             />\n// // // // // // //             <input\n// // // // // // //               type=\"number\"\n// // // // // // //               min=\"1\"\n// // // // // // //               max=\"5\"\n// // // // // // //               value={editReview.rating}\n// // // // // // //               onChange={(e) => setEditReview({ ...editReview, rating: e.target.value })}\n// // // // // // //               placeholder=\"Rating\"\n// // // // // // //             />\n// // // // // // //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// // // // // // //           </div>\n// // // // // // //         ) : (\n// // // // // // //           <div>\n// // // // // // //             <h5>Add Review</h5>\n// // // // // // //             <input\n// // // // // // //               type=\"text\"\n// // // // // // //               value={newReview.user}\n// // // // // // //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// // // // // // //               placeholder=\"User\"\n// // // // // // //             />\n// // // // // // //             <input\n// // // // // // //               type=\"text\"\n// // // // // // //               value={newReview.comment}\n// // // // // // //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// // // // // // //               placeholder=\"Comment\"\n// // // // // // //             />\n// // // // // // //             <input\n// // // // // // //               type=\"number\"\n// // // // // // //               min=\"1\"\n// // // // // // //               max=\"5\"\n// // // // // // //               value={newReview.rating}\n// // // // // // //               onChange={(e) => setNewReview({ ...newReview, rating: e.target.value })}\n// // // // // // //               placeholder=\"Rating\"\n// // // // // // //             />\n// // // // // // //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// // // // // // //           </div>\n// // // // // // //         )}\n// // // // // // //       </div>\n// // // // // // //     </footer>\n// // // // // // //   );\n// // // // // // // }\n\n// // // // // // // export default Footer;\n\n// // // // // // import React, { useEffect, useState } from 'react';\n\n// // // // // // function Footer() {\n// // // // // //   const [reviews, setReviews] = useState([]);\n// // // // // //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// // // // // //   const [editReview, setEditReview] = useState(null);\n\n// // // // // //   // Fetch reviews from the backend\n// // // // // //   const fetchReviews = async () => {\n// // // // // //     try {\n// // // // // //       const response = await fetch('http://localhost:5000/api/reviews');\n// // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // //       const data = await response.json();\n// // // // // //       setReviews(data);\n// // // // // //     } catch (error) {\n// // // // // //       console.error('Error fetching reviews:', error);\n// // // // // //     }\n// // // // // //   };\n\n// // // // // //   useEffect(() => {\n// // // // // //     fetchReviews();\n// // // // // //   }, []);\n\n// // // // // //   // Create a new review\n// // // // // //   const handleCreate = async () => {\n// // // // // //     try {\n// // // // // //       const response = await fetch('http://localhost:5000/api/reviews', {\n// // // // // //         method: 'POST',\n// // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // //         body: JSON.stringify(newReview),\n// // // // // //       });\n// // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // //       const data = await response.json();\n// // // // // //       setReviews([...reviews, data]);\n// // // // // //       setNewReview({ user: '', comment: '', rating: 1 });\n// // // // // //     } catch (error) {\n// // // // // //       console.error('Error creating review:', error);\n// // // // // //     }\n// // // // // //   };\n\n// // // // // //   // Update an existing review\n// // // // // //   const handleUpdate = async () => {\n// // // // // //     if (!editReview) return;\n\n// // // // // //     try {\n// // // // // //       const response = await fetch(`http://localhost:5000/api/reviews/${editReview._id}`, {\n// // // // // //         method: 'PUT',\n// // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // //         body: JSON.stringify(editReview),\n// // // // // //       });\n// // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // //       const data = await response.json();\n// // // // // //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// // // // // //       setEditReview(null);\n// // // // // //     } catch (error) {\n// // // // // //       console.error('Error updating review:', error);\n// // // // // //     }\n// // // // // //   };\n\n// // // // // //   // Delete a review\n// // // // // //   const handleDelete = async (id) => {\n// // // // // //     try {\n// // // // // //       const response = await fetch(`http://localhost:5000/api/reviews/${id}`, { method: 'DELETE' });\n// // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // //       setReviews(reviews.filter(review => review._id !== id));\n// // // // // //     } catch (error) {\n// // // // // //       console.error('Error deleting review:', error);\n// // // // // //     }\n// // // // // //   };\n\n// // // // // //   return (\n// // // // // //     <footer className=\"bg-dark text-light py-3\">\n// // // // // //       <div className=\"container\">\n// // // // // //         <h4>User Reviews</h4>\n// // // // // //         <ul className=\"list-unstyled\">\n// // // // // //           {reviews.map(review => (\n// // // // // //             <li key={review._id} className=\"mb-2\">\n// // // // // //               <div>\n// // // // // //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// // // // // //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// // // // // //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// // // // // //               </div>\n// // // // // //             </li>\n// // // // // //           ))}\n// // // // // //         </ul>\n// // // // // //         {editReview ? (\n// // // // // //           <div>\n// // // // // //             <h5>Edit Review</h5>\n// // // // // //             <input\n// // // // // //               type=\"text\"\n// // // // // //               value={editReview.user}\n// // // // // //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// // // // // //               placeholder=\"User\"\n// // // // // //               className=\"form-control mb-2\"\n// // // // // //             />\n// // // // // //             <input\n// // // // // //               type=\"text\"\n// // // // // //               value={editReview.comment}\n// // // // // //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// // // // // //               placeholder=\"Comment\"\n// // // // // //               className=\"form-control mb-2\"\n// // // // // //             />\n// // // // // //             <input\n// // // // // //               type=\"number\"\n// // // // // //               min=\"1\"\n// // // // // //               max=\"5\"\n// // // // // //               value={editReview.rating}\n// // // // // //               onChange={(e) => setEditReview({ ...editReview, rating: Number(e.target.value) })}\n// // // // // //               placeholder=\"Rating\"\n// // // // // //               className=\"form-control mb-2\"\n// // // // // //             />\n// // // // // //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// // // // // //           </div>\n// // // // // //         ) : (\n// // // // // //           <div>\n// // // // // //             <h5>Add Review</h5>\n// // // // // //             <input\n// // // // // //               type=\"text\"\n// // // // // //               value={newReview.user}\n// // // // // //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// // // // // //               placeholder=\"User\"\n// // // // // //               className=\"form-control mb-2\"\n// // // // // //             />\n// // // // // //             <input\n// // // // // //               type=\"text\"\n// // // // // //               value={newReview.comment}\n// // // // // //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// // // // // //               placeholder=\"Comment\"\n// // // // // //               className=\"form-control mb-2\"\n// // // // // //             />\n// // // // // //             <input\n// // // // // //               type=\"number\"\n// // // // // //               min=\"1\"\n// // // // // //               max=\"5\"\n// // // // // //               value={newReview.rating}\n// // // // // //               onChange={(e) => setNewReview({ ...newReview, rating: Number(e.target.value) })}\n// // // // // //               placeholder=\"Rating\"\n// // // // // //               className=\"form-control mb-2\"\n// // // // // //             />\n// // // // // //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// // // // // //           </div>\n// // // // // //         )}\n// // // // // //       </div>\n// // // // // //     </footer>\n// // // // // //   );\n// // // // // // }\n\n// // // // // // export default Footer;\n\n\n// // // // // import React, { useEffect, useState } from 'react';\n\n// // // // // function Footer() {\n// // // // //   const [reviews, setReviews] = useState([]);\n// // // // //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// // // // //   const [editReview, setEditReview] = useState(null);\n\n// // // // //   // Fetch reviews from the backend\n// // // // //   const fetchReviews = async () => {\n// // // // //     try {\n// // // // //       const response = await fetch('http://localhost:5000/api');\n// // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // //       const data = await response.json();\n// // // // //       setReviews(data);\n// // // // //     } catch (error) {\n// // // // //       console.error('Error fetching reviews:', error);\n// // // // //     }\n// // // // //   };\n\n// // // // //   useEffect(() => {\n// // // // //     fetchReviews();\n// // // // //   }, []);\n\n// // // // //   // Create a new review\n// // // // //   const handleCreate = async () => {\n// // // // //     if (!newReview.user || !newReview.comment || newReview.rating < 1 || newReview.rating > 5) {\n// // // // //       alert('Please fill out all fields correctly.');\n// // // // //       return;\n// // // // //     }\n// // // // //     try {\n// // // // //       const response = await fetch('http://localhost:5000/api', {\n// // // // //         method: 'POST',\n// // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // //         body: JSON.stringify(newReview),\n// // // // //       });\n// // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // //       const data = await response.json();\n// // // // //       setReviews([...reviews, data]);\n// // // // //       setNewReview({ user: '', comment: '', rating: 1 });\n// // // // //     } catch (error) {\n// // // // //       console.error('Error creating review:', error);\n// // // // //     }\n// // // // //   };\n\n// // // // //   // Update an existing review\n// // // // //   const handleUpdate = async () => {\n// // // // //     if (!editReview || !editReview.user || !editReview.comment || editReview.rating < 1 || editReview.rating > 5) {\n// // // // //       alert('Please fill out all fields correctly.');\n// // // // //       return;\n// // // // //     }\n// // // // //     try {\n// // // // //       const response = await fetch(`http://localhost:5000/api/${editReview._id}`, {\n// // // // //         method: 'PUT',\n// // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // //         body: JSON.stringify(editReview),\n// // // // //       });\n// // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // //       const data = await response.json();\n// // // // //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// // // // //       setEditReview(null);\n// // // // //     } catch (error) {\n// // // // //       console.error('Error updating review:', error);\n// // // // //     }\n// // // // //   };\n\n// // // // //   // Delete a review\n// // // // //   const handleDelete = async (id) => {\n// // // // //     try {\n// // // // //       const response = await fetch(`http://localhost:5000/api/${id}`, { method: 'DELETE' });\n// // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // //       setReviews(reviews.filter(review => review._id !== id));\n// // // // //     } catch (error) {\n// // // // //       console.error('Error deleting review:', error);\n// // // // //     }\n// // // // //   };\n\n// // // // //   return (\n// // // // //     <footer className=\"bg-dark text-light py-3\">\n// // // // //       <div className=\"container\">\n// // // // //         <h4>User Reviews</h4>\n// // // // //         <ul className=\"list-unstyled\">\n// // // // //           {reviews.map(review => (\n// // // // //             <li key={review._id} className=\"mb-2\">\n// // // // //               <div>\n// // // // //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// // // // //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// // // // //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// // // // //               </div>\n// // // // //             </li>\n// // // // //           ))}\n// // // // //         </ul>\n// // // // //         {editReview ? (\n// // // // //           <div>\n// // // // //             <h5>Edit Review</h5>\n// // // // //             <input\n// // // // //               type=\"text\"\n// // // // //               value={editReview.user}\n// // // // //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// // // // //               placeholder=\"User\"\n// // // // //               className=\"form-control mb-2\"\n// // // // //             />\n// // // // //             <input\n// // // // //               type=\"text\"\n// // // // //               value={editReview.comment}\n// // // // //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// // // // //               placeholder=\"Comment\"\n// // // // //               className=\"form-control mb-2\"\n// // // // //             />\n// // // // //             <input\n// // // // //               type=\"number\"\n// // // // //               min=\"1\"\n// // // // //               max=\"5\"\n// // // // //               value={editReview.rating}\n// // // // //               onChange={(e) => setEditReview({ ...editReview, rating: Number(e.target.value) })}\n// // // // //               placeholder=\"Rating\"\n// // // // //               className=\"form-control mb-2\"\n// // // // //             />\n// // // // //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// // // // //           </div>\n// // // // //         ) : (\n// // // // //           <div>\n// // // // //             <h5>Add Review</h5>\n// // // // //             <input\n// // // // //               type=\"text\"\n// // // // //               value={newReview.user}\n// // // // //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// // // // //               placeholder=\"User\"\n// // // // //               className=\"form-control mb-2\"\n// // // // //             />\n// // // // //             <input\n// // // // //               type=\"text\"\n// // // // //               value={newReview.comment}\n// // // // //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// // // // //               placeholder=\"Comment\"\n// // // // //               className=\"form-control mb-2\"\n// // // // //             />\n// // // // //             <input\n// // // // //               type=\"number\"\n// // // // //               min=\"1\"\n// // // // //               max=\"5\"\n// // // // //               value={newReview.rating}\n// // // // //               onChange={(e) => setNewReview({ ...newReview, rating: Number(e.target.value) })}\n// // // // //               placeholder=\"Rating\"\n// // // // //               className=\"form-control mb-2\"\n// // // // //             />\n// // // // //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// // // // //           </div>\n// // // // //         )}\n// // // // //       </div>\n// // // // //     </footer>\n// // // // //   );\n// // // // // }\n\n// // // // // export default Footer;\n\n\n// // // // import React, { useEffect, useState } from 'react';\n\n// // // // function Footer() {\n// // // //   const [reviews, setReviews] = useState([]);\n// // // //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// // // //   const [editReview, setEditReview] = useState(null);\n\n// // // //   // Fetch reviews from the backend\n// // // //   const fetchReviews = async () => {\n// // // //     try {\n// // // //       const response = await fetch('http://localhost:5000/api');\n// // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // //       const data = await response.json();\n// // // //       console.log('Fetched reviews:', data); // Debugging\n// // // //       setReviews(data);\n// // // //     } catch (error) {\n// // // //       console.error('Error fetching reviews:', error);\n// // // //     }\n// // // //   };\n\n// // // //   useEffect(() => {\n// // // //     fetchReviews();\n// // // //   }, []);\n\n// // // //   // Create a new review\n// // // //   const handleCreate = async () => {\n// // // //     if (!newReview.user || !newReview.comment || newReview.rating < 1 || newReview.rating > 5) {\n// // // //       alert('Please fill out all fields correctly.');\n// // // //       return;\n// // // //     }\n// // // //     try {\n// // // //       const response = await fetch('http://localhost:5000/api', {\n// // // //         method: 'POST',\n// // // //         headers: { 'Content-Type': 'application/json' },\n// // // //         body: JSON.stringify(newReview),\n// // // //       });\n// // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // //       const data = await response.json();\n// // // //       console.log('Review added:', data); // Debugging\n// // // //       setReviews([...reviews, data]);\n// // // //       setNewReview({ user: '', comment: '', rating: 1 });\n// // // //     } catch (error) {\n// // // //       console.error('Error creating review:', error);\n// // // //     }\n// // // //   };\n\n// // // //   // Update an existing review\n// // // //   const handleUpdate = async () => {\n// // // //     if (!editReview || !editReview.user || !editReview.comment || editReview.rating < 1 || editReview.rating > 5) {\n// // // //       alert('Please fill out all fields correctly.');\n// // // //       return;\n// // // //     }\n// // // //     try {\n// // // //       const response = await fetch(`http://localhost:5000/api/${editReview._id}`, {\n// // // //         method: 'PUT',\n// // // //         headers: { 'Content-Type': 'application/json' },\n// // // //         body: JSON.stringify(editReview),\n// // // //       });\n// // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // //       const data = await response.json();\n// // // //       console.log('Review updated:', data); // Debugging\n// // // //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// // // //       setEditReview(null);\n// // // //     } catch (error) {\n// // // //       console.error('Error updating review:', error);\n// // // //     }\n// // // //   };\n\n// // // //   // Delete a review\n// // // //   const handleDelete = async (id) => {\n// // // //     try {\n// // // //       const response = await fetch(`http://localhost:5000/api/${id}`, { method: 'DELETE' });\n// // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // //       console.log('Review deleted:', id); // Debugging\n// // // //       setReviews(reviews.filter(review => review._id !== id));\n// // // //     } catch (error) {\n// // // //       console.error('Error deleting review:', error);\n// // // //     }\n// // // //   };\n\n// // // //   return (\n// // // //     <footer className=\"bg-dark text-light py-3\">\n// // // //       <div className=\"container\">\n// // // //         <h4>User Reviews</h4>\n// // // //         <ul className=\"list-unstyled\">\n// // // //           {reviews.map(review => (\n// // // //             <li key={review._id} className=\"mb-2\">\n// // // //               <div>\n// // // //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// // // //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// // // //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// // // //               </div>\n// // // //             </li>\n// // // //           ))}\n// // // //         </ul>\n// // // //         {editReview ? (\n// // // //           <div>\n// // // //             <h5>Edit Review</h5>\n// // // //             <input\n// // // //               type=\"text\"\n// // // //               value={editReview.user}\n// // // //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// // // //               placeholder=\"User\"\n// // // //               className=\"form-control mb-2\"\n// // // //             />\n// // // //             <input\n// // // //               type=\"text\"\n// // // //               value={editReview.comment}\n// // // //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// // // //               placeholder=\"Comment\"\n// // // //               className=\"form-control mb-2\"\n// // // //             />\n// // // //             <input\n// // // //               type=\"number\"\n// // // //               min=\"1\"\n// // // //               max=\"5\"\n// // // //               value={editReview.rating}\n// // // //               onChange={(e) => setEditReview({ ...editReview, rating: Number(e.target.value) })}\n// // // //               placeholder=\"Rating\"\n// // // //               className=\"form-control mb-2\"\n// // // //             />\n// // // //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// // // //           </div>\n// // // //         ) : (\n// // // //           <div>\n// // // //             <h5>Add Review</h5>\n// // // //             <input\n// // // //               type=\"text\"\n// // // //               value={newReview.user}\n// // // //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// // // //               placeholder=\"User\"\n// // // //               className=\"form-control mb-2\"\n// // // //             />\n// // // //             <input\n// // // //               type=\"text\"\n// // // //               value={newReview.comment}\n// // // //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// // // //               placeholder=\"Comment\"\n// // // //               className=\"form-control mb-2\"\n// // // //             />\n// // // //             <input\n// // // //               type=\"number\"\n// // // //               min=\"1\"\n// // // //               max=\"5\"\n// // // //               value={newReview.rating}\n// // // //               onChange={(e) => setNewReview({ ...newReview, rating: Number(e.target.value) })}\n// // // //               placeholder=\"Rating\"\n// // // //               className=\"form-control mb-2\"\n// // // //             />\n// // // //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// // // //           </div>\n// // // //         )}\n// // // //       </div>\n// // // //     </footer>\n// // // //   );\n// // // // }\n\n// // // // export default Footer;\n\n\n\n// // // import React, { useEffect, useState } from 'react';\n\n// // // function Footer() {\n// // //   const [reviews, setReviews] = useState([]);\n// // //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// // //   const [editReview, setEditReview] = useState(null);\n\n// // //   // Fetch reviews from the backend\n// // //   const fetchReviews = async () => {\n// // //     try {\n// // //       const response = await fetch('http://localhost:5000/api');\n// // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // //       const data = await response.json();\n// // //       setReviews(data);\n// // //     } catch (error) {\n// // //       console.error('Error fetching reviews:', error);\n// // //     }\n// // //   };\n\n// // //   useEffect(() => {\n// // //     fetchReviews();\n// // //   }, []);\n\n// // //   // Create a new review\n// // //   const handleCreate = async () => {\n// // //     if (!newReview.user || !newReview.comment || newReview.rating < 1 || newReview.rating > 5) {\n// // //       alert('Please fill out all fields correctly.');\n// // //       return;\n// // //     }\n// // //     try {\n// // //       const response = await fetch('http://localhost:5000/api', {\n// // //         method: 'POST',\n// // //         headers: { 'Content-Type': 'application/json' },\n// // //         body: JSON.stringify(newReview),\n// // //       });\n// // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // //       const data = await response.json();\n// // //       setReviews([...reviews, data]);\n// // //       setNewReview({ user: '', comment: '', rating: 1 });\n// // //     } catch (error) {\n// // //       console.error('Error creating review:', error);\n// // //     }\n// // //   };\n\n// // //   // Update an existing review\n// // //   const handleUpdate = async () => {\n// // //     if (!editReview || !editReview.user || !editReview.comment || editReview.rating < 1 || editReview.rating > 5) {\n// // //       alert('Please fill out all fields correctly.');\n// // //       return;\n// // //     }\n// // //     try {\n// // //       const response = await fetch(`http://localhost:5000/api/${editReview._id}`, {\n// // //         method: 'PUT',\n// // //         headers: { 'Content-Type': 'application/json' },\n// // //         body: JSON.stringify(editReview),\n// // //       });\n// // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // //       const data = await response.json();\n// // //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// // //       setEditReview(null);\n// // //     } catch (error) {\n// // //       console.error('Error updating review:', error);\n// // //     }\n// // //   };\n\n// // //   // Delete a review\n// // //   const handleDelete = async (id) => {\n// // //     try {\n// // //       const response = await fetch(`http://localhost:5000/api/${id}`, { method: 'DELETE' });\n// // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // //       setReviews(reviews.filter(review => review._id !== id));\n// // //     } catch (error) {\n// // //       console.error('Error deleting review:', error);\n// // //     }\n// // //   };\n\n// // //   return (\n// // //     <footer className=\"bg-dark text-light py-3\">\n// // //       <div className=\"container\">\n// // //         <h4>User Reviews</h4>\n// // //         <ul className=\"list-unstyled\">\n// // //           {reviews.map(review => (\n// // //             <li key={review._id} className=\"mb-2\">\n// // //               <div>\n// // //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// // //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// // //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// // //               </div>\n// // //             </li>\n// // //           ))}\n// // //         </ul>\n// // //         {editReview ? (\n// // //           <div>\n// // //             <h5>Edit Review</h5>\n// // //             <input\n// // //               type=\"text\"\n// // //               value={editReview.user}\n// // //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// // //               placeholder=\"User\"\n// // //               className=\"form-control mb-2\"\n// // //             />\n// // //             <input\n// // //               type=\"text\"\n// // //               value={editReview.comment}\n// // //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// // //               placeholder=\"Comment\"\n// // //               className=\"form-control mb-2\"\n// // //             />\n// // //             <input\n// // //               type=\"number\"\n// // //               min=\"1\"\n// // //               max=\"5\"\n// // //               value={editReview.rating}\n// // //               onChange={(e) => setEditReview({ ...editReview, rating: Number(e.target.value) })}\n// // //               placeholder=\"Rating\"\n// // //               className=\"form-control mb-2\"\n// // //             />\n// // //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// // //           </div>\n// // //         ) : (\n// // //           <div>\n// // //             <h5>Add Review</h5>\n// // //             <input\n// // //               type=\"text\"\n// // //               value={newReview.user}\n// // //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// // //               placeholder=\"User\"\n// // //               className=\"form-control mb-2\"\n// // //             />\n// // //             <input\n// // //               type=\"text\"\n// // //               value={newReview.comment}\n// // //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// // //               placeholder=\"Comment\"\n// // //               className=\"form-control mb-2\"\n// // //             />\n// // //             <input\n// // //               type=\"number\"\n// // //               min=\"1\"\n// // //               max=\"5\"\n// // //               value={newReview.rating}\n// // //               onChange={(e) => setNewReview({ ...newReview, rating: Number(e.target.value) })}\n// // //               placeholder=\"Rating\"\n// // //               className=\"form-control mb-2\"\n// // //             />\n// // //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// // //           </div>\n// // //         )}\n// // //       </div>\n// // //     </footer>\n// // //   );\n// // // }\n\n// // // export default Footer;\n// // import React, { useEffect, useState } from 'react';\n\n// // function Footer() {\n// //   const [reviews, setReviews] = useState([]);\n// //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// //   const [editReview, setEditReview] = useState(null);\n\n// //   // Fetch reviews from the backend\n// //   const fetchReviews = async () => {\n// //     try {\n// //       const response = await fetch('http://localhost:5000/api/reviews');\n// //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// //       const data = await response.json();\n// //       setReviews(data);\n// //     } catch (error) {\n// //       console.error('Error fetching reviews:', error);\n// //     }\n// //   };\n\n// //   useEffect(() => {\n// //     fetchReviews();\n// //   }, []);\n\n// //   // Create a new review\n// //   const handleCreate = async () => {\n// //     if (!newReview.user || !newReview.comment || newReview.rating < 1 || newReview.rating > 5) {\n// //       alert('Please fill out all fields correctly.');\n// //       return;\n// //     }\n// //     try {\n// //       const response = await fetch('http://localhost:5000/api/reviews', {\n// //         method: 'POST',\n// //         headers: { 'Content-Type': 'application/json' },\n// //         body: JSON.stringify(newReview),\n// //       });\n// //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// //       const data = await response.json();\n// //       setReviews([...reviews, data]);\n// //       setNewReview({ user: '', comment: '', rating: 1 });\n// //     } catch (error) {\n// //       console.error('Error creating review:', error);\n// //     }\n// //   };\n\n// //   // Update an existing review\n// //   const handleUpdate = async () => {\n// //     if (!editReview || !editReview.user || !editReview.comment || editReview.rating < 1 || editReview.rating > 5) {\n// //       alert('Please fill out all fields correctly.');\n// //       return;\n// //     }\n// //     try {\n// //       const response = await fetch(`http://localhost:5000/api/reviews/${editReview._id}`, {\n// //         method: 'PUT',\n// //         headers: { 'Content-Type': 'application/json' },\n// //         body: JSON.stringify(editReview),\n// //       });\n// //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// //       const data = await response.json();\n// //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// //       setEditReview(null);\n// //     } catch (error) {\n// //       console.error('Error updating review:', error);\n// //     }\n// //   };\n\n// //   // Delete a review\n// //   const handleDelete = async (id) => {\n// //     try {\n// //       const response = await fetch(`http://localhost:5000/api/reviews/${id}`, { method: 'DELETE' });\n// //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// //       setReviews(reviews.filter(review => review._id !== id));\n// //     } catch (error) {\n// //       console.error('Error deleting review:', error);\n// //     }\n// //   };\n\n// //   return (\n// //     <footer className=\"bg-dark text-light py-3\">\n// //       <div className=\"container\">\n// //         <h4>User Reviews</h4>\n// //         <ul className=\"list-unstyled\">\n// //           {reviews.map(review => (\n// //             <li key={review._id} className=\"mb-2\">\n// //               <div>\n// //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// //               </div>\n// //             </li>\n// //           ))}\n// //         </ul>\n// //         {editReview ? (\n// //           <div>\n// //             <h5>Edit Review</h5>\n// //             <input\n// //               type=\"text\"\n// //               value={editReview.user}\n// //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// //               placeholder=\"User\"\n// //               className=\"form-control mb-2\"\n// //             />\n// //             <input\n// //               type=\"text\"\n// //               value={editReview.comment}\n// //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// //               placeholder=\"Comment\"\n// //               className=\"form-control mb-2\"\n// //             />\n// //             <input\n// //               type=\"number\"\n// //               min=\"1\"\n// //               max=\"5\"\n// //               value={editReview.rating}\n// //               onChange={(e) => setEditReview({ ...editReview, rating: Number(e.target.value) })}\n// //               placeholder=\"Rating\"\n// //               className=\"form-control mb-2\"\n// //             />\n// //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// //             <button onClick={() => setEditReview(null)} className=\"btn btn-secondary ms-2\">Cancel</button>\n// //           </div>\n// //         ) : (\n// //           <div>\n// //             <h5>Add Review</h5>\n// //             <input\n// //               type=\"text\"\n// //               value={newReview.user}\n// //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// //               placeholder=\"User\"\n// //               className=\"form-control mb-2\"\n// //             />\n// //             <input\n// //               type=\"text\"\n// //               value={newReview.comment}\n// //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// //               placeholder=\"Comment\"\n// //               className=\"form-control mb-2\"\n// //             />\n// //             <input\n// //               type=\"number\"\n// //               min=\"1\"\n// //               max=\"5\"\n// //               value={newReview.rating}\n// //               onChange={(e) => setNewReview({ ...newReview, rating: Number(e.target.value) })}\n// //               placeholder=\"Rating\"\n// //               className=\"form-control mb-2\"\n// //             />\n// //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// //           </div>\n// //         )}\n// //       </div>\n// //     </footer>\n// //   );\n// // }\n\n// // export default Footer;\n\n// import React, { useEffect, useState } from 'react';\n\n// function Footer() {\n//   const [reviews, setReviews] = useState([]);\n//   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n//   const [editReview, setEditReview] = useState(null);\n\n//   // Fetch reviews from the backend\n//   const fetchReviews = async () => {\n//     try {\n//       const response = await fetch('http://localhost:5000/api/reviews');\n//       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n//       const data = await response.json();\n//       setReviews(data);\n//     } catch (error) {\n//       console.error('Error fetching reviews:', error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchReviews();\n//   }, []);\n\n//   // Create a new review\n//   const handleCreate = async () => {\n//     if (!newReview.user || !newReview.comment || newReview.rating < 1 || newReview.rating > 5) {\n//       alert('Please fill out all fields correctly.');\n//       return;\n//     }\n//     try {\n//       const response = await fetch('http://localhost:5000/api/reviews', {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify(newReview),\n//       });\n//       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n//       const data = await response.json();\n//       setReviews([...reviews, data]);\n//       setNewReview({ user: '', comment: '', rating: 1 });\n//     } catch (error) {\n//       console.error('Error creating review:', error);\n//     }\n//   };\n\n//   // Update an existing review\n//   const handleUpdate = async () => {\n//     if (!editReview || !editReview.user || !editReview.comment || editReview.rating < 1 || editReview.rating > 5) {\n//       alert('Please fill out all fields correctly.');\n//       return;\n//     }\n//     try {\n//       const response = await fetch(`http://localhost:5000/api/reviews/${editReview._id}`, {\n//         method: 'PUT',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify(editReview),\n//       });\n//       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n//       const data = await response.json();\n//       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n//       setEditReview(null);\n//     } catch (error) {\n//       console.error('Error updating review:', error);\n//     }\n//   };\n\n//   // Delete a review\n//   const handleDelete = async (id) => {\n//     try {\n//       const response = await fetch(`http://localhost:5000/api/reviews/${id}`, { method: 'DELETE' });\n//       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n//       setReviews(reviews.filter(review => review._id !== id));\n//     } catch (error) {\n//       console.error('Error deleting review:', error);\n//     }\n//   };\n\n//   return (\n//     <footer className=\"bg-dark text-light py-3\">\n//       <div className=\"container\">\n//         <h4>User Reviews</h4>\n//         <ul className=\"list-unstyled\">\n//           {reviews.map(review => (\n//             <li key={review._id} className=\"mb-2\">\n//               <div>\n//                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n//                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n//                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n//               </div>\n//             </li>\n//           ))}\n//         </ul>\n//         {editReview ? (\n//           <div>\n//             <h5>Edit Review</h5>\n//             <input\n//               type=\"text\"\n//               value={editReview.user}\n//               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n//               placeholder=\"User\"\n//               className=\"form-control mb-2\"\n//             />\n//             <input\n//               type=\"text\"\n//               value={editReview.comment}\n//               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n//               placeholder=\"Comment\"\n//               className=\"form-control mb-2\"\n//             />\n//             <input\n//               type=\"number\"\n//               min=\"1\"\n//               max=\"5\"\n//               value={editReview.rating}\n//               onChange={(e) => setEditReview({ ...editReview, rating: Number(e.target.value) })}\n//               placeholder=\"Rating\"\n//               className=\"form-control mb-2\"\n//             />\n//             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n//             <button onClick={() => setEditReview(null)} className=\"btn btn-secondary ms-2\">Cancel</button>\n//           </div>\n//         ) : (\n//           <div>\n//             <h5>Add Review</h5>\n//             <input\n//               type=\"text\"\n//               value={newReview.user}\n//               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n//               placeholder=\"User\"\n//               className=\"form-control mb-2\"\n//             />\n//             <input\n//               type=\"text\"\n//               value={newReview.comment}\n//               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n//               placeholder=\"Comment\"\n//               className=\"form-control mb-2\"\n//             />\n//             <input\n//               type=\"number\"\n//               min=\"1\"\n//               max=\"5\"\n//               value={newReview.rating}\n//               onChange={(e) => setNewReview({ ...newReview, rating: Number(e.target.value) })}\n//               placeholder=\"Rating\"\n//               className=\"form-control mb-2\"\n//             />\n//             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n//           </div>\n//         )}\n//       </div>\n//     </footer>\n//   );\n// }\n\n// export default Footer;\n\nimport React, { useState, useEffect } from 'react';\n\nconst Footer = () => {\n  const [reviews, setReviews] = useState([]);\n  const [newReview, setNewReview] = useState({\n    userId: '',\n    foodItemId: '',\n    rating: '',\n    review: ''\n  });\n\n  useEffect(() => {\n    fetchReviews();\n  }, []);\n\n  const fetchReviews = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/reviews');\n      if (!response.ok) throw new Error('Network response was not ok');\n      const data = await response.json();\n      setReviews(data);\n    } catch (error) {\n      console.error('Error fetching reviews:', error);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setNewReview({\n      ...newReview,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:5000/api/reviews', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newReview)\n      });\n      if (!response.ok) throw new Error('Network response was not ok');\n      await fetchReviews(); // Refresh the list after adding a new review\n      setNewReview({\n        userId: '',\n        foodItemId: '',\n        rating: '',\n        review: ''\n      });\n    } catch (error) {\n      console.error('Error creating review:', error);\n    }\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/reviews/${id}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) throw new Error('Network response was not ok');\n      await fetchReviews(); // Refresh the list after deleting a review\n    } catch (error) {\n      console.error('Error deleting review:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Footer Component</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"userId\"\n          value={newReview.userId}\n          onChange={handleInputChange}\n          placeholder=\"User ID\"\n        />\n        <input\n          type=\"text\"\n          name=\"foodItemId\"\n          value={newReview.foodItemId}\n          onChange={handleInputChange}\n          placeholder=\"Food Item ID\"\n        />\n        <input\n          type=\"number\"\n          name=\"rating\"\n          value={newReview.rating}\n          onChange={handleInputChange}\n          placeholder=\"Rating\"\n        />\n        <textarea\n          name=\"review\"\n          value={newReview.review}\n          onChange={handleInputChange}\n          placeholder=\"Review\"\n        />\n        <button type=\"submit\">Add Review</button>\n      </form>\n\n      <div>\n        <h3>Reviews</h3>\n        {reviews.map((review) => (\n          <div key={review._id}>\n            <p>User: {review.userId}</p>\n            <p>Food Item: {review.foodItemId}</p>\n            <p>Rating: {review.rating}</p>\n            <p>Review: {review.review}</p>\n            <button onClick={() => handleDelete(review._id)}>Delete</button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC;IACzCU,MAAM,EAAE,EAAE;IACVC,UAAU,EAAE,EAAE;IACdC,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE;EACV,CAAC,CAAC;EAEFZ,SAAS,CAAC,MAAM;IACda,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;MACjE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChE,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCb,UAAU,CAACY,IAAI,CAAC;IAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;EAED,MAAME,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChClB,YAAY,CAAC;MACX,GAAGD,SAAS;MACZ,CAACiB,IAAI,GAAGC;IACV,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAChCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;QAChEc,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC1B,SAAS;MAChC,CAAC,CAAC;MACF,IAAI,CAACO,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChE,MAAMJ,YAAY,CAAC,CAAC,CAAC,CAAC;MACtBL,YAAY,CAAC;QACXC,MAAM,EAAE,EAAE;QACVC,UAAU,EAAE,EAAE;QACdC,MAAM,EAAE,EAAE;QACVC,MAAM,EAAE;MACV,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,MAAMc,YAAY,GAAG,MAAOC,EAAE,IAAK;IACjC,IAAI;MACF,MAAMrB,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqCoB,EAAE,EAAE,EAAE;QACtEN,MAAM,EAAE;MACV,CAAC,CAAC;MACF,IAAI,CAACf,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChE,MAAMJ,YAAY,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,oBACElB,OAAA;IAAAkC,QAAA,gBACElC,OAAA;MAAAkC,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBtC,OAAA;MAAMuC,QAAQ,EAAEd,YAAa;MAAAS,QAAA,gBAC3BlC,OAAA;QACEwC,IAAI,EAAC,MAAM;QACXlB,IAAI,EAAC,QAAQ;QACbC,KAAK,EAAElB,SAAS,CAACE,MAAO;QACxBkC,QAAQ,EAAErB,iBAAkB;QAC5BsB,WAAW,EAAC;MAAS;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,eACFtC,OAAA;QACEwC,IAAI,EAAC,MAAM;QACXlB,IAAI,EAAC,YAAY;QACjBC,KAAK,EAAElB,SAAS,CAACG,UAAW;QAC5BiC,QAAQ,EAAErB,iBAAkB;QAC5BsB,WAAW,EAAC;MAAc;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,eACFtC,OAAA;QACEwC,IAAI,EAAC,QAAQ;QACblB,IAAI,EAAC,QAAQ;QACbC,KAAK,EAAElB,SAAS,CAACI,MAAO;QACxBgC,QAAQ,EAAErB,iBAAkB;QAC5BsB,WAAW,EAAC;MAAQ;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,eACFtC,OAAA;QACEsB,IAAI,EAAC,QAAQ;QACbC,KAAK,EAAElB,SAAS,CAACK,MAAO;QACxB+B,QAAQ,EAAErB,iBAAkB;QAC5BsB,WAAW,EAAC;MAAQ;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,eACFtC,OAAA;QAAQwC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,eAEPtC,OAAA;MAAAkC,QAAA,gBACElC,OAAA;QAAAkC,QAAA,EAAI;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACfnC,OAAO,CAACwC,GAAG,CAAEjC,MAAM,iBAClBV,OAAA;QAAAkC,QAAA,gBACElC,OAAA;UAAAkC,QAAA,GAAG,QAAM,EAACxB,MAAM,CAACH,MAAM;QAAA;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5BtC,OAAA;UAAAkC,QAAA,GAAG,aAAW,EAACxB,MAAM,CAACF,UAAU;QAAA;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrCtC,OAAA;UAAAkC,QAAA,GAAG,UAAQ,EAACxB,MAAM,CAACD,MAAM;QAAA;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9BtC,OAAA;UAAAkC,QAAA,GAAG,UAAQ,EAACxB,MAAM,CAACA,MAAM;QAAA;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9BtC,OAAA;UAAQ4C,OAAO,EAAEA,CAAA,KAAMZ,YAAY,CAACtB,MAAM,CAACmC,GAAG,CAAE;UAAAX,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GALxD5B,MAAM,CAACmC,GAAG;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMf,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpC,EAAA,CAnHID,MAAM;AAAA6C,EAAA,GAAN7C,MAAM;AAqHZ,eAAeA,MAAM;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}