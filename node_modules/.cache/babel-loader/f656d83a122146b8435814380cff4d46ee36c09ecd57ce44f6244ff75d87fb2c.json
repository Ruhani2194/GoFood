{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruhan\\\\Documents\\\\gofood\\\\mernapp\\\\src\\\\components\\\\Card.js\",\n  _s = $RefreshSig$();\n// // import React, { useState, useRef, useEffect } from 'react';\n// // import { useDispatchCart, useCart } from '../components/ContextReducer';\n\n// // export default function Card(props) {\n// //     const dispatch = useDispatchCart();\n// //     const [qty, setQty] = useState(1);\n// //     const [size, setSize] = useState(\"\");\n// //     const priceRef = useRef();\n// //     const options = props.options || {}; \n// //     const priceOptions = Object.keys(options);\n// //     const data = useCart(); \n// //     useEffect(() => {\n// //         if (priceRef.current) {\n// //             setSize(priceRef.current.value);\n// //         }\n// //     }, [priceRef]);\n\n// //     const handleQty = (e) => {\n// //         setQty(e.target.value);\n// //     };\n\n// //     const handleOptions = (e) => {\n// //         setSize(e.target.value);\n// //     };\n\n// //     const handleAddtoCart = () => {\n// //         if (size) { \n// //             const finalPrice = qty * parseInt(options[size] || 0);\n// //             dispatch({\n// //                 type: \"ADD\",\n// //                 id: props.foodItem._id,\n// //                 name: props.foodItem.name,\n// //                 price: finalPrice,\n// //                 qty: qty,\n// //                 size: size\n// //             });\n// //             // console.log(data);\n// //         } else {\n// //             alert(\"Please select a size.\");\n// //         }\n// //     };\n\n// //     return (\n// //         <div>\n// //             <div className=\"card mt-3 bg-dark text-light\" style={{ width: \"16rem\", maxHeight: \"360px\" }}>\n// //                 <img src={props.foodItem.img} className=\"card-img-top\" alt={props.foodItem.name} style={{ height: \"120px\", objectFit: \"fill\" }} />\n// //                 <div className=\"card-body\">\n// //                     <h5 className=\"card-title\">{props.foodItem.name}</h5>\n// //                     <div className='container w-100 p-0' style={{ height: \"38px\" }}>\n// //                         <select className=\"m-2 h-100 w-20 bg-success text-white rounded\" onChange={handleQty} value={qty}>\n// //                             {Array.from(Array(6), (e, i) => (\n// //                                 <option key={i + 1} value={i + 1}>{i + 1}</option>\n// //                             ))}\n// //                         </select>\n// //                         <select className=\"m-2 h-100 w-20 bg-success text-white rounded\" ref={priceRef} onChange={handleOptions}>\n// //                             {priceOptions.map((option) => (\n// //                                 <option key={option} value={option}>{option}</option>\n// //                             ))}\n// //                         </select>\n// //                         <div className='d-inline ms-2 h-100 w-20 fs-5 text-white'>\n// //                             ₹{qty * (parseInt(options[size] || 0))}/-\n// //                         </div>\n// //                     </div>\n\n// //                     <hr className=\"bg-secondary\" />\n// //                     <button className='btn btn-success justify-center ms-2' onClick={handleAddtoCart}>Add to Cart</button>\n// //                 </div>\n// //             </div>\n// //         </div>\n// //     );\n// // }\n\n// import React, { useState, useRef, useEffect } from 'react';\n// import { useDispatchCart } from '../components/ContextReducer';\n\n// export default function Card(props) {\n//   const dispatch = useDispatchCart();\n//   const [qty, setQty] = useState(1);\n//   const [size, setSize] = useState('');\n//   const priceRef = useRef();\n\n//   const options = props.options || {}; // Ensure options is always an object\n//   const priceOptions = Object.keys(options);\n\n//   // Log props to see what is passed down\n//   useEffect(() => {\n//     console.log('Food Item Props:', props);\n//     console.log('Options:', options);\n//     console.log('Price Options:', priceOptions); // Log price options\n//   }, [props]);\n\n//   // Set default size when options are available\n//   useEffect(() => {\n//     if (priceOptions.length > 0 && !size) {\n//       setSize(priceOptions[0]); // Set the default size if no size is selected\n//       console.log('Setting default size:', priceOptions[0]); // Debug log\n//     }\n//   }, [priceOptions, size]);\n\n//   // Handle the change in quantity\n//   const handleQty = (e) => {\n//     setQty(e.target.value);\n//     console.log('Quantity selected:', e.target.value); // Debug log\n//   };\n\n//   // Handle the change in selected size\n//   const handleOptions = (e) => {\n//     setSize(e.target.value);\n//     console.log('Selected Size:', e.target.value); // Debug log\n//   };\n\n//   // Add the item to the cart\n//   const handleAddtoCart = () => {\n//     if (size) {\n//       const finalPrice = qty * (parseInt(options[size], 10) || 0); // Ensure price calculation is correct\n//       console.log('Final Price:', finalPrice); // Debug log\n//       dispatch({\n//         type: 'ADD',\n//         id: props.foodItem._id,\n//         name: props.foodItem.name,\n//         price: finalPrice,\n//         qty: qty,\n//         size: size,\n//       });\n//     } else {\n//       alert('Please select a size.');\n//     }\n//   };\n\n//   // Calculate the price based on the selected size and quantity\n//   const finalPrice = qty * (parseInt(options[size], 10) || 0);\n//   console.log('Calculated Final Price:', finalPrice); // Debug log\n\n//   return (\n//     <div>\n//       <div className=\"card mt-3 bg-dark text-light\" style={{ width: '18rem', maxHeight: '400px' }}>\n//         <img\n//           src={props.foodItem.img}\n//           className=\"card-img-top\"\n//           alt={props.foodItem.name}\n//           style={{ height: '120px', objectFit: 'cover' }}\n//         />\n//         <div className=\"card-body\">\n//           <h5 className=\"card-title\">{props.foodItem.name}</h5>\n//           <div className=\"container w-100 p-0\" style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n//             {/* Quantity Dropdown */}\n//             <select\n//               className=\"m-2 h-100 w-25 bg-success text-white rounded\"\n//               onChange={handleQty}\n//               value={qty}\n//             >\n//               {Array.from(Array(6), (e, i) => (\n//                 <option key={i + 1} value={i + 1}>\n//                   {i + 1}\n//                 </option>\n//               ))}\n//             </select>\n\n//             {/* Size Options Dropdown */}\n//             <select\n//               className=\"m-2 h-100 w-25 bg-success text-white rounded\"\n//               ref={priceRef}\n//               onChange={handleOptions}\n//               value={size}\n//               disabled={priceOptions.length === 0} // Disable size dropdown if no options\n//             >\n//               {priceOptions.length > 0 ? (\n//                 priceOptions.map((option) => (\n//                   <option key={option} value={option}>\n//                     {option}\n//                   </option>\n//                 ))\n//               ) : (\n//                 <option value=\"\">No Size Available</option>\n//               )}\n//             </select>\n\n//             {/* Price Display */}\n//             <div className=\"d-inline ms-2 h-100 w-25 fs-5 text-white text-center\">\n//               ₹{finalPrice || 0}/-\n//             </div>\n//           </div>\n\n//           <hr className=\"bg-secondary\" />\n\n//           {/* Disable Add to Cart button if no valid size or quantity */}\n//           <button\n//             className=\"btn btn-success w-100\"\n//             onClick={handleAddtoCart}\n//             disabled={!size || qty <= 0} // Disable if no size or quantity selected\n//           >\n//             Add to Cart\n//           </button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useDispatchCart } from '../components/ContextReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Card({\n  foodItem\n}) {\n  _s();\n  const dispatch = useDispatchCart();\n  const [qty, setQty] = useState(1);\n  const [size, setSize] = useState('');\n  const priceRef = useRef();\n  const options = foodItem.options || {};\n  const sizeOptions = Object.keys(options);\n  useEffect(() => {\n    if (sizeOptions.length > 0 && !size) {\n      setSize(sizeOptions[0]); // default to first size option\n    }\n  }, [sizeOptions, size]);\n  const handleQtyChange = e => setQty(e.target.value);\n  const handleSizeChange = e => setSize(e.target.value);\n  const handleAddToCart = () => {\n    if (size) {\n      const price = options[size] * qty;\n      dispatch({\n        type: 'ADD',\n        id: foodItem._id,\n        name: foodItem.name,\n        price: price,\n        qty: qty,\n        size: size\n      });\n    } else {\n      alert('Please select a size');\n    }\n  };\n  const finalPrice = options[size] * qty;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card mt-3 bg-dark text-light\",\n    style: {\n      width: '18rem',\n      maxHeight: '400px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: foodItem.imageUrl,\n      className: \"card-img-top\",\n      alt: foodItem.name,\n      style: {\n        height: '120px',\n        objectFit: 'cover'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: foodItem.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container w-100 p-0\",\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"m-2 h-100 w-25 bg-success text-white rounded\",\n          onChange: handleQtyChange,\n          value: qty,\n          children: Array.from({\n            length: 6\n          }, (_, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: index + 1,\n            children: index + 1\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"m-2 h-100 w-25 bg-success text-white rounded\",\n          ref: priceRef,\n          onChange: handleSizeChange,\n          value: size,\n          disabled: sizeOptions.length === 0,\n          children: sizeOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option,\n            children: option\n          }, option, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-inline ms-2 h-100 w-25 fs-5 text-white text-center\",\n          children: [\"\\u20B9\", finalPrice, \"/-\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"bg-secondary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success w-100\",\n        onClick: handleAddToCart,\n        disabled: qty <= 0 || !size,\n        children: \"Add to Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 5\n  }, this);\n}\n_s(Card, \"47RGi6AndH5HXx6qFoNG65W8Gg4=\", false, function () {\n  return [useDispatchCart];\n});\n_c = Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useDispatchCart","jsxDEV","_jsxDEV","Card","foodItem","_s","dispatch","qty","setQty","size","setSize","priceRef","options","sizeOptions","Object","keys","length","handleQtyChange","e","target","value","handleSizeChange","handleAddToCart","price","type","id","_id","name","alert","finalPrice","className","style","width","maxHeight","children","src","imageUrl","alt","height","objectFit","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","alignItems","onChange","Array","from","_","index","ref","disabled","map","option","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ruhan/Documents/gofood/mernapp/src/components/Card.js"],"sourcesContent":["// // import React, { useState, useRef, useEffect } from 'react';\n// // import { useDispatchCart, useCart } from '../components/ContextReducer';\n\n// // export default function Card(props) {\n// //     const dispatch = useDispatchCart();\n// //     const [qty, setQty] = useState(1);\n// //     const [size, setSize] = useState(\"\");\n// //     const priceRef = useRef();\n// //     const options = props.options || {}; \n// //     const priceOptions = Object.keys(options);\n// //     const data = useCart(); \n// //     useEffect(() => {\n// //         if (priceRef.current) {\n// //             setSize(priceRef.current.value);\n// //         }\n// //     }, [priceRef]);\n\n// //     const handleQty = (e) => {\n// //         setQty(e.target.value);\n// //     };\n\n// //     const handleOptions = (e) => {\n// //         setSize(e.target.value);\n// //     };\n\n// //     const handleAddtoCart = () => {\n// //         if (size) { \n// //             const finalPrice = qty * parseInt(options[size] || 0);\n// //             dispatch({\n// //                 type: \"ADD\",\n// //                 id: props.foodItem._id,\n// //                 name: props.foodItem.name,\n// //                 price: finalPrice,\n// //                 qty: qty,\n// //                 size: size\n// //             });\n// //             // console.log(data);\n// //         } else {\n// //             alert(\"Please select a size.\");\n// //         }\n// //     };\n\n// //     return (\n// //         <div>\n// //             <div className=\"card mt-3 bg-dark text-light\" style={{ width: \"16rem\", maxHeight: \"360px\" }}>\n// //                 <img src={props.foodItem.img} className=\"card-img-top\" alt={props.foodItem.name} style={{ height: \"120px\", objectFit: \"fill\" }} />\n// //                 <div className=\"card-body\">\n// //                     <h5 className=\"card-title\">{props.foodItem.name}</h5>\n// //                     <div className='container w-100 p-0' style={{ height: \"38px\" }}>\n// //                         <select className=\"m-2 h-100 w-20 bg-success text-white rounded\" onChange={handleQty} value={qty}>\n// //                             {Array.from(Array(6), (e, i) => (\n// //                                 <option key={i + 1} value={i + 1}>{i + 1}</option>\n// //                             ))}\n// //                         </select>\n// //                         <select className=\"m-2 h-100 w-20 bg-success text-white rounded\" ref={priceRef} onChange={handleOptions}>\n// //                             {priceOptions.map((option) => (\n// //                                 <option key={option} value={option}>{option}</option>\n// //                             ))}\n// //                         </select>\n// //                         <div className='d-inline ms-2 h-100 w-20 fs-5 text-white'>\n// //                             ₹{qty * (parseInt(options[size] || 0))}/-\n// //                         </div>\n// //                     </div>\n\n// //                     <hr className=\"bg-secondary\" />\n// //                     <button className='btn btn-success justify-center ms-2' onClick={handleAddtoCart}>Add to Cart</button>\n// //                 </div>\n// //             </div>\n// //         </div>\n// //     );\n// // }\n\n\n\n// import React, { useState, useRef, useEffect } from 'react';\n// import { useDispatchCart } from '../components/ContextReducer';\n\n// export default function Card(props) {\n//   const dispatch = useDispatchCart();\n//   const [qty, setQty] = useState(1);\n//   const [size, setSize] = useState('');\n//   const priceRef = useRef();\n\n//   const options = props.options || {}; // Ensure options is always an object\n//   const priceOptions = Object.keys(options);\n\n//   // Log props to see what is passed down\n//   useEffect(() => {\n//     console.log('Food Item Props:', props);\n//     console.log('Options:', options);\n//     console.log('Price Options:', priceOptions); // Log price options\n//   }, [props]);\n\n//   // Set default size when options are available\n//   useEffect(() => {\n//     if (priceOptions.length > 0 && !size) {\n//       setSize(priceOptions[0]); // Set the default size if no size is selected\n//       console.log('Setting default size:', priceOptions[0]); // Debug log\n//     }\n//   }, [priceOptions, size]);\n\n//   // Handle the change in quantity\n//   const handleQty = (e) => {\n//     setQty(e.target.value);\n//     console.log('Quantity selected:', e.target.value); // Debug log\n//   };\n\n//   // Handle the change in selected size\n//   const handleOptions = (e) => {\n//     setSize(e.target.value);\n//     console.log('Selected Size:', e.target.value); // Debug log\n//   };\n\n//   // Add the item to the cart\n//   const handleAddtoCart = () => {\n//     if (size) {\n//       const finalPrice = qty * (parseInt(options[size], 10) || 0); // Ensure price calculation is correct\n//       console.log('Final Price:', finalPrice); // Debug log\n//       dispatch({\n//         type: 'ADD',\n//         id: props.foodItem._id,\n//         name: props.foodItem.name,\n//         price: finalPrice,\n//         qty: qty,\n//         size: size,\n//       });\n//     } else {\n//       alert('Please select a size.');\n//     }\n//   };\n\n//   // Calculate the price based on the selected size and quantity\n//   const finalPrice = qty * (parseInt(options[size], 10) || 0);\n//   console.log('Calculated Final Price:', finalPrice); // Debug log\n\n//   return (\n//     <div>\n//       <div className=\"card mt-3 bg-dark text-light\" style={{ width: '18rem', maxHeight: '400px' }}>\n//         <img\n//           src={props.foodItem.img}\n//           className=\"card-img-top\"\n//           alt={props.foodItem.name}\n//           style={{ height: '120px', objectFit: 'cover' }}\n//         />\n//         <div className=\"card-body\">\n//           <h5 className=\"card-title\">{props.foodItem.name}</h5>\n//           <div className=\"container w-100 p-0\" style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n//             {/* Quantity Dropdown */}\n//             <select\n//               className=\"m-2 h-100 w-25 bg-success text-white rounded\"\n//               onChange={handleQty}\n//               value={qty}\n//             >\n//               {Array.from(Array(6), (e, i) => (\n//                 <option key={i + 1} value={i + 1}>\n//                   {i + 1}\n//                 </option>\n//               ))}\n//             </select>\n\n//             {/* Size Options Dropdown */}\n//             <select\n//               className=\"m-2 h-100 w-25 bg-success text-white rounded\"\n//               ref={priceRef}\n//               onChange={handleOptions}\n//               value={size}\n//               disabled={priceOptions.length === 0} // Disable size dropdown if no options\n//             >\n//               {priceOptions.length > 0 ? (\n//                 priceOptions.map((option) => (\n//                   <option key={option} value={option}>\n//                     {option}\n//                   </option>\n//                 ))\n//               ) : (\n//                 <option value=\"\">No Size Available</option>\n//               )}\n//             </select>\n\n//             {/* Price Display */}\n//             <div className=\"d-inline ms-2 h-100 w-25 fs-5 text-white text-center\">\n//               ₹{finalPrice || 0}/-\n//             </div>\n//           </div>\n\n//           <hr className=\"bg-secondary\" />\n\n//           {/* Disable Add to Cart button if no valid size or quantity */}\n//           <button\n//             className=\"btn btn-success w-100\"\n//             onClick={handleAddtoCart}\n//             disabled={!size || qty <= 0} // Disable if no size or quantity selected\n//           >\n//             Add to Cart\n//           </button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useDispatchCart } from '../components/ContextReducer';\n\nexport default function Card({ foodItem }) {\n  const dispatch = useDispatchCart();\n  const [qty, setQty] = useState(1);\n  const [size, setSize] = useState('');\n  const priceRef = useRef();\n  const options = foodItem.options || {};\n  const sizeOptions = Object.keys(options);\n\n  useEffect(() => {\n    if (sizeOptions.length > 0 && !size) {\n      setSize(sizeOptions[0]); // default to first size option\n    }\n  }, [sizeOptions, size]);\n\n  const handleQtyChange = (e) => setQty(e.target.value);\n  const handleSizeChange = (e) => setSize(e.target.value);\n\n  const handleAddToCart = () => {\n    if (size) {\n      const price = options[size] * qty;\n      dispatch({\n        type: 'ADD',\n        id: foodItem._id,\n        name: foodItem.name,\n        price: price,\n        qty: qty,\n        size: size,\n      });\n    } else {\n      alert('Please select a size');\n    }\n  };\n\n  const finalPrice = options[size] * qty;\n\n  return (\n    <div className=\"card mt-3 bg-dark text-light\" style={{ width: '18rem', maxHeight: '400px' }}>\n      <img\n        src={foodItem.imageUrl}\n        className=\"card-img-top\"\n        alt={foodItem.name}\n        style={{ height: '120px', objectFit: 'cover' }}\n      />\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{foodItem.name}</h5>\n        <div className=\"container w-100 p-0\" style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n          <select className=\"m-2 h-100 w-25 bg-success text-white rounded\" onChange={handleQtyChange} value={qty}>\n            {Array.from({ length: 6 }, (_, index) => (\n              <option key={index} value={index + 1}>\n                {index + 1}\n              </option>\n            ))}\n          </select>\n\n          <select\n            className=\"m-2 h-100 w-25 bg-success text-white rounded\"\n            ref={priceRef}\n            onChange={handleSizeChange}\n            value={size}\n            disabled={sizeOptions.length === 0}\n          >\n            {sizeOptions.map((option) => (\n              <option key={option} value={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n\n          <div className=\"d-inline ms-2 h-100 w-25 fs-5 text-white text-center\">\n            ₹{finalPrice}/-\n          </div>\n        </div>\n\n        <hr className=\"bg-secondary\" />\n        <button\n          className=\"btn btn-success w-100\"\n          onClick={handleAddToCart}\n          disabled={qty <= 0 || !size}\n        >\n          Add to Cart\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,eAAe,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,eAAe,SAASC,IAAIA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAMC,QAAQ,GAAGN,eAAe,CAAC,CAAC;EAClC,MAAM,CAACO,GAAG,EAAEC,MAAM,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACjC,MAAM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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}