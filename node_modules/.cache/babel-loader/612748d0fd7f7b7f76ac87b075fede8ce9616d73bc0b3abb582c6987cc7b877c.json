{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruhan\\\\Documents\\\\gofood\\\\mernapp\\\\src\\\\components\\\\Card.js\",\n  _s = $RefreshSig$();\n// // import React from 'react'\n// // import { useNavigate } from 'react-router-dom'\n// // import { useDispatchCart, useCart } from './ContextReducer'\n// // import { Dropdown, DropdownButton } from 'react-bootstrap';\n// // export default function Card(props) {\n// //   let data = useCart();\n\n// //   let navigate = useNavigate()\n// //   const [qty, setQty] = useState(1)\n// //   const [size, setSize] = useState(\"\")\n// //   const priceRef = useRef();\n// //   // const [btnEnable, setBtnEnable] = useState(false);\n// //   // let totval = 0\n// //   // let price = Object.values(options).map((value) => {\n// //   //   return parseInt(value, 10);\n// //   // });\n// //   let options = props.options;\n// //   let priceOptions = Object.keys(options);\n// //   let foodItem = props.item;\n// //   const dispatch = useDispatchCart();\n// //   const handleClick = () => {\n// //     if (!localStorage.getItem(\"token\")) {\n// //       navigate(\"/login\")\n// //     }\n// //   }\n// //   const handleQty = (e) => {\n// //     setQty(e.target.value);\n// //   }\n// //   const handleOptions = (e) => {\n// //     setSize(e.target.value);\n// //   }\n// //   const handleAddToCart = async () => {\n// //     let food = []\n// //     for (const item of data) {\n// //       if (item.id === foodItem._id) {\n// //         food = item;\n\n// //         break;\n// //       }\n// //     }\n// //     console.log(food)\n// //     console.log(new Date())\n// //     if (food !== []) {\n// //       if (food.size === size) {\n// //         await dispatch({ type: \"UPDATE\", id: foodItem._id, price: finalPrice, qty: qty })\n// //         return\n// //       }\n// //       else if (food.size !== size) {\n// //         await dispatch({ type: \"ADD\", id: foodItem._id, name: foodItem.name, price: finalPrice, qty: qty, size: size,img: props.ImgSrc })\n// //         console.log(\"Size different so simply ADD one more to the list\")\n// //         return\n// //       }\n// //       return\n// //     }\n\n// //     await dispatch({ type: \"ADD\", id: foodItem._id, name: foodItem.name, price: finalPrice, qty: qty, size: size })\n\n// //     // setBtnEnable(true)\n\n// //   }\n\n// //   useEffect(() => {\n// //     setSize(priceRef.current.value)\n// //   }, [])\n\n// //   // useEffect(()=>{\n// //   // checkBtn();\n// //   //   },[data])\n\n// //   let finalPrice = qty * parseInt(options[size]);   //This is where Price is changing\n// //   // totval += finalPrice;\n//   // console.log(totval)\n// //   return (\n// //     <div>\n// //     </div>\n// //   )\n// // }\n// // //\n// import React from 'react';\n\n// export default function Card(props) {\n//   const { options, foodName, img } = props;\n//   const sizeOptions = ['Half', 'Full']; // Options for size\n//   const quantityOptions = Array.from(Array(6), (e, i) => i + 1); // Quantity options from 1 to 6\n\n//   // Default image if none is provided\n//   const imageUrl = img || \"/path/to/default-image.jpeg\";\n\n//   return (\n//     <div className=\"card mt-3\" style={{ width: \"18rem\", maxHeight: \"360px\" }}>\n//       <img src={imageUrl} className=\"card-img-top\" alt={foodName} />\n//       <div className=\"card-body\">\n//         <h5 className=\"card-title\">{foodName}</h5>\n//         <div className=\"container w-100\">\n//           {/* Dropdown for size options (e.g., Half, Full) */}\n//           <div className='mb-3'>\n//             <label htmlFor=\"sizeOptions\" className=\"form-label\">Size</label>\n//             <select id=\"sizeOptions\" className='form-select bg-success text-white rounded'>\n//               {sizeOptions.map((size) => (\n//                 <option key={size} value={size}>{size}</option>\n//               ))}\n//             </select>\n//           </div>\n\n//           {/* Dropdown for quantity options (e.g., number of items) */}\n//           <div className='mb-3'>\n//             <label htmlFor=\"quantity\" className=\"form-label\">Quantity</label>\n//             <select id=\"quantity\" className='form-select bg-success text-white rounded'>\n//               {quantityOptions.map((quantity) => (\n//                 <option key={quantity} value={quantity}>{quantity}</option>\n//               ))}\n//             </select>\n//           </div>\n\n//           <div className='d-inline h-100 fs-5'>Total Price</div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// import React, { useState, useRef, useEffect } from 'react'\n// import { useNavigate } from 'react-router-dom'\n// import { useDispatchCart, useCart } from './ContextReducer'\n// // import { Dropdown, DropdownButton } from 'react-bootstrap';\n// export default function Card(props) {\n//   // let data = useCart();\n\n//   // let navigate = useNavigate()\n//   // const [qty, setQty] = useState(1)\n//   // const [size, setSize] = useState(\"\")\n//   // const priceRef = useRef();\n//   // const [btnEnable, setBtnEnable] = useState(false);\n//   // let totval = 0\n//   // let price = Object.values(options).map((value) => {\n//   //   return parseInt(value, 10);\n//   // });\n//   let options = props.options;\n//   let priceOptions = Object.keys(options);\n//   let foodItem = props.item;\n//   const dispatch = useDispatchCart();\n//   const handleClick = () => {\n//     if (!localStorage.getItem(\"token\")) {\n//       navigate(\"/login\")\n//     }\n//   }\n//   const handleQty = (e) => {\n//     setQty(e.target.value);\n//   }\n//   const handleOptions = (e) => {\n//     setSize(e.target.value);\n//   }\n//   // const handleAddToCart = async () => {\n//   //   let food = []\n//   //   for (const item of data) {\n//   //     if (item.id === foodItem._id) {\n//   //       food = item;\n\n//   //       break;\n//   //     }\n//   //   }\n//     console.log(food)\n//     console.log(new Date())\n//     if (food !== []) {\n//       if (food.size === size) {\n//         await dispatch({ type: \"UPDATE\", id: foodItem._id, price: finalPrice, qty: qty })\n//         return\n//       }\n//       else if (food.size !== size) {\n//         await dispatch({ type: \"ADD\", id: foodItem._id, name: foodItem.name, price: finalPrice, qty: qty, size: size,img: props.ImgSrc })\n//         console.log(\"Size different so simply ADD one more to the list\")\n//         return\n//       }\n//       return\n//     }\n\n//     await dispatch({ type: \"ADD\", id: foodItem._id, name: foodItem.name, price: finalPrice, qty: qty, size: size })\n\n//     // setBtnEnable(true)\n\n//   }\n\n//   useEffect(() => {\n//     setSize(priceRef.current.value)\n//   }, [])\n\n//   // useEffect(()=>{\n//   // checkBtn();\n//   //   },[data])\n\n//   let finalPrice = qty * parseInt(options[size]);   //This is where Price is changing\n//   // totval += finalPrice;\n//   // console.log(totval)\n//   return (\n//     <div>\n\n//       <div className=\"card mt-3\" style={{ width: \"16rem\", maxHeight: \"360px\" }}>\n//         <img src={props.ImgSrc} className=\"card-img-top\" alt=\"...\" style={{ height: \"120px\", objectFit: \"fill\" }} />\n//         <div className=\"card-body\">\n//           <h5 className=\"card-title\">{props.foodName}</h5>\n//           {/* <p className=\"card-text\">This is some random text. This is description.</p> */}\n//           <div className='container w-100 p-0' style={{ height: \"38px\" }}>\n//             <select className=\"m-2 h-100 w-20 bg-success text-black rounded\" style={{ select: \"#FF0000\" }} onClick={handleClick} onChange={handleQty}>\n//               {Array.from(Array(6), (e, i) => {\n//                 return (\n//                   <option key={i + 1} value={i + 1}>{i + 1}</option>)\n//               })}\n//             </select>\n//             <select className=\"m-2 h-100 w-20 bg-success text-black rounded\" style={{ select: \"#FF0000\" }} ref={priceRef} onClick={handleClick} onChange={handleOptions}>\n//               {priceOptions.map((i) => {\n//                 return <option key={i} value={i}>{i}</option>\n//               })}\n//             </select>\n//             <div className=' d-inline ms-2 h-100 w-20 fs-5' >\n//               â‚¹{finalPrice}/-\n//             </div>\n//           </div>\n//           <hr></hr>\n//           <button className={`btn btn-success justify-center ms-2 `} onClick={handleAddToCart}>Add to Cart</button>\n//           {/* <button className={`btn btn-danger justify-center ms-2 ${btnEnable ? \"\" : \"disabled\"}`} onClick={handleRemoveCart}>Remove</button> */}\n//         </div>\n//       </div>\n//     </div>\n//   )\n// }\n// //\n\nimport React, { useEffect, useState } from 'react';\nimport Card from './Card'; // Ensure the path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExampleComponent = () => {\n  _s();\n  const [foodItems, setFoodItems] = useState([]);\n  useEffect(() => {\n    // Function to fetch food items\n    const fetchFoodItems = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/api/foodData\", {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const data = await response.json();\n        // Assuming data[0] contains the food items\n        setFoodItems(data[0] || []);\n      } catch (error) {\n        console.error(\"Error loading food items:\", error);\n      }\n    };\n    fetchFoodItems();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-wrap\",\n    children: foodItems.length > 0 ? foodItems.map(item => /*#__PURE__*/_jsxDEV(Card, {\n      // Ensure each item has a unique ID\n      foodName: item.name,\n      ImgSrc: item.img\n    }, item._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No food items available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 265,\n    columnNumber: 5\n  }, this);\n};\n_s(ExampleComponent, \"ZKprX7WKsOS4Up638BSDGaVONAw=\");\n_c = ExampleComponent;\nexport default ExampleComponent;\nvar _c;\n$RefreshReg$(_c, \"ExampleComponent\");","map":{"version":3,"names":["React","useEffect","useState","Card","jsxDEV","_jsxDEV","ExampleComponent","_s","foodItems","setFoodItems","fetchFoodItems","response","fetch","method","headers","ok","Error","status","data","json","error","console","className","children","length","map","item","foodName","name","ImgSrc","img","_id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ruhan/Documents/gofood/mernapp/src/components/Card.js"],"sourcesContent":["\n// // import React from 'react'\n// // import { useNavigate } from 'react-router-dom'\n// // import { useDispatchCart, useCart } from './ContextReducer'\n// // import { Dropdown, DropdownButton } from 'react-bootstrap';\n// // export default function Card(props) {\n// //   let data = useCart();\n\n// //   let navigate = useNavigate()\n// //   const [qty, setQty] = useState(1)\n// //   const [size, setSize] = useState(\"\")\n// //   const priceRef = useRef();\n// //   // const [btnEnable, setBtnEnable] = useState(false);\n// //   // let totval = 0\n// //   // let price = Object.values(options).map((value) => {\n// //   //   return parseInt(value, 10);\n// //   // });\n// //   let options = props.options;\n// //   let priceOptions = Object.keys(options);\n// //   let foodItem = props.item;\n// //   const dispatch = useDispatchCart();\n// //   const handleClick = () => {\n// //     if (!localStorage.getItem(\"token\")) {\n// //       navigate(\"/login\")\n// //     }\n// //   }\n// //   const handleQty = (e) => {\n// //     setQty(e.target.value);\n// //   }\n// //   const handleOptions = (e) => {\n// //     setSize(e.target.value);\n// //   }\n// //   const handleAddToCart = async () => {\n// //     let food = []\n// //     for (const item of data) {\n// //       if (item.id === foodItem._id) {\n// //         food = item;\n\n// //         break;\n// //       }\n// //     }\n// //     console.log(food)\n// //     console.log(new Date())\n// //     if (food !== []) {\n// //       if (food.size === size) {\n// //         await dispatch({ type: \"UPDATE\", id: foodItem._id, price: finalPrice, qty: qty })\n// //         return\n// //       }\n// //       else if (food.size !== size) {\n// //         await dispatch({ type: \"ADD\", id: foodItem._id, name: foodItem.name, price: finalPrice, qty: qty, size: size,img: props.ImgSrc })\n// //         console.log(\"Size different so simply ADD one more to the list\")\n// //         return\n// //       }\n// //       return\n// //     }\n\n// //     await dispatch({ type: \"ADD\", id: foodItem._id, name: foodItem.name, price: finalPrice, qty: qty, size: size })\n\n\n// //     // setBtnEnable(true)\n\n// //   }\n\n// //   useEffect(() => {\n// //     setSize(priceRef.current.value)\n// //   }, [])\n\n// //   // useEffect(()=>{\n// //   // checkBtn();\n// //   //   },[data])\n\n// //   let finalPrice = qty * parseInt(options[size]);   //This is where Price is changing\n// //   // totval += finalPrice;\n//   // console.log(totval)\n// //   return (\n// //     <div>\n// //     </div>\n// //   )\n// // }\n// // //\n// import React from 'react';\n\n// export default function Card(props) {\n//   const { options, foodName, img } = props;\n//   const sizeOptions = ['Half', 'Full']; // Options for size\n//   const quantityOptions = Array.from(Array(6), (e, i) => i + 1); // Quantity options from 1 to 6\n\n//   // Default image if none is provided\n//   const imageUrl = img || \"/path/to/default-image.jpeg\";\n\n//   return (\n//     <div className=\"card mt-3\" style={{ width: \"18rem\", maxHeight: \"360px\" }}>\n//       <img src={imageUrl} className=\"card-img-top\" alt={foodName} />\n//       <div className=\"card-body\">\n//         <h5 className=\"card-title\">{foodName}</h5>\n//         <div className=\"container w-100\">\n//           {/* Dropdown for size options (e.g., Half, Full) */}\n//           <div className='mb-3'>\n//             <label htmlFor=\"sizeOptions\" className=\"form-label\">Size</label>\n//             <select id=\"sizeOptions\" className='form-select bg-success text-white rounded'>\n//               {sizeOptions.map((size) => (\n//                 <option key={size} value={size}>{size}</option>\n//               ))}\n//             </select>\n//           </div>\n\n//           {/* Dropdown for quantity options (e.g., number of items) */}\n//           <div className='mb-3'>\n//             <label htmlFor=\"quantity\" className=\"form-label\">Quantity</label>\n//             <select id=\"quantity\" className='form-select bg-success text-white rounded'>\n//               {quantityOptions.map((quantity) => (\n//                 <option key={quantity} value={quantity}>{quantity}</option>\n//               ))}\n//             </select>\n//           </div>\n\n//           <div className='d-inline h-100 fs-5'>Total Price</div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n\n// import React, { useState, useRef, useEffect } from 'react'\n// import { useNavigate } from 'react-router-dom'\n// import { useDispatchCart, useCart } from './ContextReducer'\n// // import { Dropdown, DropdownButton } from 'react-bootstrap';\n// export default function Card(props) {\n//   // let data = useCart();\n\n//   // let navigate = useNavigate()\n//   // const [qty, setQty] = useState(1)\n//   // const [size, setSize] = useState(\"\")\n//   // const priceRef = useRef();\n//   // const [btnEnable, setBtnEnable] = useState(false);\n//   // let totval = 0\n//   // let price = Object.values(options).map((value) => {\n//   //   return parseInt(value, 10);\n//   // });\n//   let options = props.options;\n//   let priceOptions = Object.keys(options);\n//   let foodItem = props.item;\n//   const dispatch = useDispatchCart();\n//   const handleClick = () => {\n//     if (!localStorage.getItem(\"token\")) {\n//       navigate(\"/login\")\n//     }\n//   }\n//   const handleQty = (e) => {\n//     setQty(e.target.value);\n//   }\n//   const handleOptions = (e) => {\n//     setSize(e.target.value);\n//   }\n//   // const handleAddToCart = async () => {\n//   //   let food = []\n//   //   for (const item of data) {\n//   //     if (item.id === foodItem._id) {\n//   //       food = item;\n\n//   //       break;\n//   //     }\n//   //   }\n//     console.log(food)\n//     console.log(new Date())\n//     if (food !== []) {\n//       if (food.size === size) {\n//         await dispatch({ type: \"UPDATE\", id: foodItem._id, price: finalPrice, qty: qty })\n//         return\n//       }\n//       else if (food.size !== size) {\n//         await dispatch({ type: \"ADD\", id: foodItem._id, name: foodItem.name, price: finalPrice, qty: qty, size: size,img: props.ImgSrc })\n//         console.log(\"Size different so simply ADD one more to the list\")\n//         return\n//       }\n//       return\n//     }\n\n//     await dispatch({ type: \"ADD\", id: foodItem._id, name: foodItem.name, price: finalPrice, qty: qty, size: size })\n\n\n//     // setBtnEnable(true)\n\n//   }\n\n//   useEffect(() => {\n//     setSize(priceRef.current.value)\n//   }, [])\n\n//   // useEffect(()=>{\n//   // checkBtn();\n//   //   },[data])\n\n//   let finalPrice = qty * parseInt(options[size]);   //This is where Price is changing\n//   // totval += finalPrice;\n//   // console.log(totval)\n//   return (\n//     <div>\n\n//       <div className=\"card mt-3\" style={{ width: \"16rem\", maxHeight: \"360px\" }}>\n//         <img src={props.ImgSrc} className=\"card-img-top\" alt=\"...\" style={{ height: \"120px\", objectFit: \"fill\" }} />\n//         <div className=\"card-body\">\n//           <h5 className=\"card-title\">{props.foodName}</h5>\n//           {/* <p className=\"card-text\">This is some random text. This is description.</p> */}\n//           <div className='container w-100 p-0' style={{ height: \"38px\" }}>\n//             <select className=\"m-2 h-100 w-20 bg-success text-black rounded\" style={{ select: \"#FF0000\" }} onClick={handleClick} onChange={handleQty}>\n//               {Array.from(Array(6), (e, i) => {\n//                 return (\n//                   <option key={i + 1} value={i + 1}>{i + 1}</option>)\n//               })}\n//             </select>\n//             <select className=\"m-2 h-100 w-20 bg-success text-black rounded\" style={{ select: \"#FF0000\" }} ref={priceRef} onClick={handleClick} onChange={handleOptions}>\n//               {priceOptions.map((i) => {\n//                 return <option key={i} value={i}>{i}</option>\n//               })}\n//             </select>\n//             <div className=' d-inline ms-2 h-100 w-20 fs-5' >\n//               â‚¹{finalPrice}/-\n//             </div>\n//           </div>\n//           <hr></hr>\n//           <button className={`btn btn-success justify-center ms-2 `} onClick={handleAddToCart}>Add to Cart</button>\n//           {/* <button className={`btn btn-danger justify-center ms-2 ${btnEnable ? \"\" : \"disabled\"}`} onClick={handleRemoveCart}>Remove</button> */}\n//         </div>\n//       </div>\n//     </div>\n//   )\n// }\n// //\n\nimport React, { useEffect, useState } from 'react';\nimport Card from './Card'; // Ensure the path is correct\n\nconst ExampleComponent = () => {\n  const [foodItems, setFoodItems] = useState([]);\n\n  useEffect(() => {\n    // Function to fetch food items\n    const fetchFoodItems = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/api/foodData\", {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        });\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n\n        const data = await response.json();\n        // Assuming data[0] contains the food items\n        setFoodItems(data[0] || []);\n      } catch (error) {\n        console.error(\"Error loading food items:\", error);\n      }\n    };\n\n    fetchFoodItems();\n  }, []);\n\n  return (\n    <div className=\"d-flex flex-wrap\">\n      {foodItems.length > 0 ? (\n        foodItems.map(item => (\n          <Card\n            key={item._id} // Ensure each item has a unique ID\n            foodName={item.name}\n            ImgSrc={item.img}\n          />\n        ))\n      ) : (\n        <div>No food items available</div>\n      )}\n    </div>\n  );\n};\n\nexport default ExampleComponent;\n\n"],"mappings":";;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;UACjEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QAEF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBL,QAAQ,CAACM,MAAM,EAAE,CAAC;QAC3D;QAEA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAClC;QACAV,YAAY,CAACS,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;MAC7B,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAEDV,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKiB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,EAC9Bf,SAAS,CAACgB,MAAM,GAAG,CAAC,GACnBhB,SAAS,CAACiB,GAAG,CAACC,IAAI,iBAChBrB,OAAA,CAACF,IAAI;MACY;MACfwB,QAAQ,EAAED,IAAI,CAACE,IAAK;MACpBC,MAAM,EAAEH,IAAI,CAACI;IAAI,GAFZJ,IAAI,CAACK,GAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGd,CACF,CAAC,gBAEF9B,OAAA;MAAAkB,QAAA,EAAK;IAAuB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAClC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC5B,EAAA,CA5CID,gBAAgB;AAAA8B,EAAA,GAAhB9B,gBAAgB;AA8CtB,eAAeA,gBAAgB;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}