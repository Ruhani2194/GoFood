{"ast":null,"code":"// // import React, { useEffect, useState } from 'react';\n// // import Card from '../components/Card';\n// // import Carousel from '../components/Carousel';\n// // import Footer from '../components/Footer';\n// // import Navbar from '../components/Navbar';\n\n// // export default function Home() {\n// //   const [foodCat, setFoodCat] = useState([]); // Ensure it's an empty array\n// //   const [foodItems, setFoodItems] = useState([]); // Ensure it's an empty array\n// //   const [search, setSearch] = useState('');\n// //   const [loading, setLoading] = useState(true); // Add loading state\n\n// //   const loadFoodItems = async () => {\n// //     setLoading(true); // Set loading to true when fetching starts\n// //     try {\n// //       let response = await fetch(\"http://localhost:5000/api/foodData\", {\n// //         method: 'POST',\n// //         headers: {\n// //           'Content-Type': 'application/json',\n// //         },\n// //       });\n\n// //       if (!response.ok) {\n// //         throw new Error(`HTTP error! Status: ${response.status}`);\n// //       }\n\n// //       let data = await response.json();\n// //       console.log(\"API Response:\", data);\n\n// //       if (Array.isArray(data) && data.length === 2) {\n// //         setFoodItems(data[0] || []);\n// //         setFoodCat(data[1] || []);\n// //       } else {\n// //         console.error(\"Unexpected response format:\", data);\n// //       }\n// //     } catch (error) {\n// //       console.error(\"Error loading food items:\", error);\n// //     } finally {\n// //       setLoading(false); // Set loading to false after fetching completes\n// //     }\n// //   };\n\n// //   useEffect(() => {\n// //     loadFoodItems();\n// //   }, []);\n\n// //   return (\n// //     <div>\n// //       <Navbar />\n// //       <Carousel />\n// //       <div className='container'>\n// //         {loading ? (\n// //           <div>Loading...</div> // Display loading state\n// //         ) : foodCat.length > 0 ? (\n// //           foodCat.map((data) => {\n// //             return (\n// //               <div className='row mb-3' key={data.id}>\n// //                 <div className='fs-3 m-3'>\n// //                   {data.CategoryName}\n// //                 </div>\n// //                 <hr id=\"hr-success\" style={{ height: \"4px\", backgroundImage: \"-webkit-linear-gradient(left,rgb(0, 255, 137),rgb(0, 0, 0))\" }} />\n// //                 {foodItems.length > 0 ? foodItems.filter(\n// //                   (item) => item.CategoryName === data.CategoryName && item.name.toLowerCase().includes(search.toLowerCase())\n// //                 ).map(filterItems => {\n// //                   return (\n// //                     <div key={filterItems.id} className='col-12 col-md-6 col-lg-3'>\n// //                       <Card foodName={filterItems.name} item={filterItems} options={filterItems.options[0]} ImgSrc={filterItems.img} />\n// //                     </div>\n// //                   );\n// //                 }) : <div>No Such Data</div>}\n// //               </div>\n// //             );\n// //           })\n// //         ) : (\n// //           <div>No Categories Available</div>\n// //         )}\n// //       </div>\n// //       <Footer />\n// //     </div>\n// //   );\n// // }\n\n// import React, { useEffect, useState } from 'react';\n// import Card from '../components/Card';\n// import Carousel from '../components/Carousel';\n// import Footer from '../components/Footer';\n// import Navbar from '../components/Navbar';\n\n// export default function Home() {\n//   const [foodCat, setFoodCat] = useState([]); // Food categories\n//   const [foodItems, setFoodItems] = useState([]); // Food items\n//   const [search, setSearch] = useState(''); // Search term\n//   const [loading, setLoading] = useState(true); // Loading state\n\n//   const loadFoodItems = async () => {\n//     setLoading(true); // Set loading to true when fetching starts\n//     try {\n//       let response = await fetch(\"http://localhost:5000/api/foodData\", {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! Status: ${response.status}`);\n//       }\n\n//       let data = await response.json();\n//       console.log(\"API Response:\", data);\n\n//       if (Array.isArray(data) && data.length === 2) {\n//         setFoodItems(data[0] || []);\n//         setFoodCat(data[1] || []);\n//       } else {\n//         console.error(\"Unexpected response format:\", data);\n//       }\n//     } catch (error) {\n//       console.error(\"Error loading food items:\", error);\n//     } finally {\n//       setLoading(false); // Set loading to false after fetching completes\n//     }\n//   };\n\n//   useEffect(() => {\n//     loadFoodItems();\n//   }, []);\n\n//   const handleSearchChange = (e) => {\n//     setSearch(e.target.value);\n//   };\n\n//   const filteredFoodItems = foodItems.filter(item =>\n//     item.name.toLowerCase().includes(search.toLowerCase())\n//   );\n\n//   return (\n//     <div>\n//       <Navbar />\n//       <Carousel />\n//       <div className='container'>\n//         <div className='my-3'>\n//           {/* Search bar */}\n//           <form className=\"d-flex justify-content-center mb-3\">\n//             <input \n//               className=\"form-control me-2 w-75 bg-white text-dark\" \n//               type=\"search\" \n//               placeholder=\"Type in...\" \n//               aria-label=\"Search\"\n//               value={search}\n//               onChange={handleSearchChange} // Update search state\n//             />\n//             <button className=\"btn text-white bg-success\" type=\"button\" onClick={(e) => e.preventDefault()}>Search</button>\n//           </form>\n//         </div>\n\n//         {loading ? (\n//           <div>Loading...</div> // Display loading state\n//         ) : foodCat.length > 0 ? (\n//           foodCat.map((data) => (\n//             <div className='row mb-3' key={data.id}>\n//               <div className='fs-3 m-3'>\n//                 {data.CategoryName}\n//               </div>\n//               <hr id=\"hr-success\" style={{ height: \"4px\", backgroundImage: \"-webkit-linear-gradient(left,rgb(0, 255, 137),rgb(0, 0, 0))\" }} />\n//               {filteredFoodItems.length > 0 ? filteredFoodItems\n//                 .filter(item => item.CategoryName === data.CategoryName)\n//                 .map(filteredItem => (\n//                   <div key={filteredItem.id} className='col-12 col-md-6 col-lg-3'>\n//                     <Card \n//                       foodName={filteredItem.name} \n//                       item={filteredItem} \n//                       options={filteredItem.options[0]} \n//                       ImgSrc={filteredItem.img} \n//                     />\n//                   </div>\n//                 )) \n//                 : <div>No Such Data</div>}\n//             </div>\n//           ))\n//         ) : (\n//           <div>No Categories Available</div>\n//         )}\n//       </div>\n//       <Footer />\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/ruhan/Documents/gofood/mernapp/src/screens/Home.js"],"sourcesContent":["// // import React, { useEffect, useState } from 'react';\n// // import Card from '../components/Card';\n// // import Carousel from '../components/Carousel';\n// // import Footer from '../components/Footer';\n// // import Navbar from '../components/Navbar';\n\n// // export default function Home() {\n// //   const [foodCat, setFoodCat] = useState([]); // Ensure it's an empty array\n// //   const [foodItems, setFoodItems] = useState([]); // Ensure it's an empty array\n// //   const [search, setSearch] = useState('');\n// //   const [loading, setLoading] = useState(true); // Add loading state\n\n// //   const loadFoodItems = async () => {\n// //     setLoading(true); // Set loading to true when fetching starts\n// //     try {\n// //       let response = await fetch(\"http://localhost:5000/api/foodData\", {\n// //         method: 'POST',\n// //         headers: {\n// //           'Content-Type': 'application/json',\n// //         },\n// //       });\n\n// //       if (!response.ok) {\n// //         throw new Error(`HTTP error! Status: ${response.status}`);\n// //       }\n\n// //       let data = await response.json();\n// //       console.log(\"API Response:\", data);\n\n// //       if (Array.isArray(data) && data.length === 2) {\n// //         setFoodItems(data[0] || []);\n// //         setFoodCat(data[1] || []);\n// //       } else {\n// //         console.error(\"Unexpected response format:\", data);\n// //       }\n// //     } catch (error) {\n// //       console.error(\"Error loading food items:\", error);\n// //     } finally {\n// //       setLoading(false); // Set loading to false after fetching completes\n// //     }\n// //   };\n\n// //   useEffect(() => {\n// //     loadFoodItems();\n// //   }, []);\n\n// //   return (\n// //     <div>\n// //       <Navbar />\n// //       <Carousel />\n// //       <div className='container'>\n// //         {loading ? (\n// //           <div>Loading...</div> // Display loading state\n// //         ) : foodCat.length > 0 ? (\n// //           foodCat.map((data) => {\n// //             return (\n// //               <div className='row mb-3' key={data.id}>\n// //                 <div className='fs-3 m-3'>\n// //                   {data.CategoryName}\n// //                 </div>\n// //                 <hr id=\"hr-success\" style={{ height: \"4px\", backgroundImage: \"-webkit-linear-gradient(left,rgb(0, 255, 137),rgb(0, 0, 0))\" }} />\n// //                 {foodItems.length > 0 ? foodItems.filter(\n// //                   (item) => item.CategoryName === data.CategoryName && item.name.toLowerCase().includes(search.toLowerCase())\n// //                 ).map(filterItems => {\n// //                   return (\n// //                     <div key={filterItems.id} className='col-12 col-md-6 col-lg-3'>\n// //                       <Card foodName={filterItems.name} item={filterItems} options={filterItems.options[0]} ImgSrc={filterItems.img} />\n// //                     </div>\n// //                   );\n// //                 }) : <div>No Such Data</div>}\n// //               </div>\n// //             );\n// //           })\n// //         ) : (\n// //           <div>No Categories Available</div>\n// //         )}\n// //       </div>\n// //       <Footer />\n// //     </div>\n// //   );\n// // }\n\n// import React, { useEffect, useState } from 'react';\n// import Card from '../components/Card';\n// import Carousel from '../components/Carousel';\n// import Footer from '../components/Footer';\n// import Navbar from '../components/Navbar';\n\n// export default function Home() {\n//   const [foodCat, setFoodCat] = useState([]); // Food categories\n//   const [foodItems, setFoodItems] = useState([]); // Food items\n//   const [search, setSearch] = useState(''); // Search term\n//   const [loading, setLoading] = useState(true); // Loading state\n\n//   const loadFoodItems = async () => {\n//     setLoading(true); // Set loading to true when fetching starts\n//     try {\n//       let response = await fetch(\"http://localhost:5000/api/foodData\", {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! Status: ${response.status}`);\n//       }\n\n//       let data = await response.json();\n//       console.log(\"API Response:\", data);\n\n//       if (Array.isArray(data) && data.length === 2) {\n//         setFoodItems(data[0] || []);\n//         setFoodCat(data[1] || []);\n//       } else {\n//         console.error(\"Unexpected response format:\", data);\n//       }\n//     } catch (error) {\n//       console.error(\"Error loading food items:\", error);\n//     } finally {\n//       setLoading(false); // Set loading to false after fetching completes\n//     }\n//   };\n\n//   useEffect(() => {\n//     loadFoodItems();\n//   }, []);\n\n//   const handleSearchChange = (e) => {\n//     setSearch(e.target.value);\n//   };\n\n//   const filteredFoodItems = foodItems.filter(item =>\n//     item.name.toLowerCase().includes(search.toLowerCase())\n//   );\n\n//   return (\n//     <div>\n//       <Navbar />\n//       <Carousel />\n//       <div className='container'>\n//         <div className='my-3'>\n//           {/* Search bar */}\n//           <form className=\"d-flex justify-content-center mb-3\">\n//             <input \n//               className=\"form-control me-2 w-75 bg-white text-dark\" \n//               type=\"search\" \n//               placeholder=\"Type in...\" \n//               aria-label=\"Search\"\n//               value={search}\n//               onChange={handleSearchChange} // Update search state\n//             />\n//             <button className=\"btn text-white bg-success\" type=\"button\" onClick={(e) => e.preventDefault()}>Search</button>\n//           </form>\n//         </div>\n\n//         {loading ? (\n//           <div>Loading...</div> // Display loading state\n//         ) : foodCat.length > 0 ? (\n//           foodCat.map((data) => (\n//             <div className='row mb-3' key={data.id}>\n//               <div className='fs-3 m-3'>\n//                 {data.CategoryName}\n//               </div>\n//               <hr id=\"hr-success\" style={{ height: \"4px\", backgroundImage: \"-webkit-linear-gradient(left,rgb(0, 255, 137),rgb(0, 0, 0))\" }} />\n//               {filteredFoodItems.length > 0 ? filteredFoodItems\n//                 .filter(item => item.CategoryName === data.CategoryName)\n//                 .map(filteredItem => (\n//                   <div key={filteredItem.id} className='col-12 col-md-6 col-lg-3'>\n//                     <Card \n//                       foodName={filteredItem.name} \n//                       item={filteredItem} \n//                       options={filteredItem.options[0]} \n//                       ImgSrc={filteredItem.img} \n//                     />\n//                   </div>\n//                 )) \n//                 : <div>No Such Data</div>}\n//             </div>\n//           ))\n//         ) : (\n//           <div>No Categories Available</div>\n//         )}\n//       </div>\n//       <Footer />\n//     </div>\n//   );\n// }\n\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}