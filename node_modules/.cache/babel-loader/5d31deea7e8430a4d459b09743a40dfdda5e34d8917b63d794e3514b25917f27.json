{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruhan\\\\Documents\\\\gofood\\\\mernapp\\\\src\\\\components\\\\Card.js\",\n  _s = $RefreshSig$();\n// import React from 'react'\n// import { useNavigate } from 'react-router-dom'\n// import { useDispatchCart, useCart } from './ContextReducer'\n// import { Dropdown, DropdownButton } from 'react-bootstrap';\n// export default function Card(props) {\n//   let data = useCart();\n\n//   let navigate = useNavigate()\n//   const [qty, setQty] = useState(1)\n//   const [size, setSize] = useState(\"\")\n//   const priceRef = useRef();\n//   // const [btnEnable, setBtnEnable] = useState(false);\n//   // let totval = 0\n//   // let price = Object.values(options).map((value) => {\n//   //   return parseInt(value, 10);\n//   // });\n//   let options = props.options;\n//   let priceOptions = Object.keys(options);\n//   let foodItem = props.item;\n//   const dispatch = useDispatchCart();\n//   const handleClick = () => {\n//     if (!localStorage.getItem(\"token\")) {\n//       navigate(\"/login\")\n//     }\n//   }\n//   const handleQty = (e) => {\n//     setQty(e.target.value);\n//   }\n//   const handleOptions = (e) => {\n//     setSize(e.target.value);\n//   }\n//   const handleAddToCart = async () => {\n//     let food = []\n//     for (const item of data) {\n//       if (item.id === foodItem._id) {\n//         food = item;\n\n//         break;\n//       }\n//     }\n//     console.log(food)\n//     console.log(new Date())\n//     if (food !== []) {\n//       if (food.size === size) {\n//         await dispatch({ type: \"UPDATE\", id: foodItem._id, price: finalPrice, qty: qty })\n//         return\n//       }\n//       else if (food.size !== size) {\n//         await dispatch({ type: \"ADD\", id: foodItem._id, name: foodItem.name, price: finalPrice, qty: qty, size: size,img: props.ImgSrc })\n//         console.log(\"Size different so simply ADD one more to the list\")\n//         return\n//       }\n//       return\n//     }\n\n//     await dispatch({ type: \"ADD\", id: foodItem._id, name: foodItem.name, price: finalPrice, qty: qty, size: size })\n\n//     // setBtnEnable(true)\n\n//   }\n\n//   useEffect(() => {\n//     setSize(priceRef.current.value)\n//   }, [])\n\n//   // useEffect(()=>{\n//   // checkBtn();\n//   //   },[data])\n\n//   let finalPrice = qty * parseInt(options[size]);   //This is where Price is changing\n//   // totval += finalPrice;\n// console.log(totval)\n//   return (\n//     <div>\n//     </div>\n//   )\n// }\n// //\n// import React from 'react';\n\n// export default function Card(props) {\n//   const { options, foodName, img } = props;\n//   const sizeOptions = ['Half', 'Full']; // Options for size\n//   const quantityOptions = Array.from(Array(6), (e, i) => i + 1); // Quantity options from 1 to 6\n\n//   // Default image if none is provided\n//   const imageUrl = img || \"/path/to/default-image.jpeg\";\n\n//   return (\n//     <div className=\"card mt-3\" style={{ width: \"18rem\", maxHeight: \"360px\" }}>\n//       <img src={imageUrl} className=\"card-img-top\" alt={foodName} />\n//       <div className=\"card-body\">\n//         <h5 className=\"card-title\">{foodName}</h5>\n//         <div className=\"container w-100\">\n//           {/* Dropdown for size options (e.g., Half, Full) */}\n//           <div className='mb-3'>\n//             <label htmlFor=\"sizeOptions\" className=\"form-label\">Size</label>\n//             <select id=\"sizeOptions\" className='form-select bg-success text-white rounded'>\n//               {sizeOptions.map((size) => (\n//                 <option key={size} value={size}>{size}</option>\n//               ))}\n//             </select>\n//           </div>\n\n//           {/* Dropdown for quantity options (e.g., number of items) */}\n//           <div className='mb-3'>\n//             <label htmlFor=\"quantity\" className=\"form-label\">Quantity</label>\n//             <select id=\"quantity\" className='form-select bg-success text-white rounded'>\n//               {quantityOptions.map((quantity) => (\n//                 <option key={quantity} value={quantity}>{quantity}</option>\n//               ))}\n//             </select>\n//           </div>\n\n//           <div className='d-inline h-100 fs-5'>Total Price</div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Card(props) {\n  _s();\n  const {\n    options,\n    foodName,\n    img\n  } = props;\n  const sizeOptions = ['Half', 'Full']; // Options for size\n  const quantityOptions = Array.from(Array(6), (e, i) => i + 1); // Quantity options from 1 to 6\n\n  // Default image if none is provided\n  const imageUrl = img || \"/path/to/default-image.jpeg\";\n\n  // Local state for selected size and quantity\n  const [size, setSize] = useState(sizeOptions[0]);\n  const [quantity, setQuantity] = useState(1);\n\n  // Calculate total price based on size and quantity\n  const finalPrice = quantity * (options[size] || 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card mt-3\",\n    style: {\n      width: \"18rem\",\n      maxHeight: \"360px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageUrl,\n      className: \"card-img-top\",\n      alt: foodName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: foodName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container w-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-50\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"sizeOptions\",\n              className: \"form-label\",\n              children: \"Size\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"sizeOptions\",\n              className: \"form-select bg-success text-white rounded\",\n              value: size,\n              onChange: e => setSize(e.target.value),\n              children: sizeOptions.map(size => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: size,\n                children: size\n              }, size, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-50\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"quantity\",\n              className: \"form-label\",\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"quantity\",\n              className: \"form-select bg-success text-white rounded\",\n              value: quantity,\n              onChange: e => setQuantity(Number(e.target.value)),\n              children: quantityOptions.map(quantity => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: quantity,\n                children: quantity\n              }, quantity, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-inline h-100 fs-5\",\n          children: [\"\\u20B9\", finalPrice, \"/-\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n}\n_s(Card, \"46X4xkp8R4Ww22PIw5KFQH/mb0c=\");\n_c = Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Card","props","_s","options","foodName","img","sizeOptions","quantityOptions","Array","from","e","i","imageUrl","size","setSize","quantity","setQuantity","finalPrice","className","style","width","maxHeight","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","target","map","Number","_c","$RefreshReg$"],"sources":["C:/Users/ruhan/Documents/gofood/mernapp/src/components/Card.js"],"sourcesContent":["\n// import React from 'react'\n// import { useNavigate } from 'react-router-dom'\n// import { useDispatchCart, useCart } from './ContextReducer'\n// import { Dropdown, DropdownButton } from 'react-bootstrap';\n// export default function Card(props) {\n//   let data = useCart();\n\n//   let navigate = useNavigate()\n//   const [qty, setQty] = useState(1)\n//   const [size, setSize] = useState(\"\")\n//   const priceRef = useRef();\n//   // const [btnEnable, setBtnEnable] = useState(false);\n//   // let totval = 0\n//   // let price = Object.values(options).map((value) => {\n//   //   return parseInt(value, 10);\n//   // });\n//   let options = props.options;\n//   let priceOptions = Object.keys(options);\n//   let foodItem = props.item;\n//   const dispatch = useDispatchCart();\n//   const handleClick = () => {\n//     if (!localStorage.getItem(\"token\")) {\n//       navigate(\"/login\")\n//     }\n//   }\n//   const handleQty = (e) => {\n//     setQty(e.target.value);\n//   }\n//   const handleOptions = (e) => {\n//     setSize(e.target.value);\n//   }\n//   const handleAddToCart = async () => {\n//     let food = []\n//     for (const item of data) {\n//       if (item.id === foodItem._id) {\n//         food = item;\n\n//         break;\n//       }\n//     }\n//     console.log(food)\n//     console.log(new Date())\n//     if (food !== []) {\n//       if (food.size === size) {\n//         await dispatch({ type: \"UPDATE\", id: foodItem._id, price: finalPrice, qty: qty })\n//         return\n//       }\n//       else if (food.size !== size) {\n//         await dispatch({ type: \"ADD\", id: foodItem._id, name: foodItem.name, price: finalPrice, qty: qty, size: size,img: props.ImgSrc })\n//         console.log(\"Size different so simply ADD one more to the list\")\n//         return\n//       }\n//       return\n//     }\n\n//     await dispatch({ type: \"ADD\", id: foodItem._id, name: foodItem.name, price: finalPrice, qty: qty, size: size })\n\n\n//     // setBtnEnable(true)\n\n//   }\n\n//   useEffect(() => {\n//     setSize(priceRef.current.value)\n//   }, [])\n\n//   // useEffect(()=>{\n//   // checkBtn();\n//   //   },[data])\n\n//   let finalPrice = qty * parseInt(options[size]);   //This is where Price is changing\n//   // totval += finalPrice;\n  // console.log(totval)\n//   return (\n//     <div>\n//     </div>\n//   )\n// }\n// //\n// import React from 'react';\n\n// export default function Card(props) {\n//   const { options, foodName, img } = props;\n//   const sizeOptions = ['Half', 'Full']; // Options for size\n//   const quantityOptions = Array.from(Array(6), (e, i) => i + 1); // Quantity options from 1 to 6\n\n//   // Default image if none is provided\n//   const imageUrl = img || \"/path/to/default-image.jpeg\";\n\n//   return (\n//     <div className=\"card mt-3\" style={{ width: \"18rem\", maxHeight: \"360px\" }}>\n//       <img src={imageUrl} className=\"card-img-top\" alt={foodName} />\n//       <div className=\"card-body\">\n//         <h5 className=\"card-title\">{foodName}</h5>\n//         <div className=\"container w-100\">\n//           {/* Dropdown for size options (e.g., Half, Full) */}\n//           <div className='mb-3'>\n//             <label htmlFor=\"sizeOptions\" className=\"form-label\">Size</label>\n//             <select id=\"sizeOptions\" className='form-select bg-success text-white rounded'>\n//               {sizeOptions.map((size) => (\n//                 <option key={size} value={size}>{size}</option>\n//               ))}\n//             </select>\n//           </div>\n\n//           {/* Dropdown for quantity options (e.g., number of items) */}\n//           <div className='mb-3'>\n//             <label htmlFor=\"quantity\" className=\"form-label\">Quantity</label>\n//             <select id=\"quantity\" className='form-select bg-success text-white rounded'>\n//               {quantityOptions.map((quantity) => (\n//                 <option key={quantity} value={quantity}>{quantity}</option>\n//               ))}\n//             </select>\n//           </div>\n\n//           <div className='d-inline h-100 fs-5'>Total Price</div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\nimport React, { useState } from 'react';\n\nexport default function Card(props) {\n  const { options, foodName, img } = props;\n  const sizeOptions = ['Half', 'Full']; // Options for size\n  const quantityOptions = Array.from(Array(6), (e, i) => i + 1); // Quantity options from 1 to 6\n\n  // Default image if none is provided\n  const imageUrl = img || \"/path/to/default-image.jpeg\";\n\n  // Local state for selected size and quantity\n  const [size, setSize] = useState(sizeOptions[0]);\n  const [quantity, setQuantity] = useState(1);\n\n  // Calculate total price based on size and quantity\n  const finalPrice = quantity * (options[size] || 0);\n\n  return (\n    <div className=\"card mt-3\" style={{ width: \"18rem\", maxHeight: \"360px\" }}>\n      <img src={imageUrl} className=\"card-img-top\" alt={foodName} />\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{foodName}</h5>\n        <div className=\"container w-100\">\n          {/* Dropdowns for size and quantity in one line */}\n          <div className=\"d-flex justify-content-between mb-3\">\n            <div className=\"w-50\">\n              <label htmlFor=\"sizeOptions\" className=\"form-label\">Size</label>\n              <select\n                id=\"sizeOptions\"\n                className=\"form-select bg-success text-white rounded\"\n                value={size}\n                onChange={(e) => setSize(e.target.value)}\n              >\n                {sizeOptions.map((size) => (\n                  <option key={size} value={size}>{size}</option>\n                ))}\n              </select>\n            </div>\n            <div className=\"w-50\">\n              <label htmlFor=\"quantity\" className=\"form-label\">Quantity</label>\n              <select\n                id=\"quantity\"\n                className=\"form-select bg-success text-white rounded\"\n                value={quantity}\n                onChange={(e) => setQuantity(Number(e.target.value))}\n              >\n                {quantityOptions.map((quantity) => (\n                  <option key={quantity} value={quantity}>{quantity}</option>\n                ))}\n              </select>\n            </div>\n          </div>\n\n          {/* Total Price displayed on the next line */}\n          <div className='d-inline h-100 fs-5'>\n            ₹{finalPrice}/-\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}