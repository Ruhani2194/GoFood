{"ast":null,"code":"// // // import React, { useState } from 'react';\n// // // import Navbar from '../components/Navbar';\n// // // import { useNavigate, Link } from 'react-router-dom';\n\n// // // export default function Login() {\n// // //   const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\n// // //   const navigate = useNavigate();\n\n// // //   const handleSubmit = async (e) => {\n// // //     e.preventDefault();\n\n// // //     try {\n// // //       const response = await fetch(\"http://localhost:5000/api/loginuser\", {\n// // //         method: 'POST',\n// // //         headers: {\n// // //           'Content-Type': 'application/json',\n// // //         },\n// // //         body: JSON.stringify({ email: credentials.email, password: credentials.password }),\n// // //       });\n\n// // //       const json = await response.json();\n// // //       console.log(json);\n\n// // //       if (json.success) {\n// // //         // Store the token and email in local storage\n// // //         localStorage.setItem(\"authToken\", json.authToken);\n// // //         localStorage.setItem(\"userEmail\", credentials.email);\n\n// // //         // Navigate to the home page upon successful login\n// // //         navigate(\"/\");\n// // //       } else {\n// // //         alert(\"Invalid credentials. Please try again.\");\n// // //       }\n// // //     } catch (error) {\n// // //       console.error('Error during login:', error);\n// // //       alert(\"Something went wrong. Please try again later.\");\n// // //     }\n// // //   };\n\n// // //   const onChange = (e) => {\n// // //     setCredentials({ ...credentials, [e.target.name]: e.target.value });\n// // //   };\n\n// // //   return (\n// // //     <div style={{ backgroundImage: 'url(\"https://images.pexels.com/photos/326278/pexels-photo-326278.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")', height: '100vh', backgroundSize: 'cover' }}>\n// // //       <Navbar />\n// // //       <div className='container'>\n// // //         <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n// // //           <div className=\"m-3\">\n// // //             <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\n// // //             <input\n// // //               type=\"email\"\n// // //               className=\"form-control\"\n// // //               name='email'\n// // //               value={credentials.email}\n// // //               onChange={onChange}\n// // //               aria-describedby=\"emailHelp\"\n// // //               required\n// // //             />\n// // //             <div id=\"emailHelp\" className=\"form-text\">We'll never share your email with anyone.</div>\n// // //           </div>\n// // //           <div className=\"m-3\">\n// // //             <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\n// // //             <input\n// // //               type=\"password\"\n// // //               className=\"form-control\"\n// // //               name='password'\n// // //               value={credentials.password}\n// // //               onChange={onChange}\n// // //               required\n// // //             />\n// // //           </div>\n// // //           <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n// // //           <Link to=\"/signup\" className=\"m-3 mx-1 btn btn-danger\">I'm a new user</Link>\n// // //         </form>\n// // //       </div>\n// // //     </div>\n// // //   );\n// // // }\n\n// // import React, { useState } from 'react';\n// // import { useNavigate, Link } from 'react-router-dom';\n// // import Navbar from '../components/Navbar';\n\n// // export default function Login() {\n// //   const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\n// //   const navigate = useNavigate();\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n\n// //     try {\n// //       const response = await fetch(\"http://localhost:5000/api/loginuser\", {\n// //         method: 'POST',\n// //         headers: {\n// //           'Content-Type': 'application/json',\n// //         },\n// //         body: JSON.stringify({ email: credentials.email, password: credentials.password }),\n// //       });\n\n// //       const json = await response.json();\n\n// //       if (json.success) {\n// //         // Store the token and email in local storage\n// //         localStorage.setItem(\"authToken\", json.authToken);\n// //         localStorage.setItem(\"userEmail\", credentials.email);\n\n// //         // If user is admin, navigate to an admin page\n// //         const user = await fetchUserData(credentials.email); // Fetch user data to check if admin\n// //         if (user.role === 'admin') {\n// //           navigate(\"/admin/upload\"); // Assuming an admin upload page exists\n// //         } else {\n// //           navigate(\"/\"); // Otherwise, navigate to the home page\n// //         }\n// //       } else {\n// //         alert(\"Invalid credentials. Please try again.\");\n// //       }\n// //     } catch (error) {\n// //       console.error('Error during login:', error);\n// //       alert(\"Something went wrong. Please try again later.\");\n// //     }\n// //   };\n\n// //   const fetchUserData = async (email) => {\n// //     const response = await fetch(`http://localhost:5000/api/getUserByEmail/${email}`);\n// //     const data = await response.json();\n// //     return data;\n// //   };\n\n// //   const onChange = (e) => {\n// //     setCredentials({ ...credentials, [e.target.name]: e.target.value });\n// //   };\n\n// //   return (\n// //     <div style={{ backgroundImage: 'url(\"https://images.pexels.com/photos/326278/pexels-photo-326278.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")', height: '100vh', backgroundSize: 'cover' }}>\n// //       <Navbar />\n// //       <div className='container'>\n// //         <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n// //           <div className=\"m-3\">\n// //             <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\n// //             <input\n// //               type=\"email\"\n// //               className=\"form-control\"\n// //               name='email'\n// //               value={credentials.email}\n// //               onChange={onChange}\n// //               aria-describedby=\"emailHelp\"\n// //               required\n// //             />\n// //           </div>\n// //           <div className=\"m-3\">\n// //             <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\n// //             <input\n// //               type=\"password\"\n// //               className=\"form-control\"\n// //               name='password'\n// //               value={credentials.password}\n// //               onChange={onChange}\n// //               required\n// //             />\n// //           </div>\n// //           <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n// //           <Link to=\"/signup\" className=\"m-3 mx-1 btn btn-danger\">I'm a new user</Link>\n// //         </form>\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n// import React, { useState } from 'react';\n// import { useNavigate, Link } from 'react-router-dom';\n// import Navbar from '../components/Navbar';\n\n// export default function Login() {\n//   const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const response = await fetch(\"http://localhost:5000/api/loginuser\", {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ email: credentials.email, password: credentials.password }),\n//       });\n\n//       const json = await response.json();\n\n//       if (json.success) {\n//         // Store the token and user data in local storage\n//         localStorage.setItem(\"authToken\", json.authToken);\n//         localStorage.setItem(\"userEmail\", credentials.email);\n\n//         // Check the user role from the response\n//         if (json.role === 'admin') {\n//           navigate(\"/admin-dashboard\");  // Redirect to admin dashboard if the role is admin\n//         } else {\n//           navigate(\"/\");  // Redirect to home page for regular users\n//         }\n//       } else {\n//         alert(\"Invalid credentials. Please try again.\");\n//       }\n//     } catch (error) {\n//       console.error('Error during login:', error);\n//       alert(\"Something went wrong. Please try again later.\");\n//     }\n//   };\n\n//   const onChange = (e) => {\n//     setCredentials({ ...credentials, [e.target.name]: e.target.value });\n//   };\n\n//   return (\n//     <div style={{ backgroundImage: 'url(\"https://images.pexels.com/photos/326278/pexels-photo-326278.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")', height: '100vh', backgroundSize: 'cover' }}>\n//       <Navbar />\n//       <div className='container'>\n//         <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\n//             <input\n//               type=\"email\"\n//               className=\"form-control\"\n//               name='email'\n//               value={credentials.email}\n//               onChange={onChange}\n//               required\n//             />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\n//             <input\n//               type=\"password\"\n//               className=\"form-control\"\n//               name='password'\n//               value={credentials.password}\n//               onChange={onChange}\n//               required\n//             />\n//           </div>\n//           <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n//           <Link to=\"/signup\" className=\"m-3 mx-1 btn btn-danger\">I'm a new user</Link>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';  // Import useNavigate instead of useHistory\n\n// const Login = () => {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState('');\n//   const [loading, setLoading] = useState(false);\n//   const [isAdmin, setIsAdmin] = useState(false);  // Add a flag for admin check\n//   const navigate = useNavigate();  // Initialize useNavigate hook\n\n//   // Handle input changes for email and password\n//   const handleEmailChange = (e) => {\n//     setEmail(e.target.value);\n//   };\n\n//   const handlePasswordChange = (e) => {\n//     setPassword(e.target.value);\n//   };\n\n//   // Handle admin toggle (for example, checkbox or selection)\n//   const handleAdminToggle = () => {\n//     setIsAdmin(!isAdmin);  // Toggle admin state (this could be a selection in your form)\n//   };\n\n//   // Submit login form\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     setLoading(true);\n//     setError('');\n\n//     // Create the login request body\n//     const requestData = {\n//       email,\n//       password\n//     };\n\n//     // Determine the login endpoint based on whether the user is an admin or not\n//     const url = isAdmin \n//       ? 'http://localhost:5000/api/admin/admin-login' \n//       : 'http://localhost:5000/api/loginuser';\n\n//     try {\n//       const response = await fetch(url, {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify(requestData),\n//       });\n\n//       const data = await response.json();\n\n//       // Check if the login was successful\n//       if (response.ok) {\n//         // Save the token in localStorage for future requests\n//         localStorage.setItem('authToken', data.token);\n//         // Redirect to the appropriate page based on user type\n//         if (isAdmin) {\n//           navigate('/admin-dashboard'); // Admin dashboard\n//         } else {\n//           navigate('/'); // User dashboard\n//         }\n//       } else {\n//         setError(data.error || 'Login failed. Please check your credentials.');\n//       }\n//     } catch (err) {\n//       setError('An error occurred. Please try again later.');\n//     }\n\n//     setLoading(false);\n//   };\n\n//   return (\n//     <div className=\"login-container\">\n//       <h2>{isAdmin ? 'Admin Login' : 'User Login'}</h2>\n//       <form onSubmit={handleSubmit}>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"email\">Email:</label>\n//           <input\n//             type=\"email\"\n//             id=\"email\"\n//             value={email}\n//             onChange={handleEmailChange}\n//             required\n//             placeholder=\"Enter your email\"\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"password\">Password:</label>\n//           <input\n//             type=\"password\"\n//             id=\"password\"\n//             value={password}\n//             onChange={handlePasswordChange}\n//             required\n//             placeholder=\"Enter your password\"\n//           />\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label>\n//             <input\n//               type=\"checkbox\"\n//               checked={isAdmin}\n//               onChange={handleAdminToggle}\n//             />\n//             {' '}Login as Admin\n//           </label>\n//         </div>\n\n//         {error && <p className=\"error-message\">{error}</p>}\n\n//         <button type=\"submit\" disabled={loading}>\n//           {loading ? 'Logging in...' : 'Login'}\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Login;","map":{"version":3,"names":[],"sources":["C:/Users/ruhan/Documents/gofood/mernapp/src/screens/Login.js"],"sourcesContent":["// // // import React, { useState } from 'react';\n// // // import Navbar from '../components/Navbar';\n// // // import { useNavigate, Link } from 'react-router-dom';\n\n// // // export default function Login() {\n// // //   const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\n// // //   const navigate = useNavigate();\n\n// // //   const handleSubmit = async (e) => {\n// // //     e.preventDefault();\n\n// // //     try {\n// // //       const response = await fetch(\"http://localhost:5000/api/loginuser\", {\n// // //         method: 'POST',\n// // //         headers: {\n// // //           'Content-Type': 'application/json',\n// // //         },\n// // //         body: JSON.stringify({ email: credentials.email, password: credentials.password }),\n// // //       });\n\n// // //       const json = await response.json();\n// // //       console.log(json);\n\n// // //       if (json.success) {\n// // //         // Store the token and email in local storage\n// // //         localStorage.setItem(\"authToken\", json.authToken);\n// // //         localStorage.setItem(\"userEmail\", credentials.email);\n\n// // //         // Navigate to the home page upon successful login\n// // //         navigate(\"/\");\n// // //       } else {\n// // //         alert(\"Invalid credentials. Please try again.\");\n// // //       }\n// // //     } catch (error) {\n// // //       console.error('Error during login:', error);\n// // //       alert(\"Something went wrong. Please try again later.\");\n// // //     }\n// // //   };\n\n// // //   const onChange = (e) => {\n// // //     setCredentials({ ...credentials, [e.target.name]: e.target.value });\n// // //   };\n\n// // //   return (\n// // //     <div style={{ backgroundImage: 'url(\"https://images.pexels.com/photos/326278/pexels-photo-326278.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")', height: '100vh', backgroundSize: 'cover' }}>\n// // //       <Navbar />\n// // //       <div className='container'>\n// // //         <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n// // //           <div className=\"m-3\">\n// // //             <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\n// // //             <input\n// // //               type=\"email\"\n// // //               className=\"form-control\"\n// // //               name='email'\n// // //               value={credentials.email}\n// // //               onChange={onChange}\n// // //               aria-describedby=\"emailHelp\"\n// // //               required\n// // //             />\n// // //             <div id=\"emailHelp\" className=\"form-text\">We'll never share your email with anyone.</div>\n// // //           </div>\n// // //           <div className=\"m-3\">\n// // //             <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\n// // //             <input\n// // //               type=\"password\"\n// // //               className=\"form-control\"\n// // //               name='password'\n// // //               value={credentials.password}\n// // //               onChange={onChange}\n// // //               required\n// // //             />\n// // //           </div>\n// // //           <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n// // //           <Link to=\"/signup\" className=\"m-3 mx-1 btn btn-danger\">I'm a new user</Link>\n// // //         </form>\n// // //       </div>\n// // //     </div>\n// // //   );\n// // // }\n\n\n// // import React, { useState } from 'react';\n// // import { useNavigate, Link } from 'react-router-dom';\n// // import Navbar from '../components/Navbar';\n\n// // export default function Login() {\n// //   const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\n// //   const navigate = useNavigate();\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n\n// //     try {\n// //       const response = await fetch(\"http://localhost:5000/api/loginuser\", {\n// //         method: 'POST',\n// //         headers: {\n// //           'Content-Type': 'application/json',\n// //         },\n// //         body: JSON.stringify({ email: credentials.email, password: credentials.password }),\n// //       });\n\n// //       const json = await response.json();\n\n// //       if (json.success) {\n// //         // Store the token and email in local storage\n// //         localStorage.setItem(\"authToken\", json.authToken);\n// //         localStorage.setItem(\"userEmail\", credentials.email);\n\n// //         // If user is admin, navigate to an admin page\n// //         const user = await fetchUserData(credentials.email); // Fetch user data to check if admin\n// //         if (user.role === 'admin') {\n// //           navigate(\"/admin/upload\"); // Assuming an admin upload page exists\n// //         } else {\n// //           navigate(\"/\"); // Otherwise, navigate to the home page\n// //         }\n// //       } else {\n// //         alert(\"Invalid credentials. Please try again.\");\n// //       }\n// //     } catch (error) {\n// //       console.error('Error during login:', error);\n// //       alert(\"Something went wrong. Please try again later.\");\n// //     }\n// //   };\n\n// //   const fetchUserData = async (email) => {\n// //     const response = await fetch(`http://localhost:5000/api/getUserByEmail/${email}`);\n// //     const data = await response.json();\n// //     return data;\n// //   };\n\n// //   const onChange = (e) => {\n// //     setCredentials({ ...credentials, [e.target.name]: e.target.value });\n// //   };\n\n// //   return (\n// //     <div style={{ backgroundImage: 'url(\"https://images.pexels.com/photos/326278/pexels-photo-326278.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")', height: '100vh', backgroundSize: 'cover' }}>\n// //       <Navbar />\n// //       <div className='container'>\n// //         <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n// //           <div className=\"m-3\">\n// //             <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\n// //             <input\n// //               type=\"email\"\n// //               className=\"form-control\"\n// //               name='email'\n// //               value={credentials.email}\n// //               onChange={onChange}\n// //               aria-describedby=\"emailHelp\"\n// //               required\n// //             />\n// //           </div>\n// //           <div className=\"m-3\">\n// //             <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\n// //             <input\n// //               type=\"password\"\n// //               className=\"form-control\"\n// //               name='password'\n// //               value={credentials.password}\n// //               onChange={onChange}\n// //               required\n// //             />\n// //           </div>\n// //           <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n// //           <Link to=\"/signup\" className=\"m-3 mx-1 btn btn-danger\">I'm a new user</Link>\n// //         </form>\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n// import React, { useState } from 'react';\n// import { useNavigate, Link } from 'react-router-dom';\n// import Navbar from '../components/Navbar';\n\n// export default function Login() {\n//   const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n  \n//     try {\n//       const response = await fetch(\"http://localhost:5000/api/loginuser\", {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ email: credentials.email, password: credentials.password }),\n//       });\n      \n//       const json = await response.json();\n  \n//       if (json.success) {\n//         // Store the token and user data in local storage\n//         localStorage.setItem(\"authToken\", json.authToken);\n//         localStorage.setItem(\"userEmail\", credentials.email);\n  \n//         // Check the user role from the response\n//         if (json.role === 'admin') {\n//           navigate(\"/admin-dashboard\");  // Redirect to admin dashboard if the role is admin\n//         } else {\n//           navigate(\"/\");  // Redirect to home page for regular users\n//         }\n//       } else {\n//         alert(\"Invalid credentials. Please try again.\");\n//       }\n//     } catch (error) {\n//       console.error('Error during login:', error);\n//       alert(\"Something went wrong. Please try again later.\");\n//     }\n//   };\n  \n//   const onChange = (e) => {\n//     setCredentials({ ...credentials, [e.target.name]: e.target.value });\n//   };\n\n//   return (\n//     <div style={{ backgroundImage: 'url(\"https://images.pexels.com/photos/326278/pexels-photo-326278.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")', height: '100vh', backgroundSize: 'cover' }}>\n//       <Navbar />\n//       <div className='container'>\n//         <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\n//             <input\n//               type=\"email\"\n//               className=\"form-control\"\n//               name='email'\n//               value={credentials.email}\n//               onChange={onChange}\n//               required\n//             />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\n//             <input\n//               type=\"password\"\n//               className=\"form-control\"\n//               name='password'\n//               value={credentials.password}\n//               onChange={onChange}\n//               required\n//             />\n//           </div>\n//           <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n//           <Link to=\"/signup\" className=\"m-3 mx-1 btn btn-danger\">I'm a new user</Link>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';  // Import useNavigate instead of useHistory\n\n// const Login = () => {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState('');\n//   const [loading, setLoading] = useState(false);\n//   const [isAdmin, setIsAdmin] = useState(false);  // Add a flag for admin check\n//   const navigate = useNavigate();  // Initialize useNavigate hook\n\n//   // Handle input changes for email and password\n//   const handleEmailChange = (e) => {\n//     setEmail(e.target.value);\n//   };\n\n//   const handlePasswordChange = (e) => {\n//     setPassword(e.target.value);\n//   };\n\n//   // Handle admin toggle (for example, checkbox or selection)\n//   const handleAdminToggle = () => {\n//     setIsAdmin(!isAdmin);  // Toggle admin state (this could be a selection in your form)\n//   };\n\n//   // Submit login form\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     setLoading(true);\n//     setError('');\n\n//     // Create the login request body\n//     const requestData = {\n//       email,\n//       password\n//     };\n\n//     // Determine the login endpoint based on whether the user is an admin or not\n//     const url = isAdmin \n//       ? 'http://localhost:5000/api/admin/admin-login' \n//       : 'http://localhost:5000/api/loginuser';\n\n//     try {\n//       const response = await fetch(url, {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify(requestData),\n//       });\n\n//       const data = await response.json();\n\n//       // Check if the login was successful\n//       if (response.ok) {\n//         // Save the token in localStorage for future requests\n//         localStorage.setItem('authToken', data.token);\n//         // Redirect to the appropriate page based on user type\n//         if (isAdmin) {\n//           navigate('/admin-dashboard'); // Admin dashboard\n//         } else {\n//           navigate('/'); // User dashboard\n//         }\n//       } else {\n//         setError(data.error || 'Login failed. Please check your credentials.');\n//       }\n//     } catch (err) {\n//       setError('An error occurred. Please try again later.');\n//     }\n\n//     setLoading(false);\n//   };\n\n//   return (\n//     <div className=\"login-container\">\n//       <h2>{isAdmin ? 'Admin Login' : 'User Login'}</h2>\n//       <form onSubmit={handleSubmit}>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"email\">Email:</label>\n//           <input\n//             type=\"email\"\n//             id=\"email\"\n//             value={email}\n//             onChange={handleEmailChange}\n//             required\n//             placeholder=\"Enter your email\"\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"password\">Password:</label>\n//           <input\n//             type=\"password\"\n//             id=\"password\"\n//             value={password}\n//             onChange={handlePasswordChange}\n//             required\n//             placeholder=\"Enter your password\"\n//           />\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label>\n//             <input\n//               type=\"checkbox\"\n//               checked={isAdmin}\n//               onChange={handleAdminToggle}\n//             />\n//             {' '}Login as Admin\n//           </label>\n//         </div>\n\n//         {error && <p className=\"error-message\">{error}</p>}\n\n//         <button type=\"submit\" disabled={loading}>\n//           {loading ? 'Logging in...' : 'Login'}\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Login;\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}