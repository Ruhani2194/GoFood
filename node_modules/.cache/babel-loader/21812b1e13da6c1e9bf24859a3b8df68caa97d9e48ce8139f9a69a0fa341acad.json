{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruhan\\\\Documents\\\\gofood\\\\mernapp\\\\src\\\\components\\\\Card.js\";\n// import React from 'react'\n// import { useNavigate } from 'react-router-dom'\n// import { useDispatchCart, useCart } from './ContextReducer'\n// import { Dropdown, DropdownButton } from 'react-bootstrap';\n// export default function Card(props) {\n//   let data = useCart();\n\n//   let navigate = useNavigate()\n//   const [qty, setQty] = useState(1)\n//   const [size, setSize] = useState(\"\")\n//   const priceRef = useRef();\n//   // const [btnEnable, setBtnEnable] = useState(false);\n//   // let totval = 0\n//   // let price = Object.values(options).map((value) => {\n//   //   return parseInt(value, 10);\n//   // });\n//   let options = props.options;\n//   let priceOptions = Object.keys(options);\n//   let foodItem = props.item;\n//   const dispatch = useDispatchCart();\n//   const handleClick = () => {\n//     if (!localStorage.getItem(\"token\")) {\n//       navigate(\"/login\")\n//     }\n//   }\n//   const handleQty = (e) => {\n//     setQty(e.target.value);\n//   }\n//   const handleOptions = (e) => {\n//     setSize(e.target.value);\n//   }\n//   const handleAddToCart = async () => {\n//     let food = []\n//     for (const item of data) {\n//       if (item.id === foodItem._id) {\n//         food = item;\n\n//         break;\n//       }\n//     }\n//     console.log(food)\n//     console.log(new Date())\n//     if (food !== []) {\n//       if (food.size === size) {\n//         await dispatch({ type: \"UPDATE\", id: foodItem._id, price: finalPrice, qty: qty })\n//         return\n//       }\n//       else if (food.size !== size) {\n//         await dispatch({ type: \"ADD\", id: foodItem._id, name: foodItem.name, price: finalPrice, qty: qty, size: size,img: props.ImgSrc })\n//         console.log(\"Size different so simply ADD one more to the list\")\n//         return\n//       }\n//       return\n//     }\n\n//     await dispatch({ type: \"ADD\", id: foodItem._id, name: foodItem.name, price: finalPrice, qty: qty, size: size })\n\n//     // setBtnEnable(true)\n\n//   }\n\n//   useEffect(() => {\n//     setSize(priceRef.current.value)\n//   }, [])\n\n//   // useEffect(()=>{\n//   // checkBtn();\n//   //   },[data])\n\n//   let finalPrice = qty * parseInt(options[size]);   //This is where Price is changing\n//   // totval += finalPrice;\n// console.log(totval)\n//   return (\n//     <div>\n//     </div>\n//   )\n// }\n// //\n// import React from 'react'\n\n// export default function Card(props) {\n//   let options=props.options;\n//   let priceOptions=Object.keys(options)\n//   return (\n//     <div>\n//       <div>\n\n//       <div className=\"card mt-3\" style={{ \"width\": \"18rem\", \"maxHeight\":\"360px\" }}>\n\n//       <img src=\"/Noodles.jpeg\" className =\"card-img-top\" alt=\"...\" />\n\n//       <div className=\"card-body\">\n\n//       <h5 className=\"card-title\">{props.foodName}</h5>\n\n//       {/* <p className=\"card-text\">This is some Important text.</p> */}\n\n//       <div className='container w-100' >\n\n//       <select className='m-2 h-100  bg-success rounded'>\n//         {priceOptions.map((data)=>{\n//           return<option key={data} value={data}>{data}</option>\n//         })}\n\n//       {Array.from(Array(6), (e,i)=>{\n\n//       return(\n\n//       <option key={i+1} value={i+1}> {i+1} </option>)})}\n\n//       </select>\n//       <select className='m-2 h-100 bg-success rounded'>\n\n//       </select>\n//       <div className='d-inline h-100 fs-5'>TotalPrice</div>\n\n//       </div>\n\n//       </div>\n\n//       </div></div>\n//     </div>\n//   )\n// }\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Card(props) {\n  const {\n    options,\n    foodName,\n    img,\n    item\n  } = props;\n\n  // Ensure options is defined and is an object\n  const priceOptions = options ? Object.keys(options) : [];\n\n  // Default image if no image provided\n  const imageUrl = img || \"/path/to/default-image.jpeg\";\n\n  // Debugging: log props and options\n  console.log(\"Card Props:\", props);\n  console.log(\"Price Options:\", priceOptions);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card mt-3\",\n    style: {\n      width: \"18rem\",\n      maxHeight: \"360px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageUrl,\n      className: \"card-img-top\",\n      alt: foodName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: foodName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container w-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-inline-block m-2\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-select bg-success text-white rounded\",\n            children: [priceOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option,\n              children: option\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this)), Array.from(Array(6), (e, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: i + 1,\n              children: i + 1\n            }, i + 1, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-inline-block m-2\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-select bg-success text-white rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-inline h-100 fs-5\",\n          children: \"Total Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n}\n_c = Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Card","props","options","foodName","img","item","priceOptions","Object","keys","imageUrl","console","log","className","style","width","maxHeight","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","option","value","Array","from","e","i","_c","$RefreshReg$"],"sources":["C:/Users/ruhan/Documents/gofood/mernapp/src/components/Card.js"],"sourcesContent":["\n// import React from 'react'\n// import { useNavigate } from 'react-router-dom'\n// import { useDispatchCart, useCart } from './ContextReducer'\n// import { Dropdown, DropdownButton } from 'react-bootstrap';\n// export default function Card(props) {\n//   let data = useCart();\n\n//   let navigate = useNavigate()\n//   const [qty, setQty] = useState(1)\n//   const [size, setSize] = useState(\"\")\n//   const priceRef = useRef();\n//   // const [btnEnable, setBtnEnable] = useState(false);\n//   // let totval = 0\n//   // let price = Object.values(options).map((value) => {\n//   //   return parseInt(value, 10);\n//   // });\n//   let options = props.options;\n//   let priceOptions = Object.keys(options);\n//   let foodItem = props.item;\n//   const dispatch = useDispatchCart();\n//   const handleClick = () => {\n//     if (!localStorage.getItem(\"token\")) {\n//       navigate(\"/login\")\n//     }\n//   }\n//   const handleQty = (e) => {\n//     setQty(e.target.value);\n//   }\n//   const handleOptions = (e) => {\n//     setSize(e.target.value);\n//   }\n//   const handleAddToCart = async () => {\n//     let food = []\n//     for (const item of data) {\n//       if (item.id === foodItem._id) {\n//         food = item;\n\n//         break;\n//       }\n//     }\n//     console.log(food)\n//     console.log(new Date())\n//     if (food !== []) {\n//       if (food.size === size) {\n//         await dispatch({ type: \"UPDATE\", id: foodItem._id, price: finalPrice, qty: qty })\n//         return\n//       }\n//       else if (food.size !== size) {\n//         await dispatch({ type: \"ADD\", id: foodItem._id, name: foodItem.name, price: finalPrice, qty: qty, size: size,img: props.ImgSrc })\n//         console.log(\"Size different so simply ADD one more to the list\")\n//         return\n//       }\n//       return\n//     }\n\n//     await dispatch({ type: \"ADD\", id: foodItem._id, name: foodItem.name, price: finalPrice, qty: qty, size: size })\n\n\n//     // setBtnEnable(true)\n\n//   }\n\n//   useEffect(() => {\n//     setSize(priceRef.current.value)\n//   }, [])\n\n//   // useEffect(()=>{\n//   // checkBtn();\n//   //   },[data])\n\n//   let finalPrice = qty * parseInt(options[size]);   //This is where Price is changing\n//   // totval += finalPrice;\n  // console.log(totval)\n//   return (\n//     <div>\n//     </div>\n//   )\n// }\n// //\n// import React from 'react'\n\n// export default function Card(props) {\n//   let options=props.options;\n//   let priceOptions=Object.keys(options)\n//   return (\n//     <div>\n//       <div>\n      \n//       <div className=\"card mt-3\" style={{ \"width\": \"18rem\", \"maxHeight\":\"360px\" }}>\n      \n//       <img src=\"/Noodles.jpeg\" className =\"card-img-top\" alt=\"...\" />\n      \n//       <div className=\"card-body\">\n      \n//       <h5 className=\"card-title\">{props.foodName}</h5>\n      \n//       {/* <p className=\"card-text\">This is some Important text.</p> */}\n      \n//       <div className='container w-100' >\n      \n//       <select className='m-2 h-100  bg-success rounded'>\n//         {priceOptions.map((data)=>{\n//           return<option key={data} value={data}>{data}</option>\n//         })}\n      \n//       {Array.from(Array(6), (e,i)=>{\n      \n//       return(\n      \n//       <option key={i+1} value={i+1}> {i+1} </option>)})}\n      \n//       </select>\n//       <select className='m-2 h-100 bg-success rounded'>\n        \n//       </select>\n//       <div className='d-inline h-100 fs-5'>TotalPrice</div>\n      \n//       </div>\n      \n//       </div>\n      \n//       </div></div>\n//     </div>\n//   )\n// }\nimport React from 'react';\n\nexport default function Card(props) {\n  const { options, foodName, img, item } = props;\n\n  // Ensure options is defined and is an object\n  const priceOptions = options ? Object.keys(options) : [];\n  \n  // Default image if no image provided\n  const imageUrl = img || \"/path/to/default-image.jpeg\";\n\n  // Debugging: log props and options\n  console.log(\"Card Props:\", props);\n  console.log(\"Price Options:\", priceOptions);\n\n  return (\n    <div className=\"card mt-3\" style={{ width: \"18rem\", maxHeight: \"360px\" }}>\n      <img src={imageUrl} className=\"card-img-top\" alt={foodName} />\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{foodName}</h5>\n        <div className=\"container w-100\">\n          <div className=\"d-inline-block m-2\">\n            <select className=\"form-select bg-success text-white rounded\">\n              {priceOptions.map((option) => (\n                <option key={option} value={option}>{option}</option>\n              ))}\n              {Array.from(Array(6), (e, i) => (\n                <option key={i + 1} value={i + 1}>{i + 1}</option>\n              ))}\n            </select>\n          </div>\n          <div className=\"d-inline-block m-2\">\n            <select className=\"form-select bg-success text-white rounded\">\n              {/* Additional options can be added here */}\n            </select>\n          </div>\n          <div className=\"d-inline h-100 fs-5\">Total Price</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}