{"ast":null,"code":"// // // import React, { useEffect, useState } from 'react';\n// // // import Card from '../components/Card';\n// // // import Carousel from '../components/Carousel';\n// // // import Footer from '../components/Footer';\n// // // import Navbar from '../components/Navbar';\n\n// // // export default function Home() {\n// // //   const [foodCat, setFoodCat] = useState([]);\n// // //   const [foodItems, setFoodItems] = useState([]);\n// // //   const [search, setSearch] = useState('');\n// // //   const [loading, setLoading] = useState(true);\n\n// // //   const loadFoodItems = async () => {\n// // //     setLoading(true);\n// // //     try {\n// // //       let response = await fetch(\"http://localhost:5000/api/foodData\", {\n// // //         method: 'POST',\n// // //         headers: {\n// // //           'Content-Type': 'application/json',\n// // //         },\n// // //       });\n\n// // //       if (!response.ok) {\n// // //         throw new Error(`HTTP error! Status: ${response.status}`);\n// // //       }\n\n// // //       let data = await response.json();\n// // //       // console.log(\"API Response:\", data);\n\n// // //       if (Array.isArray(data) && data.length === 2) {\n// // //         setFoodItems(data[0] || []);\n// // //         setFoodCat(data[1] || []);\n// // //       } else {\n// // //         console.error(\"Unexpected response format:\", data);\n// // //       }\n// // //     } catch (error) {\n// // //       console.error(\"Error loading food items:\", error);\n// // //     } finally {\n// // //       setLoading(false);\n// // //     }\n// // //   };\n\n// // //   useEffect(() => {\n// // //     loadFoodItems();\n// // //   }, []);\n\n// // //   return (\n// // //     <div className=\"bg-dark text-light min-vh-100\">\n// // //       <Navbar />\n// // //       <Carousel onSearchChange={setSearch} />\n// // //       <div className='container py-4'>\n// // //         {loading ? (\n// // //           <div className=\"text-center text-light\">Loading...</div>\n// // //         ) : foodCat.length > 0 ? (\n// // //           foodCat.map((category) => (\n// // //             <div className='row mb-3' key={category.id}>\n// // //               <div className='fs-3 m-3'>\n// // //                 {category.CategoryName}\n// // //               </div>\n// // //               <hr id=\"hr-success\" style={{ height: \"4px\", backgroundImage: \"linear-gradient(left,rgb(0, 255, 137),rgb(0, 0, 0))\" }} />\n// // //               {foodItems.length > 0 ? foodItems\n// // //                 .filter(item => item.CategoryName === category.CategoryName && item.name.toLowerCase().includes(search.toLowerCase()))\n// // //                 .map(filteredItem => (\n// // //                   <div key={filteredItem.id} className='col-12 col-md-6 col-lg-3'>\n// // //                     <Card foodItem={filteredItem}  options={filteredItem.options[0]}  />\n// // //                   </div>\n// // //                 ))\n// // //                 : <div className=\"text-center text-light\">No Such Data</div>}\n// // //             </div>\n// // //           ))\n// // //         ) : (\n// // //           <div className=\"text-center text-light\">No Categories Available</div>\n// // //         )}\n// // //       </div>\n// // //       <Footer/>\n// // //     </div>\n\n// // //   );\n// // // }\n\n// // import React, { useEffect, useState } from 'react';\n// // import Card from '../components/Card';\n// // import Carousel from '../components/Carousel';\n// // import Footer from '../components/Footer';\n// // import Navbar from '../components/Navbar';\n\n// // export default function Home() {\n// //   const [foodCat, setFoodCat] = useState([]);\n// //   const [foodItems, setFoodItems] = useState([]);\n// //   const [search, setSearch] = useState('');\n// //   const [loading, setLoading] = useState(true);\n\n// //   const loadFoodItems = async () => {\n// //     setLoading(true);\n// //     try {\n// //       const response = await fetch(\"http://localhost:5000/api/foodData\", {\n// //         method: 'POST',\n// //         headers: { 'Content-Type': 'application/json' },\n// //       });\n\n// //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n\n// //       const data = await response.json();\n// //       if (Array.isArray(data) && data.length === 2) {\n// //         setFoodItems(data[0] || []);\n// //         setFoodCat(data[1] || []);\n// //       } else {\n// //         console.error(\"Unexpected response format:\", data);\n// //       }\n// //     } catch (error) {\n// //       console.error(\"Error loading food items:\", error);\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   useEffect(() => {\n// //     loadFoodItems();\n// //   }, []);\n\n// //   return (\n// //     <div className=\"bg-dark text-light min-vh-100\">\n// //       <Navbar />\n// //       <Carousel onSearchChange={setSearch} />\n// //       <div className='container py-4'>\n// //         {loading ? (\n// //           <div className=\"text-center text-light\">Loading...</div>\n// //         ) : foodCat.length > 0 ? (\n// //           foodCat.map((category) => (\n// //             <div className='row mb-3' key={category.CategoryName}>\n// //               <div className='fs-3 m-3'>{category.CategoryName}</div>\n// //               <hr className=\"bg-light\" />\n// //               {foodItems.length > 0 ? foodItems\n// //                 .filter(item => item.name === category.CategoryName && item.name.toLowerCase().includes(search.toLowerCase()))\n// //                 .map(filteredItem => (\n// //                   <div key={filteredItem._id} className='col-12 col-md-6 col-lg-3'>\n// //                     <Card foodItem={filteredItem} options={{ half: filteredItem.halfPrice, full: filteredItem.fullPrice }} />\n// //                   </div>\n// //                 )) : <div className=\"text-center text-light\">No Data Available</div>}\n// //             </div>\n// //           ))\n// //         ) : (\n// //           <div className=\"text-center text-light\">No Categories Available</div>\n// //         )}\n// //       </div>\n// //       <Footer />\n// //     </div>\n// //   );\n// // }\n\n// import React, { useEffect, useState } from 'react';\n// import Card from '../components/Card';\n// import Carousel from '../components/Carousel';\n// import Footer from '../components/Footer';\n// import Navbar from '../components/Navbar';\n// import UploadFoodItem from '../components/UploadFoodItem';\n// export default function Home() {\n//   const [foodCat, setFoodCat] = useState([]);\n//   const [foodItems, setFoodItems] = useState([]);\n//   const [search, setSearch] = useState('');\n//   const [loading, setLoading] = useState(true);\n\n//   const loadFoodItems = async () => {\n//     setLoading(true);\n//     try {\n//       let response = await fetch(\"http://localhost:5000/api/foodData\", {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! Status: ${response.status}`);\n//       }\n\n//       let data = await response.json();\n//       // console.log(\"API Response:\", data);\n\n//       if (Array.isArray(data) && data.length === 2) {\n//         setFoodItems(data[0] || []);\n//         setFoodCat(data[1] || []);\n//       } else {\n//         console.error(\"Unexpected response format:\", data);\n//       }\n//     } catch (error) {\n//       console.error(\"Error loading food items:\", error);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     const formData = new FormData();\n//     formData.append('name', name);\n//     formData.append('halfPrice', halfPrice);\n//     formData.append('fullPrice', fullPrice);\n//     formData.append('image', image);\n\n//     try {\n//       const response = await fetch('http://localhost:5000/api/admin/add-food-item', {\n//         method: 'POST',\n//         body: formData,\n//       });\n\n//       const data = await response.json();\n\n//       if (response.ok) {\n//         setSuccessMessage('Food item uploaded successfully!');\n//         setName('');\n//         setPriceHalf('');\n//         setPriceFull('');\n//         setImage(null);\n\n//         // Trigger a data reload in Home.js\n//         if (props.onItemAdded) {\n//           props.onItemAdded();\n//         }\n\n//         setTimeout(() => setSuccessMessage(''), 3000);\n//       } else {\n//         setErrorMessage(data.error || 'Failed to upload the food item.');\n//         setTimeout(() => setErrorMessage(''), 3000);\n//       }\n//     } catch (error) {\n//       setErrorMessage('An error occurred. Please try again.');\n//       setTimeout(() => setErrorMessage(''), 3000);\n//     }\n//   };\n\n//   useEffect(() => {\n//     loadFoodItems();\n//   }, []);\n\n//   return (\n//     <div className=\"bg-dark text-light min-vh-100\">\n//       <Navbar />\n//       <Carousel onSearchChange={setSearch} />\n//       <div className='container py-4'>\n//         {loading ? (\n//           <div className=\"text-center text-light\">Loading...</div>\n//         ) : foodCat.length > 0 ? (\n//           foodCat.map((category) => (\n//             <div className='row mb-3' key={category.id}>\n//               <div className='fs-3 m-3'>\n//                 {category.CategoryName}\n//               </div>\n//               <hr id=\"hr-success\" style={{ height: \"4px\", backgroundImage: \"linear-gradient(left,rgb(0, 255, 137),rgb(0, 0, 0))\" }} />\n//               {foodItems.length > 0 ? foodItems\n//                 .filter(item => item.CategoryName === category.CategoryName && item.name.toLowerCase().includes(search.toLowerCase()))\n//                 .map(filteredItem => (\n//                   <div key={filteredItem.id} className='col-12 col-md-6 col-lg-3'>\n//                     <Card \n//                       foodItem={filteredItem} \n//                       imageUrl={`http://localhost:5000/uploads/${filteredItem.image}`} // Ensure the image URL is correct\n//                       options={filteredItem.options[0]} \n//                     />\n//                   </div>\n//                 ))\n//                 : <div className=\"text-center text-light\">No Such Data</div>}\n//             </div>\n//           ))\n//         ) : (\n//           <div className=\"text-center text-light\">No Categories Available</div>\n//         )}\n//       </div>\n//       <div className=\"container my-5\">\n//         <UploadFoodItem onItemAdded={loadFoodItems} />\n//       </div>\n//       <Footer />\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/ruhan/Documents/gofood/mernapp/src/screens/Home.js"],"sourcesContent":["// // // import React, { useEffect, useState } from 'react';\n// // // import Card from '../components/Card';\n// // // import Carousel from '../components/Carousel';\n// // // import Footer from '../components/Footer';\n// // // import Navbar from '../components/Navbar';\n\n// // // export default function Home() {\n// // //   const [foodCat, setFoodCat] = useState([]);\n// // //   const [foodItems, setFoodItems] = useState([]);\n// // //   const [search, setSearch] = useState('');\n// // //   const [loading, setLoading] = useState(true);\n\n// // //   const loadFoodItems = async () => {\n// // //     setLoading(true);\n// // //     try {\n// // //       let response = await fetch(\"http://localhost:5000/api/foodData\", {\n// // //         method: 'POST',\n// // //         headers: {\n// // //           'Content-Type': 'application/json',\n// // //         },\n// // //       });\n\n// // //       if (!response.ok) {\n// // //         throw new Error(`HTTP error! Status: ${response.status}`);\n// // //       }\n\n// // //       let data = await response.json();\n// // //       // console.log(\"API Response:\", data);\n\n// // //       if (Array.isArray(data) && data.length === 2) {\n// // //         setFoodItems(data[0] || []);\n// // //         setFoodCat(data[1] || []);\n// // //       } else {\n// // //         console.error(\"Unexpected response format:\", data);\n// // //       }\n// // //     } catch (error) {\n// // //       console.error(\"Error loading food items:\", error);\n// // //     } finally {\n// // //       setLoading(false);\n// // //     }\n// // //   };\n\n// // //   useEffect(() => {\n// // //     loadFoodItems();\n// // //   }, []);\n\n// // //   return (\n// // //     <div className=\"bg-dark text-light min-vh-100\">\n// // //       <Navbar />\n// // //       <Carousel onSearchChange={setSearch} />\n// // //       <div className='container py-4'>\n// // //         {loading ? (\n// // //           <div className=\"text-center text-light\">Loading...</div>\n// // //         ) : foodCat.length > 0 ? (\n// // //           foodCat.map((category) => (\n// // //             <div className='row mb-3' key={category.id}>\n// // //               <div className='fs-3 m-3'>\n// // //                 {category.CategoryName}\n// // //               </div>\n// // //               <hr id=\"hr-success\" style={{ height: \"4px\", backgroundImage: \"linear-gradient(left,rgb(0, 255, 137),rgb(0, 0, 0))\" }} />\n// // //               {foodItems.length > 0 ? foodItems\n// // //                 .filter(item => item.CategoryName === category.CategoryName && item.name.toLowerCase().includes(search.toLowerCase()))\n// // //                 .map(filteredItem => (\n// // //                   <div key={filteredItem.id} className='col-12 col-md-6 col-lg-3'>\n// // //                     <Card foodItem={filteredItem}  options={filteredItem.options[0]}  />\n// // //                   </div>\n// // //                 ))\n// // //                 : <div className=\"text-center text-light\">No Such Data</div>}\n// // //             </div>\n// // //           ))\n// // //         ) : (\n// // //           <div className=\"text-center text-light\">No Categories Available</div>\n// // //         )}\n// // //       </div>\n// // //       <Footer/>\n// // //     </div>\n    \n// // //   );\n// // // }\n\n\n\n// // import React, { useEffect, useState } from 'react';\n// // import Card from '../components/Card';\n// // import Carousel from '../components/Carousel';\n// // import Footer from '../components/Footer';\n// // import Navbar from '../components/Navbar';\n\n// // export default function Home() {\n// //   const [foodCat, setFoodCat] = useState([]);\n// //   const [foodItems, setFoodItems] = useState([]);\n// //   const [search, setSearch] = useState('');\n// //   const [loading, setLoading] = useState(true);\n\n// //   const loadFoodItems = async () => {\n// //     setLoading(true);\n// //     try {\n// //       const response = await fetch(\"http://localhost:5000/api/foodData\", {\n// //         method: 'POST',\n// //         headers: { 'Content-Type': 'application/json' },\n// //       });\n\n// //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n      \n// //       const data = await response.json();\n// //       if (Array.isArray(data) && data.length === 2) {\n// //         setFoodItems(data[0] || []);\n// //         setFoodCat(data[1] || []);\n// //       } else {\n// //         console.error(\"Unexpected response format:\", data);\n// //       }\n// //     } catch (error) {\n// //       console.error(\"Error loading food items:\", error);\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   useEffect(() => {\n// //     loadFoodItems();\n// //   }, []);\n\n// //   return (\n// //     <div className=\"bg-dark text-light min-vh-100\">\n// //       <Navbar />\n// //       <Carousel onSearchChange={setSearch} />\n// //       <div className='container py-4'>\n// //         {loading ? (\n// //           <div className=\"text-center text-light\">Loading...</div>\n// //         ) : foodCat.length > 0 ? (\n// //           foodCat.map((category) => (\n// //             <div className='row mb-3' key={category.CategoryName}>\n// //               <div className='fs-3 m-3'>{category.CategoryName}</div>\n// //               <hr className=\"bg-light\" />\n// //               {foodItems.length > 0 ? foodItems\n// //                 .filter(item => item.name === category.CategoryName && item.name.toLowerCase().includes(search.toLowerCase()))\n// //                 .map(filteredItem => (\n// //                   <div key={filteredItem._id} className='col-12 col-md-6 col-lg-3'>\n// //                     <Card foodItem={filteredItem} options={{ half: filteredItem.halfPrice, full: filteredItem.fullPrice }} />\n// //                   </div>\n// //                 )) : <div className=\"text-center text-light\">No Data Available</div>}\n// //             </div>\n// //           ))\n// //         ) : (\n// //           <div className=\"text-center text-light\">No Categories Available</div>\n// //         )}\n// //       </div>\n// //       <Footer />\n// //     </div>\n// //   );\n// // }\n\n\n\n// import React, { useEffect, useState } from 'react';\n// import Card from '../components/Card';\n// import Carousel from '../components/Carousel';\n// import Footer from '../components/Footer';\n// import Navbar from '../components/Navbar';\n// import UploadFoodItem from '../components/UploadFoodItem';\n// export default function Home() {\n//   const [foodCat, setFoodCat] = useState([]);\n//   const [foodItems, setFoodItems] = useState([]);\n//   const [search, setSearch] = useState('');\n//   const [loading, setLoading] = useState(true);\n\n//   const loadFoodItems = async () => {\n//     setLoading(true);\n//     try {\n//       let response = await fetch(\"http://localhost:5000/api/foodData\", {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! Status: ${response.status}`);\n//       }\n\n//       let data = await response.json();\n//       // console.log(\"API Response:\", data);\n\n//       if (Array.isArray(data) && data.length === 2) {\n//         setFoodItems(data[0] || []);\n//         setFoodCat(data[1] || []);\n//       } else {\n//         console.error(\"Unexpected response format:\", data);\n//       }\n//     } catch (error) {\n//       console.error(\"Error loading food items:\", error);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n  \n//     const formData = new FormData();\n//     formData.append('name', name);\n//     formData.append('halfPrice', halfPrice);\n//     formData.append('fullPrice', fullPrice);\n//     formData.append('image', image);\n  \n//     try {\n//       const response = await fetch('http://localhost:5000/api/admin/add-food-item', {\n//         method: 'POST',\n//         body: formData,\n//       });\n  \n//       const data = await response.json();\n  \n//       if (response.ok) {\n//         setSuccessMessage('Food item uploaded successfully!');\n//         setName('');\n//         setPriceHalf('');\n//         setPriceFull('');\n//         setImage(null);\n  \n//         // Trigger a data reload in Home.js\n//         if (props.onItemAdded) {\n//           props.onItemAdded();\n//         }\n  \n//         setTimeout(() => setSuccessMessage(''), 3000);\n//       } else {\n//         setErrorMessage(data.error || 'Failed to upload the food item.');\n//         setTimeout(() => setErrorMessage(''), 3000);\n//       }\n//     } catch (error) {\n//       setErrorMessage('An error occurred. Please try again.');\n//       setTimeout(() => setErrorMessage(''), 3000);\n//     }\n//   };\n  \n//   useEffect(() => {\n//     loadFoodItems();\n//   }, []);\n\n//   return (\n//     <div className=\"bg-dark text-light min-vh-100\">\n//       <Navbar />\n//       <Carousel onSearchChange={setSearch} />\n//       <div className='container py-4'>\n//         {loading ? (\n//           <div className=\"text-center text-light\">Loading...</div>\n//         ) : foodCat.length > 0 ? (\n//           foodCat.map((category) => (\n//             <div className='row mb-3' key={category.id}>\n//               <div className='fs-3 m-3'>\n//                 {category.CategoryName}\n//               </div>\n//               <hr id=\"hr-success\" style={{ height: \"4px\", backgroundImage: \"linear-gradient(left,rgb(0, 255, 137),rgb(0, 0, 0))\" }} />\n//               {foodItems.length > 0 ? foodItems\n//                 .filter(item => item.CategoryName === category.CategoryName && item.name.toLowerCase().includes(search.toLowerCase()))\n//                 .map(filteredItem => (\n//                   <div key={filteredItem.id} className='col-12 col-md-6 col-lg-3'>\n//                     <Card \n//                       foodItem={filteredItem} \n//                       imageUrl={`http://localhost:5000/uploads/${filteredItem.image}`} // Ensure the image URL is correct\n//                       options={filteredItem.options[0]} \n//                     />\n//                   </div>\n//                 ))\n//                 : <div className=\"text-center text-light\">No Such Data</div>}\n//             </div>\n//           ))\n//         ) : (\n//           <div className=\"text-center text-light\">No Categories Available</div>\n//         )}\n//       </div>\n//       <div className=\"container my-5\">\n//         <UploadFoodItem onItemAdded={loadFoodItems} />\n//       </div>\n//       <Footer />\n//     </div>\n//   );\n// }\n\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}