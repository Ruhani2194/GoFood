{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruhan\\\\Documents\\\\gofood\\\\mernapp\\\\src\\\\components\\\\ProfileDahboard.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import 'bootstrap/dist/css/bootstrap.min.css'; \n\n// function ProfileDashboard() {\n//   const [profiles, setProfiles] = useState([]);\n//   const [profile, setProfile] = useState({ name: '', email: '', bio: '' });\n//   const [editProfileId, setEditProfileId] = useState(null);\n//   const fetchProfiles = async () => {\n//     try {\n//       const response = await fetch('http://localhost:5000/api/user-profiles');\n//       const data = await response.json();\n//       setProfiles(data);\n//     } catch (error) {\n//       console.error('Error fetching profiles:', error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchProfiles();\n//   }, []);\n\n//   const handleSave = async () => {\n//     try {\n//       if (editProfileId) {\n\n//         const response = await fetch(`http://localhost:5000/api/user-profiles/${editProfileId}`, {\n//           method: 'PUT',\n//           headers: { 'Content-Type': 'application/json' },\n//           body: JSON.stringify(profile),\n//         });\n//         const data = await response.json();\n//         setProfiles(profiles.map(p => p._id === data._id ? data : p));\n//       } else {\n\n//         const response = await fetch('http://localhost:5000/api/user-profiles', {\n//           method: 'POST',\n//           headers: { 'Content-Type': 'application/json' },\n//           body: JSON.stringify(profile),\n//         });\n//         const data = await response.json();\n//         setProfiles([...profiles, data]);\n//       }\n//       setProfile({ name: '', email: '', bio: '' });\n//       setEditProfileId(null);\n//     } catch (error) {\n//       console.error('Error saving profile:', error);\n//     }\n//   };\n\n//   const handleDelete = async (id) => {\n//     try {\n//       await fetch(`http://localhost:5000/api/user-profiles/${id}`, { method: 'DELETE' });\n//       setProfiles(profiles.filter(p => p._id !== id));\n//     } catch (error) {\n//       console.error('Error deleting profile:', error);\n//     }\n//   };\n\n//   const handleEdit = (profile) => {\n//     setProfile(profile);\n//     setEditProfileId(profile._id);\n//   };\n\n//   return (\n//     <div className=\"bg-dark text-light min-vh-100 p-4\">\n//       <h2 className=\"text-center mb-4\">Profile Dashboard</h2>\n//       <div className=\"container\">\n//         <div className=\"mb-4\">\n//           <h3>{editProfileId ? 'Edit Profile' : 'Add New Profile'}</h3>\n//           <div className=\"mb-3\">\n//             <input\n//               type=\"text\"\n//               className=\"form-control mb-2\"\n//               value={profile.name}\n//               onChange={(e) => setProfile({ ...profile, name: e.target.value })}\n//               placeholder=\"Name\"\n//             />\n//             <input\n//               type=\"email\"\n//               className=\"form-control mb-2\"\n//               value={profile.email}\n//               onChange={(e) => setProfile({ ...profile, email: e.target.value })}\n//               placeholder=\"Email\"\n//             />\n//             <textarea\n//               className=\"form-control mb-2\"\n//               value={profile.bio}\n//               onChange={(e) => setProfile({ ...profile, bio: e.target.value })}\n//               placeholder=\"Bio\"\n//               rows=\"3\"\n//             />\n//             <button\n//               className=\"btn btn-primary\"\n//               onClick={handleSave}\n//             >\n//               {editProfileId ? 'Update Profile' : 'Save Profile'}\n//             </button>\n//           </div>\n//         </div>\n//         <ul className=\"list-group\">\n//           {profiles.map(p => (\n//             <li key={p._id} className=\"list-group-item d-flex justify-content-between align-items-center bg-secondary text-light mb-2\">\n//               <div>\n//                 <strong>{p.name}</strong> ({p.email}): {p.bio}\n//               </div>\n//               <div>\n//                 <button\n//                   className=\"btn btn-warning btn-sm me-2\"\n//                   onClick={() => handleEdit(p)}\n//                 >\n//                   Edit\n//                 </button>\n//                 <button\n//                   className=\"btn btn-danger btn-sm\"\n//                   onClick={() => handleDelete(p._id)}\n//                 >\n//                   Delete\n//                 </button>\n//               </div>\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default ProfileDashboard;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProfileDashboard() {\n  _s();\n  const [file, setFile] = useState(null);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleFileSubmit = async e => {\n    e.preventDefault();\n    if (!file) {\n      alert('Please choose a file to upload');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('profileImage', file);\n    try {\n      const response = await axios.post('/api/upload-profile', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert('Profile image uploaded successfully');\n      console.log(response.data); // You can update the UI with the new profile image path or data\n    } catch (error) {\n      console.error('Error uploading profile image:', error);\n      alert('Error uploading profile image');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Profile Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFileSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Upload Profile Image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileChange,\n          accept: \"image/*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n}\n_s(ProfileDashboard, \"Nkb8eHkBruGouXteoqeZ1R6wRVk=\");\n_c = ProfileDashboard;\nexport default ProfileDashboard;\nvar _c;\n$RefreshReg$(_c, \"ProfileDashboard\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ProfileDashboard","_s","file","setFile","handleFileChange","e","target","files","handleFileSubmit","preventDefault","alert","formData","FormData","append","response","post","headers","console","log","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","accept","_c","$RefreshReg$"],"sources":["C:/Users/ruhan/Documents/gofood/mernapp/src/components/ProfileDahboard.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import 'bootstrap/dist/css/bootstrap.min.css'; \r\n\r\n// function ProfileDashboard() {\r\n//   const [profiles, setProfiles] = useState([]);\r\n//   const [profile, setProfile] = useState({ name: '', email: '', bio: '' });\r\n//   const [editProfileId, setEditProfileId] = useState(null);\r\n//   const fetchProfiles = async () => {\r\n//     try {\r\n//       const response = await fetch('http://localhost:5000/api/user-profiles');\r\n//       const data = await response.json();\r\n//       setProfiles(data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching profiles:', error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchProfiles();\r\n//   }, []);\r\n\r\n\r\n//   const handleSave = async () => {\r\n//     try {\r\n//       if (editProfileId) {\r\n        \r\n//         const response = await fetch(`http://localhost:5000/api/user-profiles/${editProfileId}`, {\r\n//           method: 'PUT',\r\n//           headers: { 'Content-Type': 'application/json' },\r\n//           body: JSON.stringify(profile),\r\n//         });\r\n//         const data = await response.json();\r\n//         setProfiles(profiles.map(p => p._id === data._id ? data : p));\r\n//       } else {\r\n      \r\n//         const response = await fetch('http://localhost:5000/api/user-profiles', {\r\n//           method: 'POST',\r\n//           headers: { 'Content-Type': 'application/json' },\r\n//           body: JSON.stringify(profile),\r\n//         });\r\n//         const data = await response.json();\r\n//         setProfiles([...profiles, data]);\r\n//       }\r\n//       setProfile({ name: '', email: '', bio: '' });\r\n//       setEditProfileId(null);\r\n//     } catch (error) {\r\n//       console.error('Error saving profile:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleDelete = async (id) => {\r\n//     try {\r\n//       await fetch(`http://localhost:5000/api/user-profiles/${id}`, { method: 'DELETE' });\r\n//       setProfiles(profiles.filter(p => p._id !== id));\r\n//     } catch (error) {\r\n//       console.error('Error deleting profile:', error);\r\n//     }\r\n//   };\r\n\r\n\r\n//   const handleEdit = (profile) => {\r\n//     setProfile(profile);\r\n//     setEditProfileId(profile._id);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"bg-dark text-light min-vh-100 p-4\">\r\n//       <h2 className=\"text-center mb-4\">Profile Dashboard</h2>\r\n//       <div className=\"container\">\r\n//         <div className=\"mb-4\">\r\n//           <h3>{editProfileId ? 'Edit Profile' : 'Add New Profile'}</h3>\r\n//           <div className=\"mb-3\">\r\n//             <input\r\n//               type=\"text\"\r\n//               className=\"form-control mb-2\"\r\n//               value={profile.name}\r\n//               onChange={(e) => setProfile({ ...profile, name: e.target.value })}\r\n//               placeholder=\"Name\"\r\n//             />\r\n//             <input\r\n//               type=\"email\"\r\n//               className=\"form-control mb-2\"\r\n//               value={profile.email}\r\n//               onChange={(e) => setProfile({ ...profile, email: e.target.value })}\r\n//               placeholder=\"Email\"\r\n//             />\r\n//             <textarea\r\n//               className=\"form-control mb-2\"\r\n//               value={profile.bio}\r\n//               onChange={(e) => setProfile({ ...profile, bio: e.target.value })}\r\n//               placeholder=\"Bio\"\r\n//               rows=\"3\"\r\n//             />\r\n//             <button\r\n//               className=\"btn btn-primary\"\r\n//               onClick={handleSave}\r\n//             >\r\n//               {editProfileId ? 'Update Profile' : 'Save Profile'}\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//         <ul className=\"list-group\">\r\n//           {profiles.map(p => (\r\n//             <li key={p._id} className=\"list-group-item d-flex justify-content-between align-items-center bg-secondary text-light mb-2\">\r\n//               <div>\r\n//                 <strong>{p.name}</strong> ({p.email}): {p.bio}\r\n//               </div>\r\n//               <div>\r\n//                 <button\r\n//                   className=\"btn btn-warning btn-sm me-2\"\r\n//                   onClick={() => handleEdit(p)}\r\n//                 >\r\n//                   Edit\r\n//                 </button>\r\n//                 <button\r\n//                   className=\"btn btn-danger btn-sm\"\r\n//                   onClick={() => handleDelete(p._id)}\r\n//                 >\r\n//                   Delete\r\n//                 </button>\r\n//               </div>\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default ProfileDashboard;\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction ProfileDashboard() {\r\n  const [file, setFile] = useState(null);\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleFileSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!file) {\r\n      alert('Please choose a file to upload');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('profileImage', file);\r\n\r\n    try {\r\n      const response = await axios.post('/api/upload-profile', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n\r\n      alert('Profile image uploaded successfully');\r\n      console.log(response.data); // You can update the UI with the new profile image path or data\r\n\r\n    } catch (error) {\r\n      console.error('Error uploading profile image:', error);\r\n      alert('Error uploading profile image');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile-dashboard\">\r\n      <h2>Profile Dashboard</h2>\r\n      <form onSubmit={handleFileSubmit}>\r\n        <div>\r\n          <label>Upload Profile Image:</label>\r\n          <input type=\"file\" onChange={handleFileChange} accept=\"image/*\" />\r\n        </div>\r\n        <button type=\"submit\">Upload</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileDashboard;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMQ,gBAAgB,GAAIC,CAAC,IAAK;IAC9BF,OAAO,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAOH,CAAC,IAAK;IACpCA,CAAC,CAACI,cAAc,CAAC,CAAC;IAElB,IAAI,CAACP,IAAI,EAAE;MACTQ,KAAK,CAAC,gCAAgC,CAAC;MACvC;IACF;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAEX,IAAI,CAAC;IAErC,IAAI;MACF,MAAMY,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAC,qBAAqB,EAAEJ,QAAQ,EAAE;QACjEK,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEFN,KAAK,CAAC,qCAAqC,CAAC;MAC5CO,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC;IAE9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtDV,KAAK,CAAC,+BAA+B,CAAC;IACxC;EACF,CAAC;EAED,oBACEX,OAAA;IAAKsB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCvB,OAAA;MAAAuB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1B3B,OAAA;MAAM4B,QAAQ,EAAEnB,gBAAiB;MAAAc,QAAA,gBAC/BvB,OAAA;QAAAuB,QAAA,gBACEvB,OAAA;UAAAuB,QAAA,EAAO;QAAqB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpC3B,OAAA;UAAO6B,IAAI,EAAC,MAAM;UAACC,QAAQ,EAAEzB,gBAAiB;UAAC0B,MAAM,EAAC;QAAS;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/D,CAAC,eACN3B,OAAA;QAAQ6B,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACzB,EAAA,CA9CQD,gBAAgB;AAAA+B,EAAA,GAAhB/B,gBAAgB;AAgDzB,eAAeA,gBAAgB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}