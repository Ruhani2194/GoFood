{"ast":null,"code":"\n// import React from 'react'\n// import { useNavigate } from 'react-router-dom'\n// import { useDispatchCart, useCart } from './ContextReducer'\n// import { Dropdown, DropdownButton } from 'react-bootstrap';\n// export default function Card(props) {\n//   let data = useCart();\n\n//   let navigate = useNavigate()\n//   const [qty, setQty] = useState(1)\n//   const [size, setSize] = useState(\"\")\n//   const priceRef = useRef();\n//   // const [btnEnable, setBtnEnable] = useState(false);\n//   // let totval = 0\n//   // let price = Object.values(options).map((value) => {\n//   //   return parseInt(value, 10);\n//   // });\n//   let options = props.options;\n//   let priceOptions = Object.keys(options);\n//   let foodItem = props.item;\n//   const dispatch = useDispatchCart();\n//   const handleClick = () => {\n//     if (!localStorage.getItem(\"token\")) {\n//       navigate(\"/login\")\n//     }\n//   }\n//   const handleQty = (e) => {\n//     setQty(e.target.value);\n//   }\n//   const handleOptions = (e) => {\n//     setSize(e.target.value);\n//   }\n//   const handleAddToCart = async () => {\n//     let food = []\n//     for (const item of data) {\n//       if (item.id === foodItem._id) {\n//         food = item;\n\n//         break;\n//       }\n//     }\n//     console.log(food)\n//     console.log(new Date())\n//     if (food !== []) {\n//       if (food.size === size) {\n//         await dispatch({ type: \"UPDATE\", id: foodItem._id, price: finalPrice, qty: qty })\n//         return\n//       }\n//       else if (food.size !== size) {\n//         await dispatch({ type: \"ADD\", id: foodItem._id, name: foodItem.name, price: finalPrice, qty: qty, size: size,img: props.ImgSrc })\n//         console.log(\"Size different so simply ADD one more to the list\")\n//         return\n//       }\n//       return\n//     }\n\n//     await dispatch({ type: \"ADD\", id: foodItem._id, name: foodItem.name, price: finalPrice, qty: qty, size: size })\n\n//     // setBtnEnable(true)\n\n//   }\n\n//   useEffect(() => {\n//     setSize(priceRef.current.value)\n//   }, [])\n\n//   // useEffect(()=>{\n//   // checkBtn();\n//   //   },[data])\n\n//   let finalPrice = qty * parseInt(options[size]);   //This is where Price is changing\n//   // totval += finalPrice;\n// console.log(totval)\n//   return (\n//     <div>\n//     </div>\n//   )\n// }\n// //\n// import React from 'react'\n\n// export default function Card() {\n//   return (\n//     <div>\n//       <div>\n\n//       <div className=\"card mt-3\" style={{ \"width\": \"18rem\", \"maxHeight\":\"360px\" }}>\n\n//       <img src=\"/Noodles.jpeg\" className =\"card-img-top\" alt=\"...\" />\n\n//       <div className=\"card-body\">\n\n//       <h5 className=\"card-title\">Card title</h5>\n\n//       <p className=\"card-text\">This is some Important text.</p>\n\n//       <div className='container w-100' >\n\n//       <select className='m-2 h-100  bg-success rounded'>\n\n//       {Array.from(Array(6), (e,i)=>{\n\n//       return(\n\n//       <option key={i+1} value={i+1}> {i+1} </option>)})}\n\n//       </select>\n//       <select className='m-2 h-100 bg-success rounded'>\n//         <option value=\"half\">Half</option>\n//         <option value=\"full\">Full</option>\n//       </select>\n//       <div className='d-inline h-100 fs-5'>TotalPrice</div>\n\n//       </div>\n\n//       </div>\n\n//       </div></div>\n//     </div>\n//   )\n// }\n\n// import React, { useEffect, useState } from 'react';\n// import Card from '../components/Card';\n// import Carousel from '../components/Carousel';\n// import Footer from '../components/Footer';\n// import Navbar from '../components/Navbar';\n\n// export default function Home() {\n//   const [foodCat, setFoodCat] = useState([]);\n//   const [foodItems, setFoodItems] = useState([]);\n//   const [search, setSearch] = useState('');\n\n//   const loadFoodItems = async () => {\n//     try {\n//       let response = await fetch('http://localhost:5000/api/foodData', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! status: ${response.status}`);\n//       }\n\n//       response = await response.json();\n\n//       if (response && Array.isArray(response) && response.length === 2) {\n//         setFoodItems(response[0] || []);\n//         setFoodCat(response[1] || []);\n//       } else {\n//         console.error('Unexpected response format:', response);\n//       }\n//     } catch (error) {\n//       console.error('Error loading food items:', error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     loadFoodItems();\n//   }, []);\n\n//   return (\n//     <div>\n//       <Navbar />\n//       <Carousel />\n//       <div className='container'>\n//         {foodCat && foodCat.length > 0 ? foodCat.map((data) => (\n//           <div className='row mb-3' key={data._id}>\n//             <div className='fs-3 m-3'>{data.CategoryName}</div>\n//             <hr id=\"hr-success\" style={{ height: \"4px\", backgroundImage: \"-webkit-linear-gradient(left, rgb(0, 255, 137), rgb(0, 0, 0))\" }} />\n//             {foodItems && foodItems.length > 0 ? foodItems.filter(\n//               (item) => item.CategoryName === data.CategoryName && item.name.toLowerCase().includes(search.toLowerCase())\n//             ).map(filterItems => (\n//               <div key={filterItems._id} className='col-12 col-md-6 col-lg-3'>\n//                 <Card foodName={filterItems.name} item={filterItems} options={filterItems.options[0]} ImgSrc={filterItems.img} />\n//               </div>\n//             )) : <div>No Such Data</div>}\n//           </div>\n//         )) : <div>Loading Categories...</div>}\n//       </div>\n//       <Footer />\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/ruhan/Documents/gofood/mernapp/src/components/Card.js"],"sourcesContent":["\n// import React from 'react'\n// import { useNavigate } from 'react-router-dom'\n// import { useDispatchCart, useCart } from './ContextReducer'\n// import { Dropdown, DropdownButton } from 'react-bootstrap';\n// export default function Card(props) {\n//   let data = useCart();\n\n//   let navigate = useNavigate()\n//   const [qty, setQty] = useState(1)\n//   const [size, setSize] = useState(\"\")\n//   const priceRef = useRef();\n//   // const [btnEnable, setBtnEnable] = useState(false);\n//   // let totval = 0\n//   // let price = Object.values(options).map((value) => {\n//   //   return parseInt(value, 10);\n//   // });\n//   let options = props.options;\n//   let priceOptions = Object.keys(options);\n//   let foodItem = props.item;\n//   const dispatch = useDispatchCart();\n//   const handleClick = () => {\n//     if (!localStorage.getItem(\"token\")) {\n//       navigate(\"/login\")\n//     }\n//   }\n//   const handleQty = (e) => {\n//     setQty(e.target.value);\n//   }\n//   const handleOptions = (e) => {\n//     setSize(e.target.value);\n//   }\n//   const handleAddToCart = async () => {\n//     let food = []\n//     for (const item of data) {\n//       if (item.id === foodItem._id) {\n//         food = item;\n\n//         break;\n//       }\n//     }\n//     console.log(food)\n//     console.log(new Date())\n//     if (food !== []) {\n//       if (food.size === size) {\n//         await dispatch({ type: \"UPDATE\", id: foodItem._id, price: finalPrice, qty: qty })\n//         return\n//       }\n//       else if (food.size !== size) {\n//         await dispatch({ type: \"ADD\", id: foodItem._id, name: foodItem.name, price: finalPrice, qty: qty, size: size,img: props.ImgSrc })\n//         console.log(\"Size different so simply ADD one more to the list\")\n//         return\n//       }\n//       return\n//     }\n\n//     await dispatch({ type: \"ADD\", id: foodItem._id, name: foodItem.name, price: finalPrice, qty: qty, size: size })\n\n\n//     // setBtnEnable(true)\n\n//   }\n\n//   useEffect(() => {\n//     setSize(priceRef.current.value)\n//   }, [])\n\n//   // useEffect(()=>{\n//   // checkBtn();\n//   //   },[data])\n\n//   let finalPrice = qty * parseInt(options[size]);   //This is where Price is changing\n//   // totval += finalPrice;\n  // console.log(totval)\n//   return (\n//     <div>\n//     </div>\n//   )\n// }\n// //\n// import React from 'react'\n\n// export default function Card() {\n//   return (\n//     <div>\n//       <div>\n      \n//       <div className=\"card mt-3\" style={{ \"width\": \"18rem\", \"maxHeight\":\"360px\" }}>\n      \n//       <img src=\"/Noodles.jpeg\" className =\"card-img-top\" alt=\"...\" />\n      \n//       <div className=\"card-body\">\n      \n//       <h5 className=\"card-title\">Card title</h5>\n      \n//       <p className=\"card-text\">This is some Important text.</p>\n      \n//       <div className='container w-100' >\n      \n//       <select className='m-2 h-100  bg-success rounded'>\n      \n//       {Array.from(Array(6), (e,i)=>{\n      \n//       return(\n      \n//       <option key={i+1} value={i+1}> {i+1} </option>)})}\n      \n//       </select>\n//       <select className='m-2 h-100 bg-success rounded'>\n//         <option value=\"half\">Half</option>\n//         <option value=\"full\">Full</option>\n//       </select>\n//       <div className='d-inline h-100 fs-5'>TotalPrice</div>\n      \n//       </div>\n      \n//       </div>\n      \n//       </div></div>\n//     </div>\n//   )\n// }\n\n\n// import React, { useEffect, useState } from 'react';\n// import Card from '../components/Card';\n// import Carousel from '../components/Carousel';\n// import Footer from '../components/Footer';\n// import Navbar from '../components/Navbar';\n\n// export default function Home() {\n//   const [foodCat, setFoodCat] = useState([]);\n//   const [foodItems, setFoodItems] = useState([]);\n//   const [search, setSearch] = useState('');\n\n//   const loadFoodItems = async () => {\n//     try {\n//       let response = await fetch('http://localhost:5000/api/foodData', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! status: ${response.status}`);\n//       }\n\n//       response = await response.json();\n\n//       if (response && Array.isArray(response) && response.length === 2) {\n//         setFoodItems(response[0] || []);\n//         setFoodCat(response[1] || []);\n//       } else {\n//         console.error('Unexpected response format:', response);\n//       }\n//     } catch (error) {\n//       console.error('Error loading food items:', error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     loadFoodItems();\n//   }, []);\n\n//   return (\n//     <div>\n//       <Navbar />\n//       <Carousel />\n//       <div className='container'>\n//         {foodCat && foodCat.length > 0 ? foodCat.map((data) => (\n//           <div className='row mb-3' key={data._id}>\n//             <div className='fs-3 m-3'>{data.CategoryName}</div>\n//             <hr id=\"hr-success\" style={{ height: \"4px\", backgroundImage: \"-webkit-linear-gradient(left, rgb(0, 255, 137), rgb(0, 0, 0))\" }} />\n//             {foodItems && foodItems.length > 0 ? foodItems.filter(\n//               (item) => item.CategoryName === data.CategoryName && item.name.toLowerCase().includes(search.toLowerCase())\n//             ).map(filterItems => (\n//               <div key={filterItems._id} className='col-12 col-md-6 col-lg-3'>\n//                 <Card foodName={filterItems.name} item={filterItems} options={filterItems.options[0]} ImgSrc={filterItems.img} />\n//               </div>\n//             )) : <div>No Such Data</div>}\n//           </div>\n//         )) : <div>Loading Categories...</div>}\n//       </div>\n//       <Footer />\n//     </div>\n//   );\n// }\n\n"],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}