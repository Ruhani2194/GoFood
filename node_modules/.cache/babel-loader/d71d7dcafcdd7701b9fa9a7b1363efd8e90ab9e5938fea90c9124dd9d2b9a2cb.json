{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruhan\\\\Documents\\\\gofood\\\\mernapp\\\\src\\\\screens\\\\Signup.js\",\n  _s = $RefreshSig$();\n// // import React, { useState } from 'react';\n// // import { useNavigate, Link } from 'react-router-dom';\n// // import Navbar from '../components/Navbar';\n\n// // export default function Signup() {\n// //   const [credentials, setCredentials] = useState({ name: \"\", email: \"\", password: \"\", geolocation: \"\" });\n// //   let navigate = useNavigate();\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     console.log(JSON.stringify({name: credentials.name, email: credentials.email, password: credentials.password, location: credentials.geolocation}));\n// //     const response = await fetch(\"http://localhost:5000/api/createuser\", {\n// //       method: 'POST',\n// //       headers: {\n// //         'Content-Type': 'application/json'\n// //       },\n// //       body: JSON.stringify({ name: credentials.name, email: credentials.email, password: credentials.password, location: credentials.geolocation })\n// //     });\n// //     const json = await response.json();\n// //     console.log(json);\n// //     if (!json.success) {\n// //       alert(\"Enter valid Credentials\");\n// //     } else {\n// //       // Navigate to login or another page upon successful signup\n// //       navigate(\"/login\");\n// //     }\n// //   }\n\n// //   const onChange = (e) => {\n// //     setCredentials({ ...credentials, [e.target.name]: e.target.value });\n// //   }\n\n// //   return (\n// //     <div style={{ backgroundImage: 'url(\"https://images.pexels.com/photos/1565982/pexels-photo-1565982.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")', backgroundSize: 'cover', height: '100vh' }}>\n// //       <div>\n// //         <Navbar />\n// //       </div>\n\n// //       <div className='container'>\n// //         <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n// //           <div className=\"m-3\">\n// //             <label htmlFor=\"name\" className=\"form-label\">Name</label>\n// //             <input type=\"text\" className=\"form-control\" name='name' value={credentials.name} onChange={onChange} aria-describedby=\"emailHelp\" />\n// //           </div>\n// //           <div className=\"m-3\">\n// //             <label htmlFor=\"email\" className=\"form-label\">Email address</label>\n// //             <input type=\"email\" className=\"form-control\" name='email' value={credentials.email} onChange={onChange} aria-describedby=\"emailHelp\" />\n// //           </div>\n// //           <div className=\"m-3\">\n// //             <label htmlFor=\"geolocation\" className=\"form-label\">Location</label>\n// //             <input type=\"text\" className=\"form-control\" name='geolocation' value={credentials.geolocation} onChange={onChange} placeholder=\"Enter your location\" />\n// //           </div>\n// //           <div className=\"m-3\">\n// //             <label htmlFor=\"password\" className=\"form-label\">Password</label>\n// //             <input type=\"password\" className=\"form-control\" value={credentials.password} onChange={onChange} name='password' />\n// //           </div>\n// //           <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n// //           <Link to=\"/login\" className=\"m-3 mx-1 btn btn-danger\">Already a user</Link>\n// //         </form>\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n// import React, { useState } from 'react';\n// import { useNavigate, Link } from 'react-router-dom';\n// import Navbar from '../components/Navbar';\n\n// export default function Signup() {\n//   const [credentials, setCredentials] = useState({\n//     name: \"\",\n//     email: \"\",\n//     password: \"\",\n//     geolocation: \"\",\n//     role: \"user\" // Default to user\n//   });\n//   let navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const response = await fetch(\"http://localhost:5000/api/createuser\", {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify({\n//         name: credentials.name,\n//         email: credentials.email,\n//         password: credentials.password,\n//         location: credentials.geolocation,\n//         role: credentials.role // Send role with the signup data\n//       })\n//     });\n//     const json = await response.json();\n//     if (!json.success) {\n//       alert(\"Enter valid Credentials\");\n//     } else {\n//       navigate(\"/login\");\n//     }\n//   }\n\n//   const onChange = (e) => {\n//     setCredentials({ ...credentials, [e.target.name]: e.target.value });\n//   }\n\n//   return (\n//     <div style={{ backgroundImage: 'url(\"https://images.pexels.com/photos/1565982/pexels-photo-1565982.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")', backgroundSize: 'cover', height: '100vh' }}>\n//       <Navbar />\n//       <div className='container'>\n//         <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"name\" className=\"form-label\">Name</label>\n//             <input type=\"text\" className=\"form-control\" name='name' value={credentials.name} onChange={onChange} />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"email\" className=\"form-label\">Email address</label>\n//             <input type=\"email\" className=\"form-control\" name='email' value={credentials.email} onChange={onChange} />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"geolocation\" className=\"form-label\">Location</label>\n//             <input type=\"text\" className=\"form-control\" name='geolocation' value={credentials.geolocation} onChange={onChange} />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"password\" className=\"form-label\">Password</label>\n//             <input type=\"password\" className=\"form-control\" value={credentials.password} onChange={onChange} name='password' />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"role\" className=\"form-label\">Role</label>\n//             <select className=\"form-control\" name=\"role\" value={credentials.role} onChange={onChange}>\n//               <option value=\"user\">User</option>\n//               <option value=\"admin\">Admin</option>\n//             </select>\n//           </div>\n//           <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n//           <Link to=\"/login\" className=\"m-3 mx-1 btn btn-danger\">Already a user</Link>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\n// import React, { useState } from 'react';\n// import { useNavigate, Link } from 'react-router-dom';\n// import Navbar from '../components/Navbar';\n\n// export default function Signup() {\n//   const [credentials, setCredentials] = useState({\n//     name: \"\",\n//     email: \"\",\n//     password: \"\",\n//     geolocation: \"\",\n//     role: \"user\" // Default to user\n//   });\n//   let navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const response = await fetch(\"http://localhost:5000/api/createuser\", {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify(credentials),\n//     });\n\n//     const json = await response.json();\n\n//     if (json.success) {\n//       alert(\"You are successfully registered. Please log in.\");\n//       navigate(\"/login\");\n//     } else {\n//       alert(\"Error during registration. Please try again.\");\n//     }\n//   };\n\n//   const onChange = (e) => {\n//     setCredentials({ ...credentials, [e.target.name]: e.target.value });\n//   };\n\n//   return (\n//     <div>\n//       <Navbar />\n//       <div className='container'>\n//         <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"name\" className=\"form-label\">Name</label>\n//             <input\n//               type=\"text\"\n//               className=\"form-control\"\n//               name='name'\n//               value={credentials.name}\n//               onChange={onChange}\n//               required\n//             />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"email\" className=\"form-label\">Email address</label>\n//             <input\n//               type=\"email\"\n//               className=\"form-control\"\n//               name='email'\n//               value={credentials.email}\n//               onChange={onChange}\n//               required\n//             />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"password\" className=\"form-label\">Password</label>\n//             <input\n//               type=\"password\"\n//               className=\"form-control\"\n//               name='password'\n//               value={credentials.password}\n//               onChange={onChange}\n//               required\n//             />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"geolocation\" className=\"form-label\">Geolocation</label>\n//             <input\n//               type=\"text\"\n//               className=\"form-control\"\n//               name='geolocation'\n//               value={credentials.geolocation}\n//               onChange={onChange}\n//               required\n//             />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"role\" className=\"form-label\">Role</label>\n//             <select\n//               className=\"form-control\"\n//               name=\"role\"\n//               value={credentials.role}\n//               onChange={onChange}\n//             >\n//               <option value=\"user\">User</option>\n//               <option value=\"admin\">Admin</option>\n//             </select>\n//           </div>\n//           <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n//           <Link to=\"/login\" className=\"m-3 mx-1 btn btn-danger\">Already have an account</Link>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\nimport React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport Navbar from '../components/Navbar'; // Ensure Navbar exists\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Signup() {\n  _s();\n  const [credentials, setCredentials] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    geolocation: \"\",\n    role: \"user\" // Default to user\n  });\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(\"Submitting credentials:\", credentials); // Debugging line\n\n    const response = await fetch(\"http://localhost:5000/api/createuser\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    });\n    const json = await response.json();\n    console.log(\"Response from server:\", json); // Debugging line\n\n    if (json.success) {\n      alert(\"You are successfully registered. Please log in.\");\n      navigate(\"/login\");\n    } else {\n      alert(json.error || \"Error during registration. Please try again.\");\n    }\n  };\n  const onChange = e => {\n    setCredentials({\n      ...credentials,\n      [e.target.name]: e.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"w-50 m-auto mt-5 border bg-dark border-success rounded\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            className: \"form-label\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"name\",\n            value: credentials.name,\n            onChange: onChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"form-label\",\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: \"form-control\",\n            name: \"email\",\n            value: credentials.email,\n            onChange: onChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: \"form-label\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"form-control\",\n            name: \"password\",\n            value: credentials.password,\n            onChange: onChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"geolocation\",\n            className: \"form-label\",\n            children: \"Geolocation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"geolocation\",\n            value: credentials.geolocation,\n            onChange: onChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"role\",\n            className: \"form-label\",\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            name: \"role\",\n            value: credentials.role,\n            onChange: onChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"user\",\n              children: \"User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"admin\",\n              children: \"Admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"m-3 btn btn-success\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          className: \"m-3 mx-1 btn btn-danger\",\n          children: \"Already have an account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 295,\n    columnNumber: 5\n  }, this);\n}\n_s(Signup, \"dX/W8NRShB0ZG24VIxlPyn8bqKs=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","useNavigate","Link","Navbar","jsxDEV","_jsxDEV","Signup","_s","credentials","setCredentials","name","email","password","geolocation","role","navigate","handleSubmit","e","preventDefault","console","log","response","fetch","method","headers","body","JSON","stringify","json","success","alert","error","onChange","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","type","required","to","_c","$RefreshReg$"],"sources":["C:/Users/ruhan/Documents/gofood/mernapp/src/screens/Signup.js"],"sourcesContent":["// // import React, { useState } from 'react';\n// // import { useNavigate, Link } from 'react-router-dom';\n// // import Navbar from '../components/Navbar';\n\n// // export default function Signup() {\n// //   const [credentials, setCredentials] = useState({ name: \"\", email: \"\", password: \"\", geolocation: \"\" });\n// //   let navigate = useNavigate();\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     console.log(JSON.stringify({name: credentials.name, email: credentials.email, password: credentials.password, location: credentials.geolocation}));\n// //     const response = await fetch(\"http://localhost:5000/api/createuser\", {\n// //       method: 'POST',\n// //       headers: {\n// //         'Content-Type': 'application/json'\n// //       },\n// //       body: JSON.stringify({ name: credentials.name, email: credentials.email, password: credentials.password, location: credentials.geolocation })\n// //     });\n// //     const json = await response.json();\n// //     console.log(json);\n// //     if (!json.success) {\n// //       alert(\"Enter valid Credentials\");\n// //     } else {\n// //       // Navigate to login or another page upon successful signup\n// //       navigate(\"/login\");\n// //     }\n// //   }\n\n// //   const onChange = (e) => {\n// //     setCredentials({ ...credentials, [e.target.name]: e.target.value });\n// //   }\n\n// //   return (\n// //     <div style={{ backgroundImage: 'url(\"https://images.pexels.com/photos/1565982/pexels-photo-1565982.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")', backgroundSize: 'cover', height: '100vh' }}>\n// //       <div>\n// //         <Navbar />\n// //       </div>\n\n// //       <div className='container'>\n// //         <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n// //           <div className=\"m-3\">\n// //             <label htmlFor=\"name\" className=\"form-label\">Name</label>\n// //             <input type=\"text\" className=\"form-control\" name='name' value={credentials.name} onChange={onChange} aria-describedby=\"emailHelp\" />\n// //           </div>\n// //           <div className=\"m-3\">\n// //             <label htmlFor=\"email\" className=\"form-label\">Email address</label>\n// //             <input type=\"email\" className=\"form-control\" name='email' value={credentials.email} onChange={onChange} aria-describedby=\"emailHelp\" />\n// //           </div>\n// //           <div className=\"m-3\">\n// //             <label htmlFor=\"geolocation\" className=\"form-label\">Location</label>\n// //             <input type=\"text\" className=\"form-control\" name='geolocation' value={credentials.geolocation} onChange={onChange} placeholder=\"Enter your location\" />\n// //           </div>\n// //           <div className=\"m-3\">\n// //             <label htmlFor=\"password\" className=\"form-label\">Password</label>\n// //             <input type=\"password\" className=\"form-control\" value={credentials.password} onChange={onChange} name='password' />\n// //           </div>\n// //           <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n// //           <Link to=\"/login\" className=\"m-3 mx-1 btn btn-danger\">Already a user</Link>\n// //         </form>\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n\n// import React, { useState } from 'react';\n// import { useNavigate, Link } from 'react-router-dom';\n// import Navbar from '../components/Navbar';\n\n// export default function Signup() {\n//   const [credentials, setCredentials] = useState({\n//     name: \"\",\n//     email: \"\",\n//     password: \"\",\n//     geolocation: \"\",\n//     role: \"user\" // Default to user\n//   });\n//   let navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const response = await fetch(\"http://localhost:5000/api/createuser\", {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify({\n//         name: credentials.name,\n//         email: credentials.email,\n//         password: credentials.password,\n//         location: credentials.geolocation,\n//         role: credentials.role // Send role with the signup data\n//       })\n//     });\n//     const json = await response.json();\n//     if (!json.success) {\n//       alert(\"Enter valid Credentials\");\n//     } else {\n//       navigate(\"/login\");\n//     }\n//   }\n\n//   const onChange = (e) => {\n//     setCredentials({ ...credentials, [e.target.name]: e.target.value });\n//   }\n\n//   return (\n//     <div style={{ backgroundImage: 'url(\"https://images.pexels.com/photos/1565982/pexels-photo-1565982.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")', backgroundSize: 'cover', height: '100vh' }}>\n//       <Navbar />\n//       <div className='container'>\n//         <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"name\" className=\"form-label\">Name</label>\n//             <input type=\"text\" className=\"form-control\" name='name' value={credentials.name} onChange={onChange} />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"email\" className=\"form-label\">Email address</label>\n//             <input type=\"email\" className=\"form-control\" name='email' value={credentials.email} onChange={onChange} />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"geolocation\" className=\"form-label\">Location</label>\n//             <input type=\"text\" className=\"form-control\" name='geolocation' value={credentials.geolocation} onChange={onChange} />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"password\" className=\"form-label\">Password</label>\n//             <input type=\"password\" className=\"form-control\" value={credentials.password} onChange={onChange} name='password' />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"role\" className=\"form-label\">Role</label>\n//             <select className=\"form-control\" name=\"role\" value={credentials.role} onChange={onChange}>\n//               <option value=\"user\">User</option>\n//               <option value=\"admin\">Admin</option>\n//             </select>\n//           </div>\n//           <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n//           <Link to=\"/login\" className=\"m-3 mx-1 btn btn-danger\">Already a user</Link>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\n\n// import React, { useState } from 'react';\n// import { useNavigate, Link } from 'react-router-dom';\n// import Navbar from '../components/Navbar';\n\n// export default function Signup() {\n//   const [credentials, setCredentials] = useState({\n//     name: \"\",\n//     email: \"\",\n//     password: \"\",\n//     geolocation: \"\",\n//     role: \"user\" // Default to user\n//   });\n//   let navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const response = await fetch(\"http://localhost:5000/api/createuser\", {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify(credentials),\n//     });\n\n//     const json = await response.json();\n\n//     if (json.success) {\n//       alert(\"You are successfully registered. Please log in.\");\n//       navigate(\"/login\");\n//     } else {\n//       alert(\"Error during registration. Please try again.\");\n//     }\n//   };\n\n//   const onChange = (e) => {\n//     setCredentials({ ...credentials, [e.target.name]: e.target.value });\n//   };\n\n//   return (\n//     <div>\n//       <Navbar />\n//       <div className='container'>\n//         <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"name\" className=\"form-label\">Name</label>\n//             <input\n//               type=\"text\"\n//               className=\"form-control\"\n//               name='name'\n//               value={credentials.name}\n//               onChange={onChange}\n//               required\n//             />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"email\" className=\"form-label\">Email address</label>\n//             <input\n//               type=\"email\"\n//               className=\"form-control\"\n//               name='email'\n//               value={credentials.email}\n//               onChange={onChange}\n//               required\n//             />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"password\" className=\"form-label\">Password</label>\n//             <input\n//               type=\"password\"\n//               className=\"form-control\"\n//               name='password'\n//               value={credentials.password}\n//               onChange={onChange}\n//               required\n//             />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"geolocation\" className=\"form-label\">Geolocation</label>\n//             <input\n//               type=\"text\"\n//               className=\"form-control\"\n//               name='geolocation'\n//               value={credentials.geolocation}\n//               onChange={onChange}\n//               required\n//             />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"role\" className=\"form-label\">Role</label>\n//             <select\n//               className=\"form-control\"\n//               name=\"role\"\n//               value={credentials.role}\n//               onChange={onChange}\n//             >\n//               <option value=\"user\">User</option>\n//               <option value=\"admin\">Admin</option>\n//             </select>\n//           </div>\n//           <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n//           <Link to=\"/login\" className=\"m-3 mx-1 btn btn-danger\">Already have an account</Link>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\n\nimport React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport Navbar from '../components/Navbar'; // Ensure Navbar exists\n\nexport default function Signup() {\n  const [credentials, setCredentials] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    geolocation: \"\",\n    role: \"user\" // Default to user\n  });\n\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(\"Submitting credentials:\", credentials); // Debugging line\n\n    const response = await fetch(\"http://localhost:5000/api/createuser\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(credentials),\n    });\n\n    const json = await response.json();\n    console.log(\"Response from server:\", json); // Debugging line\n\n    if (json.success) {\n      alert(\"You are successfully registered. Please log in.\");\n      navigate(\"/login\");\n    } else {\n      alert(json.error || \"Error during registration. Please try again.\");\n    }\n  };\n\n  const onChange = (e) => {\n    setCredentials({ ...credentials, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <div className='container'>\n        <form\n          className='w-50 m-auto mt-5 border bg-dark border-success rounded'\n          onSubmit={handleSubmit}\n        >\n          <div className=\"m-3\">\n            <label htmlFor=\"name\" className=\"form-label\">Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name='name'\n              value={credentials.name}\n              onChange={onChange}\n              required\n            />\n          </div>\n          <div className=\"m-3\">\n            <label htmlFor=\"email\" className=\"form-label\">Email address</label>\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              name='email'\n              value={credentials.email}\n              onChange={onChange}\n              required\n            />\n          </div>\n          <div className=\"m-3\">\n            <label htmlFor=\"password\" className=\"form-label\">Password</label>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              name='password'\n              value={credentials.password}\n              onChange={onChange}\n              required\n            />\n          </div>\n          <div className=\"m-3\">\n            <label htmlFor=\"geolocation\" className=\"form-label\">Geolocation</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name='geolocation'\n              value={credentials.geolocation}\n              onChange={onChange}\n              required\n            />\n          </div>\n          <div className=\"m-3\">\n            <label htmlFor=\"role\" className=\"form-label\">Role</label>\n            <select\n              className=\"form-control\"\n              name=\"role\"\n              value={credentials.role}\n              onChange={onChange}\n            >\n              <option value=\"user\">User</option>\n              <option value=\"admin\">Admin</option>\n            </select>\n          </div>\n          <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n          <Link to=\"/login\" className=\"m-3 mx-1 btn btn-danger\">Already have an account</Link>\n        </form>\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}