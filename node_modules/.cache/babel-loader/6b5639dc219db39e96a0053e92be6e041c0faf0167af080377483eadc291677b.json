{"ast":null,"code":"// // import React, { useEffect, useState } from 'react';\n// // import 'bootstrap/dist/css/bootstrap.min.css'; \n\n// // function ProfileDashboard() {\n// //   const [profiles, setProfiles] = useState([]);\n// //   const [profile, setProfile] = useState({ name: '', email: '', bio: '' });\n// //   const [editProfileId, setEditProfileId] = useState(null);\n// //   const fetchProfiles = async () => {\n// //     try {\n// //       const response = await fetch('http://localhost:5000/api/user-profiles');\n// //       const data = await response.json();\n// //       setProfiles(data);\n// //     } catch (error) {\n// //       console.error('Error fetching profiles:', error);\n// //     }\n// //   };\n\n// //   useEffect(() => {\n// //     fetchProfiles();\n// //   }, []);\n\n// //   const handleSave = async () => {\n// //     try {\n// //       if (editProfileId) {\n\n// //         const response = await fetch(`http://localhost:5000/api/user-profiles/${editProfileId}`, {\n// //           method: 'PUT',\n// //           headers: { 'Content-Type': 'application/json' },\n// //           body: JSON.stringify(profile),\n// //         });\n// //         const data = await response.json();\n// //         setProfiles(profiles.map(p => p._id === data._id ? data : p));\n// //       } else {\n\n// //         const response = await fetch('http://localhost:5000/api/user-profiles', {\n// //           method: 'POST',\n// //           headers: { 'Content-Type': 'application/json' },\n// //           body: JSON.stringify(profile),\n// //         });\n// //         const data = await response.json();\n// //         setProfiles([...profiles, data]);\n// //       }\n// //       setProfile({ name: '', email: '', bio: '' });\n// //       setEditProfileId(null);\n// //     } catch (error) {\n// //       console.error('Error saving profile:', error);\n// //     }\n// //   };\n\n// //   const handleDelete = async (id) => {\n// //     try {\n// //       await fetch(`http://localhost:5000/api/user-profiles/${id}`, { method: 'DELETE' });\n// //       setProfiles(profiles.filter(p => p._id !== id));\n// //     } catch (error) {\n// //       console.error('Error deleting profile:', error);\n// //     }\n// //   };\n\n// //   const handleEdit = (profile) => {\n// //     setProfile(profile);\n// //     setEditProfileId(profile._id);\n// //   };\n\n// //   return (\n// //     <div className=\"bg-dark text-light min-vh-100 p-4\">\n// //       <h2 className=\"text-center mb-4\">Profile Dashboard</h2>\n// //       <div className=\"container\">\n// //         <div className=\"mb-4\">\n// //           <h3>{editProfileId ? 'Edit Profile' : 'Add New Profile'}</h3>\n// //           <div className=\"mb-3\">\n// //             <input\n// //               type=\"text\"\n// //               className=\"form-control mb-2\"\n// //               value={profile.name}\n// //               onChange={(e) => setProfile({ ...profile, name: e.target.value })}\n// //               placeholder=\"Name\"\n// //             />\n// //             <input\n// //               type=\"email\"\n// //               className=\"form-control mb-2\"\n// //               value={profile.email}\n// //               onChange={(e) => setProfile({ ...profile, email: e.target.value })}\n// //               placeholder=\"Email\"\n// //             />\n// //             <textarea\n// //               className=\"form-control mb-2\"\n// //               value={profile.bio}\n// //               onChange={(e) => setProfile({ ...profile, bio: e.target.value })}\n// //               placeholder=\"Bio\"\n// //               rows=\"3\"\n// //             />\n// //             <button\n// //               className=\"btn btn-primary\"\n// //               onClick={handleSave}\n// //             >\n// //               {editProfileId ? 'Update Profile' : 'Save Profile'}\n// //             </button>\n// //           </div>\n// //         </div>\n// //         <ul className=\"list-group\">\n// //           {profiles.map(p => (\n// //             <li key={p._id} className=\"list-group-item d-flex justify-content-between align-items-center bg-secondary text-light mb-2\">\n// //               <div>\n// //                 <strong>{p.name}</strong> ({p.email}): {p.bio}\n// //               </div>\n// //               <div>\n// //                 <button\n// //                   className=\"btn btn-warning btn-sm me-2\"\n// //                   onClick={() => handleEdit(p)}\n// //                 >\n// //                   Edit\n// //                 </button>\n// //                 <button\n// //                   className=\"btn btn-danger btn-sm\"\n// //                   onClick={() => handleDelete(p._id)}\n// //                 >\n// //                   Delete\n// //                 </button>\n// //               </div>\n// //             </li>\n// //           ))}\n// //         </ul>\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n// // export default ProfileDashboard;\n\n// import React, { useEffect, useState } from 'react';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\n// function ProfileDashboard() {\n//   const [profiles, setProfiles] = useState([]);\n//   const [profile, setProfile] = useState({ name: '', email: '', bio: '' });\n//   const [profilePicture, setProfilePicture] = useState(null); // State for the profile picture file\n//   const [editProfileId, setEditProfileId] = useState(null);\n\n//   const fetchProfiles = async () => {\n//     try {\n//       const response = await fetch('http://localhost:5000/api/user-profiles');\n//       const data = await response.json();\n//       setProfiles(data);\n//     } catch (error) {\n//       console.error('Error fetching profiles:', error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchProfiles();\n//   }, []);\n\n//   const handleSave = async () => {\n//     try {\n//       const formData = new FormData();\n//       formData.append('name', profile.name);\n//       formData.append('email', profile.email);\n//       formData.append('bio', profile.bio);\n//       if (profilePicture) formData.append('profilePicture', profilePicture);\n\n//       const method = editProfileId ? 'PUT' : 'POST';\n//       const url = editProfileId\n//         ? `http://localhost:5000/api/user-profiles/${editProfileId}`\n//         : 'http://localhost:5000/api/user-profiles';\n\n//       const response = await fetch(url, {\n//         method,\n//         body: formData,\n//       });\n\n//       const data = await response.json();\n\n//       if (editProfileId) {\n//         setProfiles(profiles.map(p => (p._id === data._id ? data : p)));\n//       } else {\n//         setProfiles([...profiles, data]);\n//       }\n\n//       setProfile({ name: '', email: '', bio: '' });\n//       setProfilePicture(null);\n//       setEditProfileId(null);\n//     } catch (error) {\n//       console.error('Error saving profile:', error);\n//     }\n//   };\n\n//   const handleDelete = async (id) => {\n//     try {\n//       await fetch(`http://localhost:5000/api/user-profiles/${id}`, { method: 'DELETE' });\n//       setProfiles(profiles.filter(p => p._id !== id));\n//     } catch (error) {\n//       console.error('Error deleting profile:', error);\n//     }\n//   };\n\n//   const handleEdit = (profile) => {\n//     setProfile(profile);\n//     setProfilePicture(null); // Reset profile picture when editing\n//     setEditProfileId(profile._id);\n//   };\n\n//   return (\n//     <div className=\"bg-dark text-light min-vh-100 p-4\">\n//       <h2 className=\"text-center mb-4\">Profile Dashboard</h2>\n//       <div className=\"container\">\n//         <div className=\"mb-4\">\n//           <h3>{editProfileId ? 'Edit Profile' : 'Add New Profile'}</h3>\n//           <div className=\"mb-3\">\n//             <input\n//               type=\"text\"\n//               className=\"form-control mb-2\"\n//               value={profile.name}\n//               onChange={(e) => setProfile({ ...profile, name: e.target.value })}\n//               placeholder=\"Name\"\n//             />\n//             <input\n//               type=\"email\"\n//               className=\"form-control mb-2\"\n//               value={profile.email}\n//               onChange={(e) => setProfile({ ...profile, email: e.target.value })}\n//               placeholder=\"Email\"\n//             />\n//             <textarea\n//               className=\"form-control mb-2\"\n//               value={profile.bio}\n//               onChange={(e) => setProfile({ ...profile, bio: e.target.value })}\n//               placeholder=\"Bio\"\n//               rows=\"3\"\n//             />\n//             <input\n//               type=\"file\"\n//               className=\"form-control mb-2\"\n//               onChange={(e) => setProfilePicture(e.target.files[0])}\n//               accept=\"image/jpeg, image/png, image/jpg\"\n//             />\n//             <button\n//               className=\"btn btn-primary\"\n//               onClick={handleSave}\n//             >\n//               {editProfileId ? 'Update Profile' : 'Save Profile'}\n//             </button>\n//           </div>\n//         </div>\n//         <ul className=\"list-group\">\n//           {profiles.map(p => (\n//             <li key={p._id} className=\"list-group-item d-flex justify-content-between align-items-center bg-secondary text-light mb-2\">\n//               <div>\n//                 {p.profilePicture && (\n//                   <img\n//                     src={`http://localhost:5000${p.profilePicture}`}\n//                     alt=\"Profile\"\n//                     style={{ width: '50px', height: '50px', marginRight: '10px', borderRadius: '50%' }}\n//                   />\n//                 )}\n//                 <strong>{p.name}</strong> ({p.email}): {p.bio}\n//               </div>\n//               <div>\n//                 <button\n//                   className=\"btn btn-warning btn-sm me-2\"\n//                   onClick={() => handleEdit(p)}\n//                 >\n//                   Edit\n//                 </button>\n//                 <button\n//                   className=\"btn btn-danger btn-sm\"\n//                   onClick={() => handleDelete(p._id)}\n//                 >\n//                   Delete\n//                 </button>\n//               </div>\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default ProfileDashboard;","map":{"version":3,"names":[],"sources":["C:/Users/ruhan/Documents/gofood/mernapp/src/components/ProfileDahboard.js"],"sourcesContent":["// // import React, { useEffect, useState } from 'react';\r\n// // import 'bootstrap/dist/css/bootstrap.min.css'; \r\n\r\n// // function ProfileDashboard() {\r\n// //   const [profiles, setProfiles] = useState([]);\r\n// //   const [profile, setProfile] = useState({ name: '', email: '', bio: '' });\r\n// //   const [editProfileId, setEditProfileId] = useState(null);\r\n// //   const fetchProfiles = async () => {\r\n// //     try {\r\n// //       const response = await fetch('http://localhost:5000/api/user-profiles');\r\n// //       const data = await response.json();\r\n// //       setProfiles(data);\r\n// //     } catch (error) {\r\n// //       console.error('Error fetching profiles:', error);\r\n// //     }\r\n// //   };\r\n\r\n// //   useEffect(() => {\r\n// //     fetchProfiles();\r\n// //   }, []);\r\n\r\n\r\n// //   const handleSave = async () => {\r\n// //     try {\r\n// //       if (editProfileId) {\r\n        \r\n// //         const response = await fetch(`http://localhost:5000/api/user-profiles/${editProfileId}`, {\r\n// //           method: 'PUT',\r\n// //           headers: { 'Content-Type': 'application/json' },\r\n// //           body: JSON.stringify(profile),\r\n// //         });\r\n// //         const data = await response.json();\r\n// //         setProfiles(profiles.map(p => p._id === data._id ? data : p));\r\n// //       } else {\r\n      \r\n// //         const response = await fetch('http://localhost:5000/api/user-profiles', {\r\n// //           method: 'POST',\r\n// //           headers: { 'Content-Type': 'application/json' },\r\n// //           body: JSON.stringify(profile),\r\n// //         });\r\n// //         const data = await response.json();\r\n// //         setProfiles([...profiles, data]);\r\n// //       }\r\n// //       setProfile({ name: '', email: '', bio: '' });\r\n// //       setEditProfileId(null);\r\n// //     } catch (error) {\r\n// //       console.error('Error saving profile:', error);\r\n// //     }\r\n// //   };\r\n\r\n// //   const handleDelete = async (id) => {\r\n// //     try {\r\n// //       await fetch(`http://localhost:5000/api/user-profiles/${id}`, { method: 'DELETE' });\r\n// //       setProfiles(profiles.filter(p => p._id !== id));\r\n// //     } catch (error) {\r\n// //       console.error('Error deleting profile:', error);\r\n// //     }\r\n// //   };\r\n\r\n\r\n// //   const handleEdit = (profile) => {\r\n// //     setProfile(profile);\r\n// //     setEditProfileId(profile._id);\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"bg-dark text-light min-vh-100 p-4\">\r\n// //       <h2 className=\"text-center mb-4\">Profile Dashboard</h2>\r\n// //       <div className=\"container\">\r\n// //         <div className=\"mb-4\">\r\n// //           <h3>{editProfileId ? 'Edit Profile' : 'Add New Profile'}</h3>\r\n// //           <div className=\"mb-3\">\r\n// //             <input\r\n// //               type=\"text\"\r\n// //               className=\"form-control mb-2\"\r\n// //               value={profile.name}\r\n// //               onChange={(e) => setProfile({ ...profile, name: e.target.value })}\r\n// //               placeholder=\"Name\"\r\n// //             />\r\n// //             <input\r\n// //               type=\"email\"\r\n// //               className=\"form-control mb-2\"\r\n// //               value={profile.email}\r\n// //               onChange={(e) => setProfile({ ...profile, email: e.target.value })}\r\n// //               placeholder=\"Email\"\r\n// //             />\r\n// //             <textarea\r\n// //               className=\"form-control mb-2\"\r\n// //               value={profile.bio}\r\n// //               onChange={(e) => setProfile({ ...profile, bio: e.target.value })}\r\n// //               placeholder=\"Bio\"\r\n// //               rows=\"3\"\r\n// //             />\r\n// //             <button\r\n// //               className=\"btn btn-primary\"\r\n// //               onClick={handleSave}\r\n// //             >\r\n// //               {editProfileId ? 'Update Profile' : 'Save Profile'}\r\n// //             </button>\r\n// //           </div>\r\n// //         </div>\r\n// //         <ul className=\"list-group\">\r\n// //           {profiles.map(p => (\r\n// //             <li key={p._id} className=\"list-group-item d-flex justify-content-between align-items-center bg-secondary text-light mb-2\">\r\n// //               <div>\r\n// //                 <strong>{p.name}</strong> ({p.email}): {p.bio}\r\n// //               </div>\r\n// //               <div>\r\n// //                 <button\r\n// //                   className=\"btn btn-warning btn-sm me-2\"\r\n// //                   onClick={() => handleEdit(p)}\r\n// //                 >\r\n// //                   Edit\r\n// //                 </button>\r\n// //                 <button\r\n// //                   className=\"btn btn-danger btn-sm\"\r\n// //                   onClick={() => handleDelete(p._id)}\r\n// //                 >\r\n// //                   Delete\r\n// //                 </button>\r\n// //               </div>\r\n// //             </li>\r\n// //           ))}\r\n// //         </ul>\r\n// //       </div>\r\n// //     </div>\r\n// //   );\r\n// // }\r\n\r\n// // export default ProfileDashboard;\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// function ProfileDashboard() {\r\n//   const [profiles, setProfiles] = useState([]);\r\n//   const [profile, setProfile] = useState({ name: '', email: '', bio: '' });\r\n//   const [profilePicture, setProfilePicture] = useState(null); // State for the profile picture file\r\n//   const [editProfileId, setEditProfileId] = useState(null);\r\n\r\n//   const fetchProfiles = async () => {\r\n//     try {\r\n//       const response = await fetch('http://localhost:5000/api/user-profiles');\r\n//       const data = await response.json();\r\n//       setProfiles(data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching profiles:', error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchProfiles();\r\n//   }, []);\r\n\r\n//   const handleSave = async () => {\r\n//     try {\r\n//       const formData = new FormData();\r\n//       formData.append('name', profile.name);\r\n//       formData.append('email', profile.email);\r\n//       formData.append('bio', profile.bio);\r\n//       if (profilePicture) formData.append('profilePicture', profilePicture);\r\n\r\n//       const method = editProfileId ? 'PUT' : 'POST';\r\n//       const url = editProfileId\r\n//         ? `http://localhost:5000/api/user-profiles/${editProfileId}`\r\n//         : 'http://localhost:5000/api/user-profiles';\r\n\r\n//       const response = await fetch(url, {\r\n//         method,\r\n//         body: formData,\r\n//       });\r\n\r\n//       const data = await response.json();\r\n\r\n//       if (editProfileId) {\r\n//         setProfiles(profiles.map(p => (p._id === data._id ? data : p)));\r\n//       } else {\r\n//         setProfiles([...profiles, data]);\r\n//       }\r\n\r\n//       setProfile({ name: '', email: '', bio: '' });\r\n//       setProfilePicture(null);\r\n//       setEditProfileId(null);\r\n//     } catch (error) {\r\n//       console.error('Error saving profile:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleDelete = async (id) => {\r\n//     try {\r\n//       await fetch(`http://localhost:5000/api/user-profiles/${id}`, { method: 'DELETE' });\r\n//       setProfiles(profiles.filter(p => p._id !== id));\r\n//     } catch (error) {\r\n//       console.error('Error deleting profile:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleEdit = (profile) => {\r\n//     setProfile(profile);\r\n//     setProfilePicture(null); // Reset profile picture when editing\r\n//     setEditProfileId(profile._id);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"bg-dark text-light min-vh-100 p-4\">\r\n//       <h2 className=\"text-center mb-4\">Profile Dashboard</h2>\r\n//       <div className=\"container\">\r\n//         <div className=\"mb-4\">\r\n//           <h3>{editProfileId ? 'Edit Profile' : 'Add New Profile'}</h3>\r\n//           <div className=\"mb-3\">\r\n//             <input\r\n//               type=\"text\"\r\n//               className=\"form-control mb-2\"\r\n//               value={profile.name}\r\n//               onChange={(e) => setProfile({ ...profile, name: e.target.value })}\r\n//               placeholder=\"Name\"\r\n//             />\r\n//             <input\r\n//               type=\"email\"\r\n//               className=\"form-control mb-2\"\r\n//               value={profile.email}\r\n//               onChange={(e) => setProfile({ ...profile, email: e.target.value })}\r\n//               placeholder=\"Email\"\r\n//             />\r\n//             <textarea\r\n//               className=\"form-control mb-2\"\r\n//               value={profile.bio}\r\n//               onChange={(e) => setProfile({ ...profile, bio: e.target.value })}\r\n//               placeholder=\"Bio\"\r\n//               rows=\"3\"\r\n//             />\r\n//             <input\r\n//               type=\"file\"\r\n//               className=\"form-control mb-2\"\r\n//               onChange={(e) => setProfilePicture(e.target.files[0])}\r\n//               accept=\"image/jpeg, image/png, image/jpg\"\r\n//             />\r\n//             <button\r\n//               className=\"btn btn-primary\"\r\n//               onClick={handleSave}\r\n//             >\r\n//               {editProfileId ? 'Update Profile' : 'Save Profile'}\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//         <ul className=\"list-group\">\r\n//           {profiles.map(p => (\r\n//             <li key={p._id} className=\"list-group-item d-flex justify-content-between align-items-center bg-secondary text-light mb-2\">\r\n//               <div>\r\n//                 {p.profilePicture && (\r\n//                   <img\r\n//                     src={`http://localhost:5000${p.profilePicture}`}\r\n//                     alt=\"Profile\"\r\n//                     style={{ width: '50px', height: '50px', marginRight: '10px', borderRadius: '50%' }}\r\n//                   />\r\n//                 )}\r\n//                 <strong>{p.name}</strong> ({p.email}): {p.bio}\r\n//               </div>\r\n//               <div>\r\n//                 <button\r\n//                   className=\"btn btn-warning btn-sm me-2\"\r\n//                   onClick={() => handleEdit(p)}\r\n//                 >\r\n//                   Edit\r\n//                 </button>\r\n//                 <button\r\n//                   className=\"btn btn-danger btn-sm\"\r\n//                   onClick={() => handleDelete(p._id)}\r\n//                 >\r\n//                   Delete\r\n//                 </button>\r\n//               </div>\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default ProfileDashboard;\r\n\r\n\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}