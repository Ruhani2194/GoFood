{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruhan\\\\Documents\\\\gofood\\\\mernapp\\\\src\\\\components\\\\Card.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatchCart, useCart } from './ContextReducer';\nimport { Dropdown, DropdownButton } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Card(props) {\n  _s();\n  let data = useCart();\n  let navigate = useNavigate();\n  const [qty, setQty] = useState(1);\n  const [size, setSize] = useState(\"\");\n  const priceRef = useRef();\n  // const [btnEnable, setBtnEnable] = useState(false);\n  // let totval = 0\n  // let price = Object.values(options).map((value) => {\n  //   return parseInt(value, 10);\n  // });\n  let options = props.options;\n  let priceOptions = Object.keys(options);\n  let foodItem = props.item;\n  const dispatch = useDispatchCart();\n  const handleClick = () => {\n    if (!localStorage.getItem(\"token\")) {\n      navigate(\"/login\");\n    }\n  };\n  const handleQty = e => {\n    setQty(e.target.value);\n  };\n  const handleOptions = e => {\n    setSize(e.target.value);\n  };\n  const handleAddToCart = async () => {\n    let food = [];\n    for (const item of data) {\n      if (item.id === foodItem._id) {\n        food = item;\n        break;\n      }\n    }\n    console.log(food);\n    console.log(new Date());\n    if (food !== []) {\n      if (food.size === size) {\n        await dispatch({\n          type: \"UPDATE\",\n          id: foodItem._id,\n          price: finalPrice,\n          qty: qty\n        });\n        return;\n      } else if (food.size !== size) {\n        await dispatch({\n          type: \"ADD\",\n          id: foodItem._id,\n          name: foodItem.name,\n          price: finalPrice,\n          qty: qty,\n          size: size,\n          img: props.ImgSrc\n        });\n        console.log(\"Size different so simply ADD one more to the list\");\n        return;\n      }\n      return;\n    }\n    await dispatch({\n      type: \"ADD\",\n      id: foodItem._id,\n      name: foodItem.name,\n      price: finalPrice,\n      qty: qty,\n      size: size\n    });\n\n    // setBtnEnable(true)\n  };\n  useEffect(() => {\n    setSize(priceRef.current.value);\n  }, []);\n\n  // useEffect(()=>{\n  // checkBtn();\n  //   },[data])\n\n  let finalPrice = qty * parseInt(options[size]); //This is where Price is changing\n  // totval += finalPrice;\n  console.log(totval);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n//\n\n// import React, { useState, useRef, useEffect } from 'react'\n// import { useNavigate } from 'react-router-dom'\n// import { useDispatchCart, useCart } from './ContextReducer'\n// // import { Dropdown, DropdownButton } from 'react-bootstrap';\n// export default function Card(props) {\n//   let data = useCart();\n\n//   let navigate = useNavigate()\n//   const [qty, setQty] = useState(1)\n//   const [size, setSize] = useState(\"\")\n//   const priceRef = useRef();\n//   // const [btnEnable, setBtnEnable] = useState(false);\n//   // let totval = 0\n//   // let price = Object.values(options).map((value) => {\n//   //   return parseInt(value, 10);\n//   // });\n//   let options = props.options;\n//   let priceOptions = Object.keys(options);\n//   let foodItem = props.item;\n//   const dispatch = useDispatchCart();\n//   const handleClick = () => {\n//     if (!localStorage.getItem(\"token\")) {\n//       navigate(\"/login\")\n//     }\n//   }\n//   const handleQty = (e) => {\n//     setQty(e.target.value);\n//   }\n//   const handleOptions = (e) => {\n//     setSize(e.target.value);\n//   }\n//   const handleAddToCart = async () => {\n//     let food = []\n//     for (const item of data) {\n//       if (item.id === foodItem._id) {\n//         food = item;\n\n//         break;\n//       }\n//     }\n//     console.log(food)\n//     console.log(new Date())\n//     if (food !== []) {\n//       if (food.size === size) {\n//         await dispatch({ type: \"UPDATE\", id: foodItem._id, price: finalPrice, qty: qty })\n//         return\n//       }\n//       else if (food.size !== size) {\n//         await dispatch({ type: \"ADD\", id: foodItem._id, name: foodItem.name, price: finalPrice, qty: qty, size: size,img: props.ImgSrc })\n//         console.log(\"Size different so simply ADD one more to the list\")\n//         return\n//       }\n//       return\n//     }\n\n//     await dispatch({ type: \"ADD\", id: foodItem._id, name: foodItem.name, price: finalPrice, qty: qty, size: size })\n\n//     // setBtnEnable(true)\n\n//   }\n\n//   useEffect(() => {\n//     setSize(priceRef.current.value)\n//   }, [])\n\n//   // useEffect(()=>{\n//   // checkBtn();\n//   //   },[data])\n\n//   let finalPrice = qty * parseInt(options[size]);   //This is where Price is changing\n//   // totval += finalPrice;\n//   // console.log(totval)\n//   return (\n//     <div>\n\n//       <div className=\"card mt-3\" style={{ width: \"16rem\", maxHeight: \"360px\" }}>\n//         <img src={props.ImgSrc} className=\"card-img-top\" alt=\"...\" style={{ height: \"120px\", objectFit: \"fill\" }} />\n//         <div className=\"card-body\">\n//           <h5 className=\"card-title\">{props.foodName}</h5>\n//           {/* <p className=\"card-text\">This is some random text. This is description.</p> */}\n//           <div className='container w-100 p-0' style={{ height: \"38px\" }}>\n//             <select className=\"m-2 h-100 w-20 bg-success text-black rounded\" style={{ select: \"#FF0000\" }} onClick={handleClick} onChange={handleQty}>\n//               {Array.from(Array(6), (e, i) => {\n//                 return (\n//                   <option key={i + 1} value={i + 1}>{i + 1}</option>)\n//               })}\n//             </select>\n//             <select className=\"m-2 h-100 w-20 bg-success text-black rounded\" style={{ select: \"#FF0000\" }} ref={priceRef} onClick={handleClick} onChange={handleOptions}>\n//               {priceOptions.map((i) => {\n//                 return <option key={i} value={i}>{i}</option>\n//               })}\n//             </select>\n//             <div className=' d-inline ms-2 h-100 w-20 fs-5' >\n//               â‚¹{finalPrice}/-\n//             </div>\n//           </div>\n//           <hr></hr>\n//           <button className={`btn btn-success justify-center ms-2 `} onClick={handleAddToCart}>Add to Cart</button>\n//           {/* <button className={`btn btn-danger justify-center ms-2 ${btnEnable ? \"\" : \"disabled\"}`} onClick={handleRemoveCart}>Remove</button> */}\n//         </div>\n//       </div>\n//     </div>\n//   )\n// }\n// //\n_s(Card, \"I/Nn6NC6VEytXSDzNrbhOtVlA/Q=\", false, function () {\n  return [useCart, useNavigate, useDispatchCart];\n});\n_c = Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useNavigate","useDispatchCart","useCart","Dropdown","DropdownButton","jsxDEV","_jsxDEV","Card","props","_s","data","navigate","qty","setQty","useState","size","setSize","priceRef","useRef","options","priceOptions","Object","keys","foodItem","item","dispatch","handleClick","localStorage","getItem","handleQty","e","target","value","handleOptions","handleAddToCart","food","id","_id","console","log","Date","type","price","finalPrice","name","img","ImgSrc","useEffect","current","parseInt","totval","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ruhan/Documents/gofood/mernapp/src/components/Card.js"],"sourcesContent":["\nimport React from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useDispatchCart, useCart } from './ContextReducer'\nimport { Dropdown, DropdownButton } from 'react-bootstrap';\nexport default function Card(props) {\n  let data = useCart();\n\n  let navigate = useNavigate()\n  const [qty, setQty] = useState(1)\n  const [size, setSize] = useState(\"\")\n  const priceRef = useRef();\n  // const [btnEnable, setBtnEnable] = useState(false);\n  // let totval = 0\n  // let price = Object.values(options).map((value) => {\n  //   return parseInt(value, 10);\n  // });\n  let options = props.options;\n  let priceOptions = Object.keys(options);\n  let foodItem = props.item;\n  const dispatch = useDispatchCart();\n  const handleClick = () => {\n    if (!localStorage.getItem(\"token\")) {\n      navigate(\"/login\")\n    }\n  }\n  const handleQty = (e) => {\n    setQty(e.target.value);\n  }\n  const handleOptions = (e) => {\n    setSize(e.target.value);\n  }\n  const handleAddToCart = async () => {\n    let food = []\n    for (const item of data) {\n      if (item.id === foodItem._id) {\n        food = item;\n\n        break;\n      }\n    }\n    console.log(food)\n    console.log(new Date())\n    if (food !== []) {\n      if (food.size === size) {\n        await dispatch({ type: \"UPDATE\", id: foodItem._id, price: finalPrice, qty: qty })\n        return\n      }\n      else if (food.size !== size) {\n        await dispatch({ type: \"ADD\", id: foodItem._id, name: foodItem.name, price: finalPrice, qty: qty, size: size,img: props.ImgSrc })\n        console.log(\"Size different so simply ADD one more to the list\")\n        return\n      }\n      return\n    }\n\n    await dispatch({ type: \"ADD\", id: foodItem._id, name: foodItem.name, price: finalPrice, qty: qty, size: size })\n\n\n    // setBtnEnable(true)\n\n  }\n\n  useEffect(() => {\n    setSize(priceRef.current.value)\n  }, [])\n\n  // useEffect(()=>{\n  // checkBtn();\n  //   },[data])\n\n  let finalPrice = qty * parseInt(options[size]);   //This is where Price is changing\n  // totval += finalPrice;\n  console.log(totval)\n  return (\n    <div>\n    </div>\n  )\n}\n//\n\n\n// import React, { useState, useRef, useEffect } from 'react'\n// import { useNavigate } from 'react-router-dom'\n// import { useDispatchCart, useCart } from './ContextReducer'\n// // import { Dropdown, DropdownButton } from 'react-bootstrap';\n// export default function Card(props) {\n//   let data = useCart();\n\n//   let navigate = useNavigate()\n//   const [qty, setQty] = useState(1)\n//   const [size, setSize] = useState(\"\")\n//   const priceRef = useRef();\n//   // const [btnEnable, setBtnEnable] = useState(false);\n//   // let totval = 0\n//   // let price = Object.values(options).map((value) => {\n//   //   return parseInt(value, 10);\n//   // });\n//   let options = props.options;\n//   let priceOptions = Object.keys(options);\n//   let foodItem = props.item;\n//   const dispatch = useDispatchCart();\n//   const handleClick = () => {\n//     if (!localStorage.getItem(\"token\")) {\n//       navigate(\"/login\")\n//     }\n//   }\n//   const handleQty = (e) => {\n//     setQty(e.target.value);\n//   }\n//   const handleOptions = (e) => {\n//     setSize(e.target.value);\n//   }\n//   const handleAddToCart = async () => {\n//     let food = []\n//     for (const item of data) {\n//       if (item.id === foodItem._id) {\n//         food = item;\n\n//         break;\n//       }\n//     }\n//     console.log(food)\n//     console.log(new Date())\n//     if (food !== []) {\n//       if (food.size === size) {\n//         await dispatch({ type: \"UPDATE\", id: foodItem._id, price: finalPrice, qty: qty })\n//         return\n//       }\n//       else if (food.size !== size) {\n//         await dispatch({ type: \"ADD\", id: foodItem._id, name: foodItem.name, price: finalPrice, qty: qty, size: size,img: props.ImgSrc })\n//         console.log(\"Size different so simply ADD one more to the list\")\n//         return\n//       }\n//       return\n//     }\n\n//     await dispatch({ type: \"ADD\", id: foodItem._id, name: foodItem.name, price: finalPrice, qty: qty, size: size })\n\n\n//     // setBtnEnable(true)\n\n//   }\n\n//   useEffect(() => {\n//     setSize(priceRef.current.value)\n//   }, [])\n\n//   // useEffect(()=>{\n//   // checkBtn();\n//   //   },[data])\n\n//   let finalPrice = qty * parseInt(options[size]);   //This is where Price is changing\n//   // totval += finalPrice;\n//   // console.log(totval)\n//   return (\n//     <div>\n\n//       <div className=\"card mt-3\" style={{ width: \"16rem\", maxHeight: \"360px\" }}>\n//         <img src={props.ImgSrc} className=\"card-img-top\" alt=\"...\" style={{ height: \"120px\", objectFit: \"fill\" }} />\n//         <div className=\"card-body\">\n//           <h5 className=\"card-title\">{props.foodName}</h5>\n//           {/* <p className=\"card-text\">This is some random text. This is description.</p> */}\n//           <div className='container w-100 p-0' style={{ height: \"38px\" }}>\n//             <select className=\"m-2 h-100 w-20 bg-success text-black rounded\" style={{ select: \"#FF0000\" }} onClick={handleClick} onChange={handleQty}>\n//               {Array.from(Array(6), (e, i) => {\n//                 return (\n//                   <option key={i + 1} value={i + 1}>{i + 1}</option>)\n//               })}\n//             </select>\n//             <select className=\"m-2 h-100 w-20 bg-success text-black rounded\" style={{ select: \"#FF0000\" }} ref={priceRef} onClick={handleClick} onChange={handleOptions}>\n//               {priceOptions.map((i) => {\n//                 return <option key={i} value={i}>{i}</option>\n//               })}\n//             </select>\n//             <div className=' d-inline ms-2 h-100 w-20 fs-5' >\n//               â‚¹{finalPrice}/-\n//             </div>\n//           </div>\n//           <hr></hr>\n//           <button className={`btn btn-success justify-center ms-2 `} onClick={handleAddToCart}>Add to Cart</button>\n//           {/* <button className={`btn btn-danger justify-center ms-2 ${btnEnable ? \"\" : \"disabled\"}`} onClick={handleRemoveCart}>Remove</button> */}\n//         </div>\n//       </div>\n//     </div>\n//   )\n// }\n// //"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}