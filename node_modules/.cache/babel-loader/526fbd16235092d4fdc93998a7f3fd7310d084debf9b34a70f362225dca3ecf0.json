{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruhan\\\\Documents\\\\gofood\\\\mernapp\\\\src\\\\components\\\\ProfileDahboard.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import 'bootstrap/dist/css/bootstrap.min.css'; \n\n// function ProfileDashboard() {\n//   const [profiles, setProfiles] = useState([]);\n//   const [profile, setProfile] = useState({ name: '', email: '', bio: '' });\n//   const [editProfileId, setEditProfileId] = useState(null);\n//   const fetchProfiles = async () => {\n//     try {\n//       const response = await fetch('http://localhost:5000/api/user-profiles');\n//       const data = await response.json();\n//       setProfiles(data);\n//     } catch (error) {\n//       console.error('Error fetching profiles:', error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchProfiles();\n//   }, []);\n\n//   const handleSave = async () => {\n//     try {\n//       if (editProfileId) {\n\n//         const response = await fetch(`http://localhost:5000/api/user-profiles/${editProfileId}`, {\n//           method: 'PUT',\n//           headers: { 'Content-Type': 'application/json' },\n//           body: JSON.stringify(profile),\n//         });\n//         const data = await response.json();\n//         setProfiles(profiles.map(p => p._id === data._id ? data : p));\n//       } else {\n\n//         const response = await fetch('http://localhost:5000/api/user-profiles', {\n//           method: 'POST',\n//           headers: { 'Content-Type': 'application/json' },\n//           body: JSON.stringify(profile),\n//         });\n//         const data = await response.json();\n//         setProfiles([...profiles, data]);\n//       }\n//       setProfile({ name: '', email: '', bio: '' });\n//       setEditProfileId(null);\n//     } catch (error) {\n//       console.error('Error saving profile:', error);\n//     }\n//   };\n\n//   const handleDelete = async (id) => {\n//     try {\n//       await fetch(`http://localhost:5000/api/user-profiles/${id}`, { method: 'DELETE' });\n//       setProfiles(profiles.filter(p => p._id !== id));\n//     } catch (error) {\n//       console.error('Error deleting profile:', error);\n//     }\n//   };\n\n//   const handleEdit = (profile) => {\n//     setProfile(profile);\n//     setEditProfileId(profile._id);\n//   };\n\n//   return (\n//     <div className=\"bg-dark text-light min-vh-100 p-4\">\n//       <h2 className=\"text-center mb-4\">Profile Dashboard</h2>\n//       <div className=\"container\">\n//         <div className=\"mb-4\">\n//           <h3>{editProfileId ? 'Edit Profile' : 'Add New Profile'}</h3>\n//           <div className=\"mb-3\">\n//             <input\n//               type=\"text\"\n//               className=\"form-control mb-2\"\n//               value={profile.name}\n//               onChange={(e) => setProfile({ ...profile, name: e.target.value })}\n//               placeholder=\"Name\"\n//             />\n//             <input\n//               type=\"email\"\n//               className=\"form-control mb-2\"\n//               value={profile.email}\n//               onChange={(e) => setProfile({ ...profile, email: e.target.value })}\n//               placeholder=\"Email\"\n//             />\n//             <textarea\n//               className=\"form-control mb-2\"\n//               value={profile.bio}\n//               onChange={(e) => setProfile({ ...profile, bio: e.target.value })}\n//               placeholder=\"Bio\"\n//               rows=\"3\"\n//             />\n//             <button\n//               className=\"btn btn-primary\"\n//               onClick={handleSave}\n//             >\n//               {editProfileId ? 'Update Profile' : 'Save Profile'}\n//             </button>\n//           </div>\n//         </div>\n//         <ul className=\"list-group\">\n//           {profiles.map(p => (\n//             <li key={p._id} className=\"list-group-item d-flex justify-content-between align-items-center bg-secondary text-light mb-2\">\n//               <div>\n//                 <strong>{p.name}</strong> ({p.email}): {p.bio}\n//               </div>\n//               <div>\n//                 <button\n//                   className=\"btn btn-warning btn-sm me-2\"\n//                   onClick={() => handleEdit(p)}\n//                 >\n//                   Edit\n//                 </button>\n//                 <button\n//                   className=\"btn btn-danger btn-sm\"\n//                   onClick={() => handleDelete(p._id)}\n//                 >\n//                   Delete\n//                 </button>\n//               </div>\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default ProfileDashboard;\n\nimport React, { useEffect, useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProfileDashboard() {\n  _s();\n  const [profiles, setProfiles] = useState([]);\n  const [profile, setProfile] = useState({\n    name: '',\n    email: '',\n    bio: ''\n  });\n  const [editProfileId, setEditProfileId] = useState(null);\n\n  // Fetch profiles from the backend\n  const fetchProfiles = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/user-profiles');\n      const data = await response.json();\n      setProfiles(data);\n    } catch (error) {\n      console.error('Error fetching profiles:', error);\n    }\n  };\n  useEffect(() => {\n    fetchProfiles();\n  }, []);\n\n  // Save or update profile\n  const handleSave = async () => {\n    try {\n      if (editProfileId) {\n        const response = await fetch(`http://localhost:5000/api/user-profiles/${editProfileId}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(profile)\n        });\n        const data = await response.json();\n        setProfiles(profiles.map(p => p._id === data._id ? data : p));\n      } else {\n        const response = await fetch('http://localhost:5000/api/user-profiles', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(profile)\n        });\n        const data = await response.json();\n        setProfiles([...profiles, data]);\n      }\n      setProfile({\n        name: '',\n        email: '',\n        bio: ''\n      });\n      setEditProfileId(null);\n    } catch (error) {\n      console.error('Error saving profile:', error);\n    }\n  };\n\n  // Handle profile delete\n  const handleDelete = async id => {\n    try {\n      await fetch(`http://localhost:5000/api/user-profiles/${id}`, {\n        method: 'DELETE'\n      });\n      setProfiles(profiles.filter(p => p._id !== id));\n    } catch (error) {\n      console.error('Error deleting profile:', error);\n    }\n  };\n\n  // Handle profile edit\n  const handleEdit = profile => {\n    setProfile(profile);\n    setEditProfileId(profile._id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-dark text-light min-vh-100 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mb-4\",\n      children: \"Profile Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: editProfileId ? 'Edit Profile' : 'Add New Profile'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control mb-2\",\n            value: profile.name,\n            onChange: e => setProfile({\n              ...profile,\n              name: e.target.value\n            }),\n            placeholder: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: \"form-control mb-2\",\n            value: profile.email,\n            onChange: e => setProfile({\n              ...profile,\n              email: e.target.value\n            }),\n            placeholder: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control mb-2\",\n            value: profile.bio,\n            onChange: e => setProfile({\n              ...profile,\n              bio: e.target.value\n            }),\n            placeholder: \"Bio\",\n            rows: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: handleSave,\n            children: editProfileId ? 'Update Profile' : 'Save Profile'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"All Profiles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Bio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: profiles.map(profile => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: profile.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: profile.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: profile.bio\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-warning btn-sm\",\n                onClick: () => handleEdit(profile),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger btn-sm\",\n                onClick: () => handleDelete(profile._id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this)]\n          }, profile._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n}\n_s(ProfileDashboard, \"Nd4t0BIsxB6ijMQfN02CN9ZajW8=\");\n_c = ProfileDashboard;\nexport default ProfileDashboard;\nvar _c;\n$RefreshReg$(_c, \"ProfileDashboard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ProfileDashboard","_s","profiles","setProfiles","profile","setProfile","name","email","bio","editProfileId","setEditProfileId","fetchProfiles","response","fetch","data","json","error","console","handleSave","method","headers","body","JSON","stringify","map","p","_id","handleDelete","id","filter","handleEdit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","rows","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ruhan/Documents/gofood/mernapp/src/components/ProfileDahboard.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import 'bootstrap/dist/css/bootstrap.min.css'; \r\n\r\n// function ProfileDashboard() {\r\n//   const [profiles, setProfiles] = useState([]);\r\n//   const [profile, setProfile] = useState({ name: '', email: '', bio: '' });\r\n//   const [editProfileId, setEditProfileId] = useState(null);\r\n//   const fetchProfiles = async () => {\r\n//     try {\r\n//       const response = await fetch('http://localhost:5000/api/user-profiles');\r\n//       const data = await response.json();\r\n//       setProfiles(data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching profiles:', error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchProfiles();\r\n//   }, []);\r\n\r\n\r\n//   const handleSave = async () => {\r\n//     try {\r\n//       if (editProfileId) {\r\n        \r\n//         const response = await fetch(`http://localhost:5000/api/user-profiles/${editProfileId}`, {\r\n//           method: 'PUT',\r\n//           headers: { 'Content-Type': 'application/json' },\r\n//           body: JSON.stringify(profile),\r\n//         });\r\n//         const data = await response.json();\r\n//         setProfiles(profiles.map(p => p._id === data._id ? data : p));\r\n//       } else {\r\n      \r\n//         const response = await fetch('http://localhost:5000/api/user-profiles', {\r\n//           method: 'POST',\r\n//           headers: { 'Content-Type': 'application/json' },\r\n//           body: JSON.stringify(profile),\r\n//         });\r\n//         const data = await response.json();\r\n//         setProfiles([...profiles, data]);\r\n//       }\r\n//       setProfile({ name: '', email: '', bio: '' });\r\n//       setEditProfileId(null);\r\n//     } catch (error) {\r\n//       console.error('Error saving profile:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleDelete = async (id) => {\r\n//     try {\r\n//       await fetch(`http://localhost:5000/api/user-profiles/${id}`, { method: 'DELETE' });\r\n//       setProfiles(profiles.filter(p => p._id !== id));\r\n//     } catch (error) {\r\n//       console.error('Error deleting profile:', error);\r\n//     }\r\n//   };\r\n\r\n\r\n//   const handleEdit = (profile) => {\r\n//     setProfile(profile);\r\n//     setEditProfileId(profile._id);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"bg-dark text-light min-vh-100 p-4\">\r\n//       <h2 className=\"text-center mb-4\">Profile Dashboard</h2>\r\n//       <div className=\"container\">\r\n//         <div className=\"mb-4\">\r\n//           <h3>{editProfileId ? 'Edit Profile' : 'Add New Profile'}</h3>\r\n//           <div className=\"mb-3\">\r\n//             <input\r\n//               type=\"text\"\r\n//               className=\"form-control mb-2\"\r\n//               value={profile.name}\r\n//               onChange={(e) => setProfile({ ...profile, name: e.target.value })}\r\n//               placeholder=\"Name\"\r\n//             />\r\n//             <input\r\n//               type=\"email\"\r\n//               className=\"form-control mb-2\"\r\n//               value={profile.email}\r\n//               onChange={(e) => setProfile({ ...profile, email: e.target.value })}\r\n//               placeholder=\"Email\"\r\n//             />\r\n//             <textarea\r\n//               className=\"form-control mb-2\"\r\n//               value={profile.bio}\r\n//               onChange={(e) => setProfile({ ...profile, bio: e.target.value })}\r\n//               placeholder=\"Bio\"\r\n//               rows=\"3\"\r\n//             />\r\n//             <button\r\n//               className=\"btn btn-primary\"\r\n//               onClick={handleSave}\r\n//             >\r\n//               {editProfileId ? 'Update Profile' : 'Save Profile'}\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//         <ul className=\"list-group\">\r\n//           {profiles.map(p => (\r\n//             <li key={p._id} className=\"list-group-item d-flex justify-content-between align-items-center bg-secondary text-light mb-2\">\r\n//               <div>\r\n//                 <strong>{p.name}</strong> ({p.email}): {p.bio}\r\n//               </div>\r\n//               <div>\r\n//                 <button\r\n//                   className=\"btn btn-warning btn-sm me-2\"\r\n//                   onClick={() => handleEdit(p)}\r\n//                 >\r\n//                   Edit\r\n//                 </button>\r\n//                 <button\r\n//                   className=\"btn btn-danger btn-sm\"\r\n//                   onClick={() => handleDelete(p._id)}\r\n//                 >\r\n//                   Delete\r\n//                 </button>\r\n//               </div>\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default ProfileDashboard;\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction ProfileDashboard() {\r\n  const [profiles, setProfiles] = useState([]);\r\n  const [profile, setProfile] = useState({ name: '', email: '', bio: '' });\r\n  const [editProfileId, setEditProfileId] = useState(null);\r\n\r\n  // Fetch profiles from the backend\r\n  const fetchProfiles = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/user-profiles');\r\n      const data = await response.json();\r\n      setProfiles(data);\r\n    } catch (error) {\r\n      console.error('Error fetching profiles:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProfiles();\r\n  }, []);\r\n\r\n  // Save or update profile\r\n  const handleSave = async () => {\r\n    try {\r\n      if (editProfileId) {\r\n        const response = await fetch(`http://localhost:5000/api/user-profiles/${editProfileId}`, {\r\n          method: 'PUT',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(profile),\r\n        });\r\n        const data = await response.json();\r\n        setProfiles(profiles.map(p => p._id === data._id ? data : p));\r\n      } else {\r\n        const response = await fetch('http://localhost:5000/api/user-profiles', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(profile),\r\n        });\r\n        const data = await response.json();\r\n        setProfiles([...profiles, data]);\r\n      }\r\n      setProfile({ name: '', email: '', bio: '' });\r\n      setEditProfileId(null);\r\n    } catch (error) {\r\n      console.error('Error saving profile:', error);\r\n    }\r\n  };\r\n\r\n  // Handle profile delete\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await fetch(`http://localhost:5000/api/user-profiles/${id}`, { method: 'DELETE' });\r\n      setProfiles(profiles.filter(p => p._id !== id));\r\n    } catch (error) {\r\n      console.error('Error deleting profile:', error);\r\n    }\r\n  };\r\n\r\n  // Handle profile edit\r\n  const handleEdit = (profile) => {\r\n    setProfile(profile);\r\n    setEditProfileId(profile._id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-dark text-light min-vh-100 p-4\">\r\n      <h2 className=\"text-center mb-4\">Profile Dashboard</h2>\r\n      <div className=\"container\">\r\n        <div className=\"mb-4\">\r\n          <h3>{editProfileId ? 'Edit Profile' : 'Add New Profile'}</h3>\r\n          <div className=\"mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control mb-2\"\r\n              value={profile.name}\r\n              onChange={(e) => setProfile({ ...profile, name: e.target.value })}\r\n              placeholder=\"Name\"\r\n            />\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control mb-2\"\r\n              value={profile.email}\r\n              onChange={(e) => setProfile({ ...profile, email: e.target.value })}\r\n              placeholder=\"Email\"\r\n            />\r\n            <textarea\r\n              className=\"form-control mb-2\"\r\n              value={profile.bio}\r\n              onChange={(e) => setProfile({ ...profile, bio: e.target.value })}\r\n              placeholder=\"Bio\"\r\n              rows=\"3\"\r\n            />\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={handleSave}\r\n            >\r\n              {editProfileId ? 'Update Profile' : 'Save Profile'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <h3>All Profiles</h3>\r\n        <table className=\"table table-striped\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Email</th>\r\n              <th>Bio</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {profiles.map(profile => (\r\n              <tr key={profile._id}>\r\n                <td>{profile.name}</td>\r\n                <td>{profile.email}</td>\r\n                <td>{profile.bio}</td>\r\n                <td>\r\n                  <button className=\"btn btn-warning btn-sm\" onClick={() => handleEdit(profile)}>Edit</button>\r\n                  <button className=\"btn btn-danger btn-sm\" onClick={() => handleDelete(profile._id)}>Delete</button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileDashboard;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC;IAAES,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,GAAG,EAAE;EAAG,CAAC,CAAC;EACxE,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;;EAExD;EACA,MAAMc,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,CAAC;MACvE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCZ,WAAW,CAACW,IAAI,CAAC;IACnB,CAAC,CAAC,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}