{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruhan\\\\Documents\\\\gofood\\\\mernapp\\\\src\\\\screens\\\\Login.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n\n// const Login = () => {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState('');\n//   const [loading, setLoading] = useState(false);\n//   const [isAdmin, setIsAdmin] = useState(false); \n//   const navigate = useNavigate();\n\n//   const handleEmailChange = (e) => setEmail(e.target.value);\n//   const handlePasswordChange = (e) => setPassword(e.target.value);\n//   const handleAdminToggle = () => setIsAdmin(!isAdmin);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n//     setError('');\n\n//     const url = isAdmin\n//       ? 'http://localhost:5000/api/admin/admin-login'\n//       : 'http://localhost:5000/api/loginuser';\n\n//     try {\n//       const response = await fetch(url, {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify({ email, password }),\n//       });\n//       const data = await response.json();\n\n//       if (response.ok) {\n//         localStorage.setItem('authToken', data.token);\n//         localStorage.setItem('userRole', isAdmin ? 'admin' : 'user');\n//         navigate(isAdmin ? '/' : '/');\n//       } else {\n//         setError(data.error || 'Invalid email or password. Please try again.');\n//         setTimeout(() => setError(''), 3000); \n//       }\n//     } catch (err) {\n//       setError('An error occurred while logging in. Please try again.');\n//       setTimeout(() => setError(''), 3000); \n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div\n//       style={{\n//         backgroundImage:\n//           'url(\"https://images.pexels.com/photos/326278/pexels-photo-326278.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")',\n//         backgroundSize: 'cover',\n//         height: '100vh',\n//         display: 'flex',\n//         justifyContent: 'center',\n//         alignItems: 'center',\n//       }}\n//     >\n//       <div className=\"container w-50 bg-dark text-light p-5 rounded border border-success\">\n//         <h2 className=\"text-center mb-4\">{isAdmin ? 'Admin Login' : 'User Login'}</h2>\n//         <form onSubmit={handleSubmit}>\n//           <div className=\"mb-3\">\n//             <label htmlFor=\"email\" className=\"form-label\">\n//               Email:\n//             </label>\n//             <input\n//               type=\"email\"\n//               id=\"email\"\n//               value={email}\n//               onChange={handleEmailChange}\n//               className=\"form-control\"\n//               placeholder=\"Enter your email\"\n//               required\n//             />\n//           </div>\n//           <div className=\"mb-3\">\n//             <label htmlFor=\"password\" className=\"form-label\">\n//               Password:\n//             </label>\n//             <input\n//               type=\"password\"\n//               id=\"password\"\n//               value={password}\n//               onChange={handlePasswordChange}\n//               className=\"form-control\"\n//               placeholder=\"Enter your password\"\n//               required\n//             />\n//           </div>\n//           <div className=\"form-check mb-3\">\n//             <input\n//               type=\"checkbox\"\n//               id=\"admin\"\n//               className=\"form-check-input\"\n//               checked={isAdmin}\n//               onChange={handleAdminToggle}\n//             />\n//             <label htmlFor=\"admin\" className=\"form-check-label\">\n//               Login as Admin\n//             </label>\n//           </div>\n//           {error && <p className=\"text-danger text-center\">{error}</p>}\n//           <button type=\"submit\" className=\"btn btn-success w-100 mb-3\" disabled={loading}>\n//             {loading ? 'Logging in...' : 'Login'}\n//           </button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Login;\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    const url = isAdmin ? 'http://localhost:5000/api/admin/admin-login' : 'http://localhost:5000/api/loginuser';\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        localStorage.setItem('authToken', data.token);\n        navigate(isAdmin ? '/admin-dashboard' : '/');\n      } else {\n        alert(data.error || 'Invalid credentials');\n      }\n    } catch (error) {\n      alert('Error logging in.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isAdmin,\n          onChange: () => setIsAdmin(!isAdmin)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), \"Admin Login\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"F9dUCV1rVvgbDNtKXociPJ3aWzE=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","isAdmin","setIsAdmin","navigate","handleLogin","e","preventDefault","url","response","fetch","method","headers","body","JSON","stringify","data","json","ok","localStorage","setItem","token","alert","error","children","onSubmit","type","placeholder","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","checked","_c","$RefreshReg$"],"sources":["C:/Users/ruhan/Documents/gofood/mernapp/src/screens/Login.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n\n// const Login = () => {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState('');\n//   const [loading, setLoading] = useState(false);\n//   const [isAdmin, setIsAdmin] = useState(false); \n//   const navigate = useNavigate();\n\n//   const handleEmailChange = (e) => setEmail(e.target.value);\n//   const handlePasswordChange = (e) => setPassword(e.target.value);\n//   const handleAdminToggle = () => setIsAdmin(!isAdmin);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n//     setError('');\n\n//     const url = isAdmin\n//       ? 'http://localhost:5000/api/admin/admin-login'\n//       : 'http://localhost:5000/api/loginuser';\n\n//     try {\n//       const response = await fetch(url, {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify({ email, password }),\n//       });\n//       const data = await response.json();\n\n//       if (response.ok) {\n//         localStorage.setItem('authToken', data.token);\n//         localStorage.setItem('userRole', isAdmin ? 'admin' : 'user');\n//         navigate(isAdmin ? '/' : '/');\n//       } else {\n//         setError(data.error || 'Invalid email or password. Please try again.');\n//         setTimeout(() => setError(''), 3000); \n//       }\n//     } catch (err) {\n//       setError('An error occurred while logging in. Please try again.');\n//       setTimeout(() => setError(''), 3000); \n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n  \n//   return (\n//     <div\n//       style={{\n//         backgroundImage:\n//           'url(\"https://images.pexels.com/photos/326278/pexels-photo-326278.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")',\n//         backgroundSize: 'cover',\n//         height: '100vh',\n//         display: 'flex',\n//         justifyContent: 'center',\n//         alignItems: 'center',\n//       }}\n//     >\n//       <div className=\"container w-50 bg-dark text-light p-5 rounded border border-success\">\n//         <h2 className=\"text-center mb-4\">{isAdmin ? 'Admin Login' : 'User Login'}</h2>\n//         <form onSubmit={handleSubmit}>\n//           <div className=\"mb-3\">\n//             <label htmlFor=\"email\" className=\"form-label\">\n//               Email:\n//             </label>\n//             <input\n//               type=\"email\"\n//               id=\"email\"\n//               value={email}\n//               onChange={handleEmailChange}\n//               className=\"form-control\"\n//               placeholder=\"Enter your email\"\n//               required\n//             />\n//           </div>\n//           <div className=\"mb-3\">\n//             <label htmlFor=\"password\" className=\"form-label\">\n//               Password:\n//             </label>\n//             <input\n//               type=\"password\"\n//               id=\"password\"\n//               value={password}\n//               onChange={handlePasswordChange}\n//               className=\"form-control\"\n//               placeholder=\"Enter your password\"\n//               required\n//             />\n//           </div>\n//           <div className=\"form-check mb-3\">\n//             <input\n//               type=\"checkbox\"\n//               id=\"admin\"\n//               className=\"form-check-input\"\n//               checked={isAdmin}\n//               onChange={handleAdminToggle}\n//             />\n//             <label htmlFor=\"admin\" className=\"form-check-label\">\n//               Login as Admin\n//             </label>\n//           </div>\n//           {error && <p className=\"text-danger text-center\">{error}</p>}\n//           <button type=\"submit\" className=\"btn btn-success w-100 mb-3\" disabled={loading}>\n//             {loading ? 'Logging in...' : 'Login'}\n//           </button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Login;\n\n\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const navigate = useNavigate();\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    const url = isAdmin\n      ? 'http://localhost:5000/api/admin/admin-login'\n      : 'http://localhost:5000/api/loginuser';\n\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ email, password }),\n      });\n\n      const data = await response.json();\n      if (response.ok) {\n        localStorage.setItem('authToken', data.token);\n        navigate(isAdmin ? '/admin-dashboard' : '/');\n      } else {\n        alert(data.error || 'Invalid credentials');\n      }\n    } catch (error) {\n      alert('Error logging in.');\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleLogin}>\n        <input\n          type=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          required\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n        />\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={isAdmin}\n            onChange={() => setIsAdmin(!isAdmin)}\n          />\n          Admin Login\n        </label>\n        <button type=\"submit\">Login</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}