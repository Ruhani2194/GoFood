{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruhan\\\\Documents\\\\gofood\\\\mernapp\\\\src\\\\screens\\\\Cart.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useRef, useEffect } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { useDispatchCart } from '../components/ContextReducer';\n// import { useCart } from '../components/ContextReducer';\n// export default function Card(props) {\n//   let dispatch=useDispatchCart();\n//   let navigate = useNavigate();\n//   const [qty, setQty] = useState(1);\n//   const [size, setSize] = useState(\"\");\n//   const priceRef = useRef();\n//   let options = props.options;\n//   let priceOptions = Object.keys(options);\n//   let data=useCart()\n\n//   const handleQty = (e) => {\n//     setQty(e.target.value);\n//   };\n\n//   const handleOptions = (e) => {\n//     setSize(e.target.value);\n//   };\n\n//   useEffect(() => {\n//     setSize(priceRef.current.value);\n//   }, []);\n\n//   const handleAddtoCart = async() => {\n//     await dispatch({type:\"ADD\",id:props.foodItem._id,name:props.foodItem.name,price:finalPrice,qty:qty,size:size})\n//     console.log(data)\n//   };\n\n//   let finalPrice = qty * parseInt(options[size] || 0);\n\n//   return (\n//     <div>\n//       <div className=\"card mt-3 bg-dark text-light\" style={{ width: \"16rem\", maxHeight: \"360px\" }}>\n//         <img src={props.foodItem.img} className=\"card-img-top\" alt=\"...\" style={{ height: \"120px\", objectFit: \"fill\" }} />\n//         <div className=\"card-body\">\n//           <h5 className=\"card-title\">{props.foodItem.name}</h5>\n//           <div className='container w-100 p-0' style={{ height: \"38px\" }}>\n//             <select className=\"m-2 h-100 w-20 bg-success text-white rounded\" onChange={handleQty}>\n//               {Array.from(Array(6), (e, i) => {\n//                 return (\n//                   <option key={i + 1} value={i + 1}>{i + 1}</option>)\n//               })}\n//             </select>\n//             <select className=\"m-2 h-100 w-20 bg-success text-white rounded\" ref={priceRef} onChange={handleOptions}>\n//               {priceOptions.map((i) => {\n//                 return <option key={i} value={i}>{i}</option>\n//               })}\n//             </select>\n//             <div className='d-inline ms-2 h-100 w-20 fs-5 text-white'>\n//               ₹{finalPrice}/-\n//             </div>\n//           </div>\n\n//           <hr className=\"bg-secondary\" />\n//           <button className={'btn btn-success justify-center ms-2'} onClick={handleAddtoCart}>Add to Cart</button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// } \n\n// import React, { useState, useRef, useEffect } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { useDispatchCart, useCart } from '../components/ContextReducer';\n\n// export default function Card(props) {\n//     const dispatch = useDispatchCart();\n//     const navigate = useNavigate();\n//     const [qty, setQty] = useState(1);\n//     const [size, setSize] = useState(\"\");\n//     const priceRef = useRef();\n//     const options = props.options;\n//     const priceOptions = Object.keys(options);\n//     const data = useCart(); // Get current cart data\n\n//     // Update size based on the selected option\n//     useEffect(() => {\n//         if (priceRef.current) {\n//             setSize(priceRef.current.value);\n//         }\n//     }, []);\n\n//     const handleQty = (e) => {\n//         setQty(e.target.value);\n//     };\n\n//     const handleOptions = (e) => {\n//         setSize(e.target.value);\n//     };\n\n//     const handleAddtoCart = () => {\n//         if (size) { // Ensure a size is selected\n//             const finalPrice = qty * parseInt(options[size] || 0);\n//             dispatch({\n//                 type: \"ADD\",\n//                 id: props.foodItem._id,\n//                 name: props.foodItem.name,\n//                 price: finalPrice,\n//                 qty: qty,\n//                 size: size\n//             });\n//             console.log(data); // Log current cart data after addition\n//         } else {\n//             alert(\"Please select a size.\");\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <div className=\"card mt-3 bg-dark text-light\" style={{ width: \"16rem\", maxHeight: \"360px\" }}>\n//                 <img src={props.foodItem.img} className=\"card-img-top\" alt={props.foodItem.name} style={{ height: \"120px\", objectFit: \"fill\" }} />\n//                 <div className=\"card-body\">\n//                     <h5 className=\"card-title\">{props.foodItem.name}</h5>\n//                     <div className='container w-100 p-0' style={{ height: \"38px\" }}>\n//                         <select className=\"m-2 h-100 w-20 bg-success text-white rounded\" onChange={handleQty} value={qty}>\n//                             {Array.from(Array(6), (e, i) => (\n//                                 <option key={i + 1} value={i + 1}>{i + 1}</option>\n//                             ))}\n//                         </select>\n//                         <select className=\"m-2 h-100 w-20 bg-success text-white rounded\" ref={priceRef} onChange={handleOptions}>\n//                             {priceOptions.map((option) => (\n//                                 <option key={option} value={option}>{option}</option>\n//                             ))}\n//                         </select>\n//                         <div className='d-inline ms-2 h-100 w-20 fs-5 text-white'>\n//                             ₹{qty * (parseInt(options[size] || 0))}/-\n//                         </div>\n//                     </div>\n\n//                     <hr className=\"bg-secondary\" />\n//                     <button className='btn btn-success justify-center ms-2' onClick={handleAddtoCart}>Add to Cart</button>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\nimport React from 'react';\nimport { useCart } from '../components/ContextReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cart = () => {\n  _s();\n  const items = useCart();\n  const totalPrice = items.reduce((total, item) => total + item.price * item.qty, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), items.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your cart is empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group\",\n        children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [item.name, \" - \\u20B9\", item.price, \" x \", item.qty, \" = \\u20B9\", item.price * item.qty]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total: \\u20B9\", totalPrice]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 9\n  }, this);\n};\n_s(Cart, \"lD+kXs2DVcQx8CKhyAPmXDX8FSo=\", false, function () {\n  return [useCart];\n});\n_c = Cart;\nexport default Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useCart","jsxDEV","_jsxDEV","Cart","_s","items","totalPrice","reduce","total","item","price","qty","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","name","id","_c","$RefreshReg$"],"sources":["C:/Users/ruhan/Documents/gofood/mernapp/src/screens/Cart.js"],"sourcesContent":["// import React, { useState, useRef, useEffect } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { useDispatchCart } from '../components/ContextReducer';\r\n// import { useCart } from '../components/ContextReducer';\r\n// export default function Card(props) {\r\n//   let dispatch=useDispatchCart();\r\n//   let navigate = useNavigate();\r\n//   const [qty, setQty] = useState(1);\r\n//   const [size, setSize] = useState(\"\");\r\n//   const priceRef = useRef();\r\n//   let options = props.options;\r\n//   let priceOptions = Object.keys(options);\r\n//   let data=useCart()\r\n\r\n//   const handleQty = (e) => {\r\n//     setQty(e.target.value);\r\n//   };\r\n\r\n//   const handleOptions = (e) => {\r\n//     setSize(e.target.value);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     setSize(priceRef.current.value);\r\n//   }, []);\r\n  \r\n//   const handleAddtoCart = async() => {\r\n//     await dispatch({type:\"ADD\",id:props.foodItem._id,name:props.foodItem.name,price:finalPrice,qty:qty,size:size})\r\n//     console.log(data)\r\n//   };\r\n\r\n\r\n//   let finalPrice = qty * parseInt(options[size] || 0);\r\n\r\n//   return (\r\n//     <div>\r\n//       <div className=\"card mt-3 bg-dark text-light\" style={{ width: \"16rem\", maxHeight: \"360px\" }}>\r\n//         <img src={props.foodItem.img} className=\"card-img-top\" alt=\"...\" style={{ height: \"120px\", objectFit: \"fill\" }} />\r\n//         <div className=\"card-body\">\r\n//           <h5 className=\"card-title\">{props.foodItem.name}</h5>\r\n//           <div className='container w-100 p-0' style={{ height: \"38px\" }}>\r\n//             <select className=\"m-2 h-100 w-20 bg-success text-white rounded\" onChange={handleQty}>\r\n//               {Array.from(Array(6), (e, i) => {\r\n//                 return (\r\n//                   <option key={i + 1} value={i + 1}>{i + 1}</option>)\r\n//               })}\r\n//             </select>\r\n//             <select className=\"m-2 h-100 w-20 bg-success text-white rounded\" ref={priceRef} onChange={handleOptions}>\r\n//               {priceOptions.map((i) => {\r\n//                 return <option key={i} value={i}>{i}</option>\r\n//               })}\r\n//             </select>\r\n//             <div className='d-inline ms-2 h-100 w-20 fs-5 text-white'>\r\n//               ₹{finalPrice}/-\r\n//             </div>\r\n//           </div>\r\n\r\n//           <hr className=\"bg-secondary\" />\r\n//           <button className={'btn btn-success justify-center ms-2'} onClick={handleAddtoCart}>Add to Cart</button>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// } \r\n\r\n// import React, { useState, useRef, useEffect } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { useDispatchCart, useCart } from '../components/ContextReducer';\r\n\r\n// export default function Card(props) {\r\n//     const dispatch = useDispatchCart();\r\n//     const navigate = useNavigate();\r\n//     const [qty, setQty] = useState(1);\r\n//     const [size, setSize] = useState(\"\");\r\n//     const priceRef = useRef();\r\n//     const options = props.options;\r\n//     const priceOptions = Object.keys(options);\r\n//     const data = useCart(); // Get current cart data\r\n\r\n//     // Update size based on the selected option\r\n//     useEffect(() => {\r\n//         if (priceRef.current) {\r\n//             setSize(priceRef.current.value);\r\n//         }\r\n//     }, []);\r\n\r\n//     const handleQty = (e) => {\r\n//         setQty(e.target.value);\r\n//     };\r\n\r\n//     const handleOptions = (e) => {\r\n//         setSize(e.target.value);\r\n//     };\r\n\r\n//     const handleAddtoCart = () => {\r\n//         if (size) { // Ensure a size is selected\r\n//             const finalPrice = qty * parseInt(options[size] || 0);\r\n//             dispatch({\r\n//                 type: \"ADD\",\r\n//                 id: props.foodItem._id,\r\n//                 name: props.foodItem.name,\r\n//                 price: finalPrice,\r\n//                 qty: qty,\r\n//                 size: size\r\n//             });\r\n//             console.log(data); // Log current cart data after addition\r\n//         } else {\r\n//             alert(\"Please select a size.\");\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <div className=\"card mt-3 bg-dark text-light\" style={{ width: \"16rem\", maxHeight: \"360px\" }}>\r\n//                 <img src={props.foodItem.img} className=\"card-img-top\" alt={props.foodItem.name} style={{ height: \"120px\", objectFit: \"fill\" }} />\r\n//                 <div className=\"card-body\">\r\n//                     <h5 className=\"card-title\">{props.foodItem.name}</h5>\r\n//                     <div className='container w-100 p-0' style={{ height: \"38px\" }}>\r\n//                         <select className=\"m-2 h-100 w-20 bg-success text-white rounded\" onChange={handleQty} value={qty}>\r\n//                             {Array.from(Array(6), (e, i) => (\r\n//                                 <option key={i + 1} value={i + 1}>{i + 1}</option>\r\n//                             ))}\r\n//                         </select>\r\n//                         <select className=\"m-2 h-100 w-20 bg-success text-white rounded\" ref={priceRef} onChange={handleOptions}>\r\n//                             {priceOptions.map((option) => (\r\n//                                 <option key={option} value={option}>{option}</option>\r\n//                             ))}\r\n//                         </select>\r\n//                         <div className='d-inline ms-2 h-100 w-20 fs-5 text-white'>\r\n//                             ₹{qty * (parseInt(options[size] || 0))}/-\r\n//                         </div>\r\n//                     </div>\r\n\r\n//                     <hr className=\"bg-secondary\" />\r\n//                     <button className='btn btn-success justify-center ms-2' onClick={handleAddtoCart}>Add to Cart</button>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\nimport React from 'react';\r\nimport { useCart } from '../components/ContextReducer';\r\n\r\nconst Cart = () => {\r\n    const items = useCart();\r\n\r\n    const totalPrice = items.reduce((total, item) => total + item.price * item.qty, 0);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2>Your Cart</h2>\r\n            {items.length === 0 ? (\r\n                <p>Your cart is empty</p>\r\n            ) : (\r\n                <div>\r\n                    <ul className=\"list-group\">\r\n                        {items.map((item) => (\r\n                            <li key={item.id} className=\"list-group-item\">\r\n                                {item.name} - ₹{item.price} x {item.qty} = ₹{item.price * item.qty}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    <h3>Total: ₹{totalPrice}</h3>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cart;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAMC,KAAK,GAAGL,OAAO,CAAC,CAAC;EAEvB,MAAMM,UAAU,GAAGD,KAAK,CAACE,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAKD,KAAK,GAAGC,IAAI,CAACC,KAAK,GAAGD,IAAI,CAACE,GAAG,EAAE,CAAC,CAAC;EAElF,oBACIT,OAAA;IAAKU,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBX,OAAA;MAAAW,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjBZ,KAAK,CAACa,MAAM,KAAK,CAAC,gBACfhB,OAAA;MAAAW,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEzBf,OAAA;MAAAW,QAAA,gBACIX,OAAA;QAAIU,SAAS,EAAC,YAAY;QAAAC,QAAA,EACrBR,KAAK,CAACc,GAAG,CAAEV,IAAI,iBACZP,OAAA;UAAkBU,SAAS,EAAC,iBAAiB;UAAAC,QAAA,GACxCJ,IAAI,CAACW,IAAI,EAAC,WAAI,EAACX,IAAI,CAACC,KAAK,EAAC,KAAG,EAACD,IAAI,CAACE,GAAG,EAAC,WAAI,EAACF,IAAI,CAACC,KAAK,GAAGD,IAAI,CAACE,GAAG;QAAA,GAD7DF,IAAI,CAACY,EAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEZ,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACLf,OAAA;QAAAW,QAAA,GAAI,eAAQ,EAACP,UAAU;MAAA;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACb,EAAA,CAxBID,IAAI;EAAA,QACQH,OAAO;AAAA;AAAAsB,EAAA,GADnBnB,IAAI;AA0BV,eAAeA,IAAI;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}