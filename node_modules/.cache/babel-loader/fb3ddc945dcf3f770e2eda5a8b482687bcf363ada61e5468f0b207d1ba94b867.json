{"ast":null,"code":"// // import React, { useState, useRef, useEffect } from 'react';\n// // import { useDispatchCart, useCart } from '../components/ContextReducer';\n\n// // export default function Card(props) {\n// //     const dispatch = useDispatchCart();\n// //     const [qty, setQty] = useState(1);\n// //     const [size, setSize] = useState(\"\");\n// //     const priceRef = useRef();\n// //     const options = props.options || {}; \n// //     const priceOptions = Object.keys(options);\n// //     const data = useCart(); \n// //     useEffect(() => {\n// //         if (priceRef.current) {\n// //             setSize(priceRef.current.value);\n// //         }\n// //     }, [priceRef]);\n\n// //     const handleQty = (e) => {\n// //         setQty(e.target.value);\n// //     };\n\n// //     const handleOptions = (e) => {\n// //         setSize(e.target.value);\n// //     };\n\n// //     const handleAddtoCart = () => {\n// //         if (size) { \n// //             const finalPrice = qty * parseInt(options[size] || 0);\n// //             dispatch({\n// //                 type: \"ADD\",\n// //                 id: props.foodItem._id,\n// //                 name: props.foodItem.name,\n// //                 price: finalPrice,\n// //                 qty: qty,\n// //                 size: size\n// //             });\n// //             // console.log(data);\n// //         } else {\n// //             alert(\"Please select a size.\");\n// //         }\n// //     };\n\n// //     return (\n// //         <div>\n// //             <div className=\"card mt-3 bg-dark text-light\" style={{ width: \"16rem\", maxHeight: \"360px\" }}>\n// //                 <img src={props.foodItem.img} className=\"card-img-top\" alt={props.foodItem.name} style={{ height: \"120px\", objectFit: \"fill\" }} />\n// //                 <div className=\"card-body\">\n// //                     <h5 className=\"card-title\">{props.foodItem.name}</h5>\n// //                     <div className='container w-100 p-0' style={{ height: \"38px\" }}>\n// //                         <select className=\"m-2 h-100 w-20 bg-success text-white rounded\" onChange={handleQty} value={qty}>\n// //                             {Array.from(Array(6), (e, i) => (\n// //                                 <option key={i + 1} value={i + 1}>{i + 1}</option>\n// //                             ))}\n// //                         </select>\n// //                         <select className=\"m-2 h-100 w-20 bg-success text-white rounded\" ref={priceRef} onChange={handleOptions}>\n// //                             {priceOptions.map((option) => (\n// //                                 <option key={option} value={option}>{option}</option>\n// //                             ))}\n// //                         </select>\n// //                         <div className='d-inline ms-2 h-100 w-20 fs-5 text-white'>\n// //                             ₹{qty * (parseInt(options[size] || 0))}/-\n// //                         </div>\n// //                     </div>\n\n// //                     <hr className=\"bg-secondary\" />\n// //                     <button className='btn btn-success justify-center ms-2' onClick={handleAddtoCart}>Add to Cart</button>\n// //                 </div>\n// //             </div>\n// //         </div>\n// //     );\n// // }\n\n// import React, { useState, useRef, useEffect } from 'react';\n// import { useDispatchCart } from '../components/ContextReducer';\n\n// export default function Card(props) {\n//   const dispatch = useDispatchCart();\n//   const [qty, setQty] = useState(1);\n//   const [size, setSize] = useState('');\n//   const priceRef = useRef();\n\n//   const options = props.options || {}; // Ensure options is always an object\n//   const priceOptions = Object.keys(options);\n\n//   // Log props to see what is passed down\n//   useEffect(() => {\n//     console.log('Food Item Props:', props);\n//     console.log('Options:', options);\n//     console.log('Price Options:', priceOptions); // Log price options\n//   }, [props]);\n\n//   // Set default size when options are available\n//   useEffect(() => {\n//     if (priceOptions.length > 0 && !size) {\n//       setSize(priceOptions[0]); // Set the default size if no size is selected\n//       console.log('Setting default size:', priceOptions[0]); // Debug log\n//     }\n//   }, [priceOptions, size]);\n\n//   // Handle the change in quantity\n//   const handleQty = (e) => {\n//     setQty(e.target.value);\n//     console.log('Quantity selected:', e.target.value); // Debug log\n//   };\n\n//   // Handle the change in selected size\n//   const handleOptions = (e) => {\n//     setSize(e.target.value);\n//     console.log('Selected Size:', e.target.value); // Debug log\n//   };\n\n//   // Add the item to the cart\n//   const handleAddtoCart = () => {\n//     if (size) {\n//       const finalPrice = qty * (parseInt(options[size], 10) || 0); // Ensure price calculation is correct\n//       console.log('Final Price:', finalPrice); // Debug log\n//       dispatch({\n//         type: 'ADD',\n//         id: props.foodItem._id,\n//         name: props.foodItem.name,\n//         price: finalPrice,\n//         qty: qty,\n//         size: size,\n//       });\n//     } else {\n//       alert('Please select a size.');\n//     }\n//   };\n\n//   // Calculate the price based on the selected size and quantity\n//   const finalPrice = qty * (parseInt(options[size], 10) || 0);\n//   console.log('Calculated Final Price:', finalPrice); // Debug log\n\n//   return (\n//     <div>\n//       <div className=\"card mt-3 bg-dark text-light\" style={{ width: '18rem', maxHeight: '400px' }}>\n//         <img\n//           src={props.foodItem.img}\n//           className=\"card-img-top\"\n//           alt={props.foodItem.name}\n//           style={{ height: '120px', objectFit: 'cover' }}\n//         />\n//         <div className=\"card-body\">\n//           <h5 className=\"card-title\">{props.foodItem.name}</h5>\n//           <div className=\"container w-100 p-0\" style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n//             {/* Quantity Dropdown */}\n//             <select\n//               className=\"m-2 h-100 w-25 bg-success text-white rounded\"\n//               onChange={handleQty}\n//               value={qty}\n//             >\n//               {Array.from(Array(6), (e, i) => (\n//                 <option key={i + 1} value={i + 1}>\n//                   {i + 1}\n//                 </option>\n//               ))}\n//             </select>\n\n//             {/* Size Options Dropdown */}\n//             <select\n//               className=\"m-2 h-100 w-25 bg-success text-white rounded\"\n//               ref={priceRef}\n//               onChange={handleOptions}\n//               value={size}\n//               disabled={priceOptions.length === 0} // Disable size dropdown if no options\n//             >\n//               {priceOptions.length > 0 ? (\n//                 priceOptions.map((option) => (\n//                   <option key={option} value={option}>\n//                     {option}\n//                   </option>\n//                 ))\n//               ) : (\n//                 <option value=\"\">No Size Available</option>\n//               )}\n//             </select>\n\n//             {/* Price Display */}\n//             <div className=\"d-inline ms-2 h-100 w-25 fs-5 text-white text-center\">\n//               ₹{finalPrice || 0}/-\n//             </div>\n//           </div>\n\n//           <hr className=\"bg-secondary\" />\n\n//           {/* Disable Add to Cart button if no valid size or quantity */}\n//           <button\n//             className=\"btn btn-success w-100\"\n//             onClick={handleAddtoCart}\n//             disabled={!size || qty <= 0} // Disable if no size or quantity selected\n//           >\n//             Add to Cart\n//           </button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/ruhan/Documents/gofood/mernapp/src/components/Card.js"],"sourcesContent":["// // import React, { useState, useRef, useEffect } from 'react';\n// // import { useDispatchCart, useCart } from '../components/ContextReducer';\n\n// // export default function Card(props) {\n// //     const dispatch = useDispatchCart();\n// //     const [qty, setQty] = useState(1);\n// //     const [size, setSize] = useState(\"\");\n// //     const priceRef = useRef();\n// //     const options = props.options || {}; \n// //     const priceOptions = Object.keys(options);\n// //     const data = useCart(); \n// //     useEffect(() => {\n// //         if (priceRef.current) {\n// //             setSize(priceRef.current.value);\n// //         }\n// //     }, [priceRef]);\n\n// //     const handleQty = (e) => {\n// //         setQty(e.target.value);\n// //     };\n\n// //     const handleOptions = (e) => {\n// //         setSize(e.target.value);\n// //     };\n\n// //     const handleAddtoCart = () => {\n// //         if (size) { \n// //             const finalPrice = qty * parseInt(options[size] || 0);\n// //             dispatch({\n// //                 type: \"ADD\",\n// //                 id: props.foodItem._id,\n// //                 name: props.foodItem.name,\n// //                 price: finalPrice,\n// //                 qty: qty,\n// //                 size: size\n// //             });\n// //             // console.log(data);\n// //         } else {\n// //             alert(\"Please select a size.\");\n// //         }\n// //     };\n\n// //     return (\n// //         <div>\n// //             <div className=\"card mt-3 bg-dark text-light\" style={{ width: \"16rem\", maxHeight: \"360px\" }}>\n// //                 <img src={props.foodItem.img} className=\"card-img-top\" alt={props.foodItem.name} style={{ height: \"120px\", objectFit: \"fill\" }} />\n// //                 <div className=\"card-body\">\n// //                     <h5 className=\"card-title\">{props.foodItem.name}</h5>\n// //                     <div className='container w-100 p-0' style={{ height: \"38px\" }}>\n// //                         <select className=\"m-2 h-100 w-20 bg-success text-white rounded\" onChange={handleQty} value={qty}>\n// //                             {Array.from(Array(6), (e, i) => (\n// //                                 <option key={i + 1} value={i + 1}>{i + 1}</option>\n// //                             ))}\n// //                         </select>\n// //                         <select className=\"m-2 h-100 w-20 bg-success text-white rounded\" ref={priceRef} onChange={handleOptions}>\n// //                             {priceOptions.map((option) => (\n// //                                 <option key={option} value={option}>{option}</option>\n// //                             ))}\n// //                         </select>\n// //                         <div className='d-inline ms-2 h-100 w-20 fs-5 text-white'>\n// //                             ₹{qty * (parseInt(options[size] || 0))}/-\n// //                         </div>\n// //                     </div>\n\n// //                     <hr className=\"bg-secondary\" />\n// //                     <button className='btn btn-success justify-center ms-2' onClick={handleAddtoCart}>Add to Cart</button>\n// //                 </div>\n// //             </div>\n// //         </div>\n// //     );\n// // }\n\n\n\n// import React, { useState, useRef, useEffect } from 'react';\n// import { useDispatchCart } from '../components/ContextReducer';\n\n// export default function Card(props) {\n//   const dispatch = useDispatchCart();\n//   const [qty, setQty] = useState(1);\n//   const [size, setSize] = useState('');\n//   const priceRef = useRef();\n\n//   const options = props.options || {}; // Ensure options is always an object\n//   const priceOptions = Object.keys(options);\n\n//   // Log props to see what is passed down\n//   useEffect(() => {\n//     console.log('Food Item Props:', props);\n//     console.log('Options:', options);\n//     console.log('Price Options:', priceOptions); // Log price options\n//   }, [props]);\n\n//   // Set default size when options are available\n//   useEffect(() => {\n//     if (priceOptions.length > 0 && !size) {\n//       setSize(priceOptions[0]); // Set the default size if no size is selected\n//       console.log('Setting default size:', priceOptions[0]); // Debug log\n//     }\n//   }, [priceOptions, size]);\n\n//   // Handle the change in quantity\n//   const handleQty = (e) => {\n//     setQty(e.target.value);\n//     console.log('Quantity selected:', e.target.value); // Debug log\n//   };\n\n//   // Handle the change in selected size\n//   const handleOptions = (e) => {\n//     setSize(e.target.value);\n//     console.log('Selected Size:', e.target.value); // Debug log\n//   };\n\n//   // Add the item to the cart\n//   const handleAddtoCart = () => {\n//     if (size) {\n//       const finalPrice = qty * (parseInt(options[size], 10) || 0); // Ensure price calculation is correct\n//       console.log('Final Price:', finalPrice); // Debug log\n//       dispatch({\n//         type: 'ADD',\n//         id: props.foodItem._id,\n//         name: props.foodItem.name,\n//         price: finalPrice,\n//         qty: qty,\n//         size: size,\n//       });\n//     } else {\n//       alert('Please select a size.');\n//     }\n//   };\n\n//   // Calculate the price based on the selected size and quantity\n//   const finalPrice = qty * (parseInt(options[size], 10) || 0);\n//   console.log('Calculated Final Price:', finalPrice); // Debug log\n\n//   return (\n//     <div>\n//       <div className=\"card mt-3 bg-dark text-light\" style={{ width: '18rem', maxHeight: '400px' }}>\n//         <img\n//           src={props.foodItem.img}\n//           className=\"card-img-top\"\n//           alt={props.foodItem.name}\n//           style={{ height: '120px', objectFit: 'cover' }}\n//         />\n//         <div className=\"card-body\">\n//           <h5 className=\"card-title\">{props.foodItem.name}</h5>\n//           <div className=\"container w-100 p-0\" style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n//             {/* Quantity Dropdown */}\n//             <select\n//               className=\"m-2 h-100 w-25 bg-success text-white rounded\"\n//               onChange={handleQty}\n//               value={qty}\n//             >\n//               {Array.from(Array(6), (e, i) => (\n//                 <option key={i + 1} value={i + 1}>\n//                   {i + 1}\n//                 </option>\n//               ))}\n//             </select>\n\n//             {/* Size Options Dropdown */}\n//             <select\n//               className=\"m-2 h-100 w-25 bg-success text-white rounded\"\n//               ref={priceRef}\n//               onChange={handleOptions}\n//               value={size}\n//               disabled={priceOptions.length === 0} // Disable size dropdown if no options\n//             >\n//               {priceOptions.length > 0 ? (\n//                 priceOptions.map((option) => (\n//                   <option key={option} value={option}>\n//                     {option}\n//                   </option>\n//                 ))\n//               ) : (\n//                 <option value=\"\">No Size Available</option>\n//               )}\n//             </select>\n\n//             {/* Price Display */}\n//             <div className=\"d-inline ms-2 h-100 w-25 fs-5 text-white text-center\">\n//               ₹{finalPrice || 0}/-\n//             </div>\n//           </div>\n\n//           <hr className=\"bg-secondary\" />\n\n//           {/* Disable Add to Cart button if no valid size or quantity */}\n//           <button\n//             className=\"btn btn-success w-100\"\n//             onClick={handleAddtoCart}\n//             disabled={!size || qty <= 0} // Disable if no size or quantity selected\n//           >\n//             Add to Cart\n//           </button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}