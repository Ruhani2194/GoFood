{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruhan\\\\Documents\\\\gofood\\\\mernapp\\\\src\\\\screens\\\\Login.js\",\n  _s = $RefreshSig$();\n// // // // import React, { useState } from 'react';\n// // // // import Navbar from '../components/Navbar';\n// // // // import { useNavigate, Link } from 'react-router-dom';\n\n// // // // export default function Login() {\n// // // //   const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\n// // // //   const navigate = useNavigate();\n\n// // // //   const handleSubmit = async (e) => {\n// // // //     e.preventDefault();\n\n// // // //     try {\n// // // //       const response = await fetch(\"http://localhost:5000/api/loginuser\", {\n// // // //         method: 'POST',\n// // // //         headers: {\n// // // //           'Content-Type': 'application/json',\n// // // //         },\n// // // //         body: JSON.stringify({ email: credentials.email, password: credentials.password }),\n// // // //       });\n\n// // // //       const json = await response.json();\n// // // //       console.log(json);\n\n// // // //       if (json.success) {\n// // // //         // Store the token and email in local storage\n// // // //         localStorage.setItem(\"authToken\", json.authToken);\n// // // //         localStorage.setItem(\"userEmail\", credentials.email);\n\n// // // //         // Navigate to the home page upon successful login\n// // // //         navigate(\"/\");\n// // // //       } else {\n// // // //         alert(\"Invalid credentials. Please try again.\");\n// // // //       }\n// // // //     } catch (error) {\n// // // //       console.error('Error during login:', error);\n// // // //       alert(\"Something went wrong. Please try again later.\");\n// // // //     }\n// // // //   };\n\n// // // //   const onChange = (e) => {\n// // // //     setCredentials({ ...credentials, [e.target.name]: e.target.value });\n// // // //   };\n\n// // // //   return (\n// // // //     <div style={{ backgroundImage: 'url(\"https://images.pexels.com/photos/326278/pexels-photo-326278.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")', height: '100vh', backgroundSize: 'cover' }}>\n// // // //       <Navbar />\n// // // //       <div className='container'>\n// // // //         <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n// // // //           <div className=\"m-3\">\n// // // //             <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\n// // // //             <input\n// // // //               type=\"email\"\n// // // //               className=\"form-control\"\n// // // //               name='email'\n// // // //               value={credentials.email}\n// // // //               onChange={onChange}\n// // // //               aria-describedby=\"emailHelp\"\n// // // //               required\n// // // //             />\n// // // //             <div id=\"emailHelp\" className=\"form-text\">We'll never share your email with anyone.</div>\n// // // //           </div>\n// // // //           <div className=\"m-3\">\n// // // //             <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\n// // // //             <input\n// // // //               type=\"password\"\n// // // //               className=\"form-control\"\n// // // //               name='password'\n// // // //               value={credentials.password}\n// // // //               onChange={onChange}\n// // // //               required\n// // // //             />\n// // // //           </div>\n// // // //           <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n// // // //           <Link to=\"/signup\" className=\"m-3 mx-1 btn btn-danger\">I'm a new user</Link>\n// // // //         </form>\n// // // //       </div>\n// // // //     </div>\n// // // //   );\n// // // // }\n\n// // // import React, { useState } from 'react';\n// // // import { useNavigate, Link } from 'react-router-dom';\n// // // import Navbar from '../components/Navbar';\n\n// // // export default function Login() {\n// // //   const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\n// // //   const navigate = useNavigate();\n\n// // //   const handleSubmit = async (e) => {\n// // //     e.preventDefault();\n\n// // //     try {\n// // //       const response = await fetch(\"http://localhost:5000/api/loginuser\", {\n// // //         method: 'POST',\n// // //         headers: {\n// // //           'Content-Type': 'application/json',\n// // //         },\n// // //         body: JSON.stringify({ email: credentials.email, password: credentials.password }),\n// // //       });\n\n// // //       const json = await response.json();\n\n// // //       if (json.success) {\n// // //         // Store the token and email in local storage\n// // //         localStorage.setItem(\"authToken\", json.authToken);\n// // //         localStorage.setItem(\"userEmail\", credentials.email);\n\n// // //         // If user is admin, navigate to an admin page\n// // //         const user = await fetchUserData(credentials.email); // Fetch user data to check if admin\n// // //         if (user.role === 'admin') {\n// // //           navigate(\"/admin/upload\"); // Assuming an admin upload page exists\n// // //         } else {\n// // //           navigate(\"/\"); // Otherwise, navigate to the home page\n// // //         }\n// // //       } else {\n// // //         alert(\"Invalid credentials. Please try again.\");\n// // //       }\n// // //     } catch (error) {\n// // //       console.error('Error during login:', error);\n// // //       alert(\"Something went wrong. Please try again later.\");\n// // //     }\n// // //   };\n\n// // //   const fetchUserData = async (email) => {\n// // //     const response = await fetch(`http://localhost:5000/api/getUserByEmail/${email}`);\n// // //     const data = await response.json();\n// // //     return data;\n// // //   };\n\n// // //   const onChange = (e) => {\n// // //     setCredentials({ ...credentials, [e.target.name]: e.target.value });\n// // //   };\n\n// // //   return (\n// // //     <div style={{ backgroundImage: 'url(\"https://images.pexels.com/photos/326278/pexels-photo-326278.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")', height: '100vh', backgroundSize: 'cover' }}>\n// // //       <Navbar />\n// // //       <div className='container'>\n// // //         <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n// // //           <div className=\"m-3\">\n// // //             <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\n// // //             <input\n// // //               type=\"email\"\n// // //               className=\"form-control\"\n// // //               name='email'\n// // //               value={credentials.email}\n// // //               onChange={onChange}\n// // //               aria-describedby=\"emailHelp\"\n// // //               required\n// // //             />\n// // //           </div>\n// // //           <div className=\"m-3\">\n// // //             <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\n// // //             <input\n// // //               type=\"password\"\n// // //               className=\"form-control\"\n// // //               name='password'\n// // //               value={credentials.password}\n// // //               onChange={onChange}\n// // //               required\n// // //             />\n// // //           </div>\n// // //           <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n// // //           <Link to=\"/signup\" className=\"m-3 mx-1 btn btn-danger\">I'm a new user</Link>\n// // //         </form>\n// // //       </div>\n// // //     </div>\n// // //   );\n// // // }\n\n// // import React, { useState } from 'react';\n// // import { useNavigate, Link } from 'react-router-dom';\n// // import Navbar from '../components/Navbar';\n\n// // export default function Login() {\n// //   const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\n// //   const navigate = useNavigate();\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n\n// //     try {\n// //       const response = await fetch(\"http://localhost:5000/api/loginuser\", {\n// //         method: 'POST',\n// //         headers: {\n// //           'Content-Type': 'application/json',\n// //         },\n// //         body: JSON.stringify({ email: credentials.email, password: credentials.password }),\n// //       });\n\n// //       const json = await response.json();\n\n// //       if (json.success) {\n// //         // Store the token and user data in local storage\n// //         localStorage.setItem(\"authToken\", json.authToken);\n// //         localStorage.setItem(\"userEmail\", credentials.email);\n\n// //         // Check the user role from the response\n// //         if (json.role === 'admin') {\n// //           navigate(\"/admin-dashboard\");  // Redirect to admin dashboard if the role is admin\n// //         } else {\n// //           navigate(\"/\");  // Redirect to home page for regular users\n// //         }\n// //       } else {\n// //         alert(\"Invalid credentials. Please try again.\");\n// //       }\n// //     } catch (error) {\n// //       console.error('Error during login:', error);\n// //       alert(\"Something went wrong. Please try again later.\");\n// //     }\n// //   };\n\n// //   const onChange = (e) => {\n// //     setCredentials({ ...credentials, [e.target.name]: e.target.value });\n// //   };\n\n// //   return (\n// //     <div style={{ backgroundImage: 'url(\"https://images.pexels.com/photos/326278/pexels-photo-326278.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")', height: '100vh', backgroundSize: 'cover' }}>\n// //       <Navbar />\n// //       <div className='container'>\n// //         <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n// //           <div className=\"m-3\">\n// //             <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\n// //             <input\n// //               type=\"email\"\n// //               className=\"form-control\"\n// //               name='email'\n// //               value={credentials.email}\n// //               onChange={onChange}\n// //               required\n// //             />\n// //           </div>\n// //           <div className=\"m-3\">\n// //             <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\n// //             <input\n// //               type=\"password\"\n// //               className=\"form-control\"\n// //               name='password'\n// //               value={credentials.password}\n// //               onChange={onChange}\n// //               required\n// //             />\n// //           </div>\n// //           <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n// //           <Link to=\"/signup\" className=\"m-3 mx-1 btn btn-danger\">I'm a new user</Link>\n// //         </form>\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n// // import React, { useState } from 'react';\n// // import { useNavigate } from 'react-router-dom';  // Import useNavigate instead of useHistory\n\n// // const Login = () => {\n// //   const [email, setEmail] = useState('');\n// //   const [password, setPassword] = useState('');\n// //   const [error, setError] = useState('');\n// //   const [loading, setLoading] = useState(false);\n// //   const [isAdmin, setIsAdmin] = useState(false);  // Add a flag for admin check\n// //   const navigate = useNavigate();  // Initialize useNavigate hook\n\n// //   // Handle input changes for email and password\n// //   const handleEmailChange = (e) => {\n// //     setEmail(e.target.value);\n// //   };\n\n// //   const handlePasswordChange = (e) => {\n// //     setPassword(e.target.value);\n// //   };\n\n// //   // Handle admin toggle (for example, checkbox or selection)\n// //   const handleAdminToggle = () => {\n// //     setIsAdmin(!isAdmin);  // Toggle admin state (this could be a selection in your form)\n// //   };\n\n// //   // Submit login form\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n\n// //     setLoading(true);\n// //     setError('');\n\n// //     // Create the login request body\n// //     const requestData = {\n// //       email,\n// //       password\n// //     };\n\n// //     // Determine the login endpoint based on whether the user is an admin or not\n// //     const url = isAdmin \n// //       ? 'http://localhost:5000/api/admin/admin-login' \n// //       : 'http://localhost:5000/api/loginuser';\n\n// //     try {\n// //       const response = await fetch(url, {\n// //         method: 'POST',\n// //         headers: {\n// //           'Content-Type': 'application/json',\n// //         },\n// //         body: JSON.stringify(requestData),\n// //       });\n\n// //       const data = await response.json();\n\n// //       // Check if the login was successful\n// //       if (response.ok) {\n// //         // Save the token in localStorage for future requests\n// //         localStorage.setItem('authToken', data.token);\n// //         // Redirect to the appropriate page based on user type\n// //         if (isAdmin) {\n// //           navigate('/admin-dashboard'); // Admin dashboard\n// //         } else {\n// //           navigate('/'); // User dashboard\n// //         }\n// //       } else {\n// //         setError(data.error || 'Login failed. Please check your credentials.');\n// //       }\n// //     } catch (err) {\n// //       setError('An error occurred. Please try again later.');\n// //     }\n\n// //     setLoading(false);\n// //   };\n\n// //   return (\n// //     <div className=\"login-container\">\n// //       <h2>{isAdmin ? 'Admin Login' : 'User Login'}</h2>\n// //       <form onSubmit={handleSubmit}>\n// //         <div className=\"form-group\">\n// //           <label htmlFor=\"email\">Email:</label>\n// //           <input\n// //             type=\"email\"\n// //             id=\"email\"\n// //             value={email}\n// //             onChange={handleEmailChange}\n// //             required\n// //             placeholder=\"Enter your email\"\n// //           />\n// //         </div>\n// //         <div className=\"form-group\">\n// //           <label htmlFor=\"password\">Password:</label>\n// //           <input\n// //             type=\"password\"\n// //             id=\"password\"\n// //             value={password}\n// //             onChange={handlePasswordChange}\n// //             required\n// //             placeholder=\"Enter your password\"\n// //           />\n// //         </div>\n\n// //         <div className=\"form-group\">\n// //           <label>\n// //             <input\n// //               type=\"checkbox\"\n// //               checked={isAdmin}\n// //               onChange={handleAdminToggle}\n// //             />\n// //             {' '}Login as Admin\n// //           </label>\n// //         </div>\n\n// //         {error && <p className=\"error-message\">{error}</p>}\n\n// //         <button type=\"submit\" disabled={loading}>\n// //           {loading ? 'Logging in...' : 'Login'}\n// //         </button>\n// //       </form>\n// //     </div>\n// //   );\n// // };\n\n// // export default Login;\n\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n\n// const Login = () => {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState('');\n//   const [loading, setLoading] = useState(false);\n//   const [isAdmin, setIsAdmin] = useState(false); // Admin state\n//   const navigate = useNavigate(); // Navigate hook\n\n//   const handleEmailChange = (e) => setEmail(e.target.value);\n//   const handlePasswordChange = (e) => setPassword(e.target.value);\n//   const handleAdminToggle = () => setIsAdmin(!isAdmin);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n//     setError('');\n\n//     const url = isAdmin\n//       ? 'http://localhost:5000/api/admin/admin-login'\n//       : 'http://localhost:5000/api/loginuser';\n\n//     try {\n//       const response = await fetch(url, {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify({ email, password }),\n//       });\n//       const data = await response.json();\n\n//       if (response.ok) {\n//         localStorage.setItem('authToken', data.token);\n//         navigate(isAdmin ? '/' : '/');\n//       } else {\n//         setError(data.error || 'Invalid credentials.');\n//       }\n//     } catch (error) {\n//       setError('An error occurred. Please try again.');\n//     }\n//     setLoading(false);\n//   };\n\n//   return (\n//     <div\n//       style={{\n//         backgroundImage: 'url(\"https://images.pexels.com/photos/326278/pexels-photo-326278.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")',\n//         backgroundSize: 'cover',\n//         height: '100vh',\n//         display: 'flex',\n//         justifyContent: 'center',\n//         alignItems: 'center',\n//       }}\n//     >\n//       <div className=\"container w-50 bg-dark text-light p-5 rounded border border-success\">\n//         <h2 className=\"text-center mb-4\">{isAdmin ? 'Admin Login' : 'User Login'}</h2>\n//         <form onSubmit={handleSubmit}>\n//           <div className=\"mb-3\">\n//             <label htmlFor=\"email\" className=\"form-label\">\n//               Email:\n//             </label>\n//             <input\n//               type=\"email\"\n//               id=\"email\"\n//               value={email}\n//               onChange={handleEmailChange}\n//               className=\"form-control\"\n//               placeholder=\"Enter your email\"\n//               required\n//             />\n//           </div>\n//           <div className=\"mb-3\">\n//             <label htmlFor=\"password\" className=\"form-label\">\n//               Password:\n//             </label>\n//             <input\n//               type=\"password\"\n//               id=\"password\"\n//               value={password}\n//               onChange={handlePasswordChange}\n//               className=\"form-control\"\n//               placeholder=\"Enter your password\"\n//               required\n//             />\n//           </div>\n//           <div className=\"form-check mb-3\">\n//             <input\n//               type=\"checkbox\"\n//               id=\"admin\"\n//               className=\"form-check-input\"\n//               checked={isAdmin}\n//               onChange={handleAdminToggle}\n//             />\n//             <label htmlFor=\"admin\" className=\"form-check-label\">\n//               Login as Admin\n//             </label>\n//           </div>\n//           {error && <p className=\"text-danger text-center\">{error}</p>}\n//           <button type=\"submit\" className=\"btn btn-success w-100 mb-3\" disabled={loading}>\n//             {loading ? 'Logging in...' : 'Login'}\n//           </button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Login;\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false); // State to toggle between admin/user login\n  const navigate = useNavigate(); // Hook for navigation\n\n  const handleEmailChange = e => setEmail(e.target.value);\n  const handlePasswordChange = e => setPassword(e.target.value);\n  const handleAdminToggle = () => setIsAdmin(!isAdmin);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    const url = isAdmin ? 'http://localhost:5000/api/admin/admin-login' : 'http://localhost:5000/api/loginuser';\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Store auth token and role\n        localStorage.setItem('authToken', JSON.stringify(data.token));\n        localStorage.setItem('userRole', isAdmin ? 'admin' : 'user');\n\n        // Navigate based on role\n        navigate(isAdmin ? '/' : '/');\n      } else {\n        setError(data.error || 'Invalid email or password. Please try again.');\n        setTimeout(() => setError(''), 3000); // Clear error after 3 seconds\n      }\n    } catch (err) {\n      setError('An error occurred while logging in. Please try again.');\n      setTimeout(() => setError(''), 3000); // Clear error after 3 seconds\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundImage: 'url(\"https://images.pexels.com/photos/326278/pexels-photo-326278.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")',\n      backgroundSize: 'cover',\n      height: '100vh',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container w-50 bg-dark text-light p-5 rounded border border-success\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center mb-4\",\n        children: isAdmin ? 'Admin Login' : 'User Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"form-label\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            value: email,\n            onChange: handleEmailChange,\n            className: \"form-control\",\n            placeholder: \"Enter your email\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: \"form-label\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            value: password,\n            onChange: handlePasswordChange,\n            className: \"form-control\",\n            placeholder: \"Enter your password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"admin\",\n            className: \"form-check-input\",\n            checked: isAdmin,\n            onChange: handleAdminToggle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"admin\",\n            className: \"form-check-label\",\n            children: \"Login as Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger text-center\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-success w-100 mb-3\",\n          disabled: loading,\n          children: loading ? 'Logging in...' : 'Login'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 540,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"/Lnkcyv2k+GSWk/kvH8Pl4bFdow=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","error","setError","loading","setLoading","isAdmin","setIsAdmin","navigate","handleEmailChange","e","target","value","handlePasswordChange","handleAdminToggle","handleSubmit","preventDefault","url","response","fetch","method","headers","body","JSON","stringify","data","json","ok","localStorage","setItem","token","setTimeout","err","style","backgroundImage","backgroundSize","height","display","justifyContent","alignItems","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","placeholder","required","checked","disabled","_c","$RefreshReg$"],"sources":["C:/Users/ruhan/Documents/gofood/mernapp/src/screens/Login.js"],"sourcesContent":["// // // // import React, { useState } from 'react';\n// // // // import Navbar from '../components/Navbar';\n// // // // import { useNavigate, Link } from 'react-router-dom';\n\n// // // // export default function Login() {\n// // // //   const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\n// // // //   const navigate = useNavigate();\n\n// // // //   const handleSubmit = async (e) => {\n// // // //     e.preventDefault();\n\n// // // //     try {\n// // // //       const response = await fetch(\"http://localhost:5000/api/loginuser\", {\n// // // //         method: 'POST',\n// // // //         headers: {\n// // // //           'Content-Type': 'application/json',\n// // // //         },\n// // // //         body: JSON.stringify({ email: credentials.email, password: credentials.password }),\n// // // //       });\n\n// // // //       const json = await response.json();\n// // // //       console.log(json);\n\n// // // //       if (json.success) {\n// // // //         // Store the token and email in local storage\n// // // //         localStorage.setItem(\"authToken\", json.authToken);\n// // // //         localStorage.setItem(\"userEmail\", credentials.email);\n\n// // // //         // Navigate to the home page upon successful login\n// // // //         navigate(\"/\");\n// // // //       } else {\n// // // //         alert(\"Invalid credentials. Please try again.\");\n// // // //       }\n// // // //     } catch (error) {\n// // // //       console.error('Error during login:', error);\n// // // //       alert(\"Something went wrong. Please try again later.\");\n// // // //     }\n// // // //   };\n\n// // // //   const onChange = (e) => {\n// // // //     setCredentials({ ...credentials, [e.target.name]: e.target.value });\n// // // //   };\n\n// // // //   return (\n// // // //     <div style={{ backgroundImage: 'url(\"https://images.pexels.com/photos/326278/pexels-photo-326278.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")', height: '100vh', backgroundSize: 'cover' }}>\n// // // //       <Navbar />\n// // // //       <div className='container'>\n// // // //         <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n// // // //           <div className=\"m-3\">\n// // // //             <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\n// // // //             <input\n// // // //               type=\"email\"\n// // // //               className=\"form-control\"\n// // // //               name='email'\n// // // //               value={credentials.email}\n// // // //               onChange={onChange}\n// // // //               aria-describedby=\"emailHelp\"\n// // // //               required\n// // // //             />\n// // // //             <div id=\"emailHelp\" className=\"form-text\">We'll never share your email with anyone.</div>\n// // // //           </div>\n// // // //           <div className=\"m-3\">\n// // // //             <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\n// // // //             <input\n// // // //               type=\"password\"\n// // // //               className=\"form-control\"\n// // // //               name='password'\n// // // //               value={credentials.password}\n// // // //               onChange={onChange}\n// // // //               required\n// // // //             />\n// // // //           </div>\n// // // //           <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n// // // //           <Link to=\"/signup\" className=\"m-3 mx-1 btn btn-danger\">I'm a new user</Link>\n// // // //         </form>\n// // // //       </div>\n// // // //     </div>\n// // // //   );\n// // // // }\n\n\n// // // import React, { useState } from 'react';\n// // // import { useNavigate, Link } from 'react-router-dom';\n// // // import Navbar from '../components/Navbar';\n\n// // // export default function Login() {\n// // //   const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\n// // //   const navigate = useNavigate();\n\n// // //   const handleSubmit = async (e) => {\n// // //     e.preventDefault();\n\n// // //     try {\n// // //       const response = await fetch(\"http://localhost:5000/api/loginuser\", {\n// // //         method: 'POST',\n// // //         headers: {\n// // //           'Content-Type': 'application/json',\n// // //         },\n// // //         body: JSON.stringify({ email: credentials.email, password: credentials.password }),\n// // //       });\n\n// // //       const json = await response.json();\n\n// // //       if (json.success) {\n// // //         // Store the token and email in local storage\n// // //         localStorage.setItem(\"authToken\", json.authToken);\n// // //         localStorage.setItem(\"userEmail\", credentials.email);\n\n// // //         // If user is admin, navigate to an admin page\n// // //         const user = await fetchUserData(credentials.email); // Fetch user data to check if admin\n// // //         if (user.role === 'admin') {\n// // //           navigate(\"/admin/upload\"); // Assuming an admin upload page exists\n// // //         } else {\n// // //           navigate(\"/\"); // Otherwise, navigate to the home page\n// // //         }\n// // //       } else {\n// // //         alert(\"Invalid credentials. Please try again.\");\n// // //       }\n// // //     } catch (error) {\n// // //       console.error('Error during login:', error);\n// // //       alert(\"Something went wrong. Please try again later.\");\n// // //     }\n// // //   };\n\n// // //   const fetchUserData = async (email) => {\n// // //     const response = await fetch(`http://localhost:5000/api/getUserByEmail/${email}`);\n// // //     const data = await response.json();\n// // //     return data;\n// // //   };\n\n// // //   const onChange = (e) => {\n// // //     setCredentials({ ...credentials, [e.target.name]: e.target.value });\n// // //   };\n\n// // //   return (\n// // //     <div style={{ backgroundImage: 'url(\"https://images.pexels.com/photos/326278/pexels-photo-326278.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")', height: '100vh', backgroundSize: 'cover' }}>\n// // //       <Navbar />\n// // //       <div className='container'>\n// // //         <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n// // //           <div className=\"m-3\">\n// // //             <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\n// // //             <input\n// // //               type=\"email\"\n// // //               className=\"form-control\"\n// // //               name='email'\n// // //               value={credentials.email}\n// // //               onChange={onChange}\n// // //               aria-describedby=\"emailHelp\"\n// // //               required\n// // //             />\n// // //           </div>\n// // //           <div className=\"m-3\">\n// // //             <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\n// // //             <input\n// // //               type=\"password\"\n// // //               className=\"form-control\"\n// // //               name='password'\n// // //               value={credentials.password}\n// // //               onChange={onChange}\n// // //               required\n// // //             />\n// // //           </div>\n// // //           <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n// // //           <Link to=\"/signup\" className=\"m-3 mx-1 btn btn-danger\">I'm a new user</Link>\n// // //         </form>\n// // //       </div>\n// // //     </div>\n// // //   );\n// // // }\n\n// // import React, { useState } from 'react';\n// // import { useNavigate, Link } from 'react-router-dom';\n// // import Navbar from '../components/Navbar';\n\n// // export default function Login() {\n// //   const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\n// //   const navigate = useNavigate();\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n  \n// //     try {\n// //       const response = await fetch(\"http://localhost:5000/api/loginuser\", {\n// //         method: 'POST',\n// //         headers: {\n// //           'Content-Type': 'application/json',\n// //         },\n// //         body: JSON.stringify({ email: credentials.email, password: credentials.password }),\n// //       });\n      \n// //       const json = await response.json();\n  \n// //       if (json.success) {\n// //         // Store the token and user data in local storage\n// //         localStorage.setItem(\"authToken\", json.authToken);\n// //         localStorage.setItem(\"userEmail\", credentials.email);\n  \n// //         // Check the user role from the response\n// //         if (json.role === 'admin') {\n// //           navigate(\"/admin-dashboard\");  // Redirect to admin dashboard if the role is admin\n// //         } else {\n// //           navigate(\"/\");  // Redirect to home page for regular users\n// //         }\n// //       } else {\n// //         alert(\"Invalid credentials. Please try again.\");\n// //       }\n// //     } catch (error) {\n// //       console.error('Error during login:', error);\n// //       alert(\"Something went wrong. Please try again later.\");\n// //     }\n// //   };\n  \n// //   const onChange = (e) => {\n// //     setCredentials({ ...credentials, [e.target.name]: e.target.value });\n// //   };\n\n// //   return (\n// //     <div style={{ backgroundImage: 'url(\"https://images.pexels.com/photos/326278/pexels-photo-326278.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")', height: '100vh', backgroundSize: 'cover' }}>\n// //       <Navbar />\n// //       <div className='container'>\n// //         <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n// //           <div className=\"m-3\">\n// //             <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\n// //             <input\n// //               type=\"email\"\n// //               className=\"form-control\"\n// //               name='email'\n// //               value={credentials.email}\n// //               onChange={onChange}\n// //               required\n// //             />\n// //           </div>\n// //           <div className=\"m-3\">\n// //             <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\n// //             <input\n// //               type=\"password\"\n// //               className=\"form-control\"\n// //               name='password'\n// //               value={credentials.password}\n// //               onChange={onChange}\n// //               required\n// //             />\n// //           </div>\n// //           <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n// //           <Link to=\"/signup\" className=\"m-3 mx-1 btn btn-danger\">I'm a new user</Link>\n// //         </form>\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n// // import React, { useState } from 'react';\n// // import { useNavigate } from 'react-router-dom';  // Import useNavigate instead of useHistory\n\n// // const Login = () => {\n// //   const [email, setEmail] = useState('');\n// //   const [password, setPassword] = useState('');\n// //   const [error, setError] = useState('');\n// //   const [loading, setLoading] = useState(false);\n// //   const [isAdmin, setIsAdmin] = useState(false);  // Add a flag for admin check\n// //   const navigate = useNavigate();  // Initialize useNavigate hook\n\n// //   // Handle input changes for email and password\n// //   const handleEmailChange = (e) => {\n// //     setEmail(e.target.value);\n// //   };\n\n// //   const handlePasswordChange = (e) => {\n// //     setPassword(e.target.value);\n// //   };\n\n// //   // Handle admin toggle (for example, checkbox or selection)\n// //   const handleAdminToggle = () => {\n// //     setIsAdmin(!isAdmin);  // Toggle admin state (this could be a selection in your form)\n// //   };\n\n// //   // Submit login form\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n\n// //     setLoading(true);\n// //     setError('');\n\n// //     // Create the login request body\n// //     const requestData = {\n// //       email,\n// //       password\n// //     };\n\n// //     // Determine the login endpoint based on whether the user is an admin or not\n// //     const url = isAdmin \n// //       ? 'http://localhost:5000/api/admin/admin-login' \n// //       : 'http://localhost:5000/api/loginuser';\n\n// //     try {\n// //       const response = await fetch(url, {\n// //         method: 'POST',\n// //         headers: {\n// //           'Content-Type': 'application/json',\n// //         },\n// //         body: JSON.stringify(requestData),\n// //       });\n\n// //       const data = await response.json();\n\n// //       // Check if the login was successful\n// //       if (response.ok) {\n// //         // Save the token in localStorage for future requests\n// //         localStorage.setItem('authToken', data.token);\n// //         // Redirect to the appropriate page based on user type\n// //         if (isAdmin) {\n// //           navigate('/admin-dashboard'); // Admin dashboard\n// //         } else {\n// //           navigate('/'); // User dashboard\n// //         }\n// //       } else {\n// //         setError(data.error || 'Login failed. Please check your credentials.');\n// //       }\n// //     } catch (err) {\n// //       setError('An error occurred. Please try again later.');\n// //     }\n\n// //     setLoading(false);\n// //   };\n\n// //   return (\n// //     <div className=\"login-container\">\n// //       <h2>{isAdmin ? 'Admin Login' : 'User Login'}</h2>\n// //       <form onSubmit={handleSubmit}>\n// //         <div className=\"form-group\">\n// //           <label htmlFor=\"email\">Email:</label>\n// //           <input\n// //             type=\"email\"\n// //             id=\"email\"\n// //             value={email}\n// //             onChange={handleEmailChange}\n// //             required\n// //             placeholder=\"Enter your email\"\n// //           />\n// //         </div>\n// //         <div className=\"form-group\">\n// //           <label htmlFor=\"password\">Password:</label>\n// //           <input\n// //             type=\"password\"\n// //             id=\"password\"\n// //             value={password}\n// //             onChange={handlePasswordChange}\n// //             required\n// //             placeholder=\"Enter your password\"\n// //           />\n// //         </div>\n\n// //         <div className=\"form-group\">\n// //           <label>\n// //             <input\n// //               type=\"checkbox\"\n// //               checked={isAdmin}\n// //               onChange={handleAdminToggle}\n// //             />\n// //             {' '}Login as Admin\n// //           </label>\n// //         </div>\n\n// //         {error && <p className=\"error-message\">{error}</p>}\n\n// //         <button type=\"submit\" disabled={loading}>\n// //           {loading ? 'Logging in...' : 'Login'}\n// //         </button>\n// //       </form>\n// //     </div>\n// //   );\n// // };\n\n// // export default Login;\n\n\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n\n// const Login = () => {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState('');\n//   const [loading, setLoading] = useState(false);\n//   const [isAdmin, setIsAdmin] = useState(false); // Admin state\n//   const navigate = useNavigate(); // Navigate hook\n\n//   const handleEmailChange = (e) => setEmail(e.target.value);\n//   const handlePasswordChange = (e) => setPassword(e.target.value);\n//   const handleAdminToggle = () => setIsAdmin(!isAdmin);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n//     setError('');\n\n//     const url = isAdmin\n//       ? 'http://localhost:5000/api/admin/admin-login'\n//       : 'http://localhost:5000/api/loginuser';\n\n//     try {\n//       const response = await fetch(url, {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify({ email, password }),\n//       });\n//       const data = await response.json();\n\n//       if (response.ok) {\n//         localStorage.setItem('authToken', data.token);\n//         navigate(isAdmin ? '/' : '/');\n//       } else {\n//         setError(data.error || 'Invalid credentials.');\n//       }\n//     } catch (error) {\n//       setError('An error occurred. Please try again.');\n//     }\n//     setLoading(false);\n//   };\n\n//   return (\n//     <div\n//       style={{\n//         backgroundImage: 'url(\"https://images.pexels.com/photos/326278/pexels-photo-326278.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")',\n//         backgroundSize: 'cover',\n//         height: '100vh',\n//         display: 'flex',\n//         justifyContent: 'center',\n//         alignItems: 'center',\n//       }}\n//     >\n//       <div className=\"container w-50 bg-dark text-light p-5 rounded border border-success\">\n//         <h2 className=\"text-center mb-4\">{isAdmin ? 'Admin Login' : 'User Login'}</h2>\n//         <form onSubmit={handleSubmit}>\n//           <div className=\"mb-3\">\n//             <label htmlFor=\"email\" className=\"form-label\">\n//               Email:\n//             </label>\n//             <input\n//               type=\"email\"\n//               id=\"email\"\n//               value={email}\n//               onChange={handleEmailChange}\n//               className=\"form-control\"\n//               placeholder=\"Enter your email\"\n//               required\n//             />\n//           </div>\n//           <div className=\"mb-3\">\n//             <label htmlFor=\"password\" className=\"form-label\">\n//               Password:\n//             </label>\n//             <input\n//               type=\"password\"\n//               id=\"password\"\n//               value={password}\n//               onChange={handlePasswordChange}\n//               className=\"form-control\"\n//               placeholder=\"Enter your password\"\n//               required\n//             />\n//           </div>\n//           <div className=\"form-check mb-3\">\n//             <input\n//               type=\"checkbox\"\n//               id=\"admin\"\n//               className=\"form-check-input\"\n//               checked={isAdmin}\n//               onChange={handleAdminToggle}\n//             />\n//             <label htmlFor=\"admin\" className=\"form-check-label\">\n//               Login as Admin\n//             </label>\n//           </div>\n//           {error && <p className=\"text-danger text-center\">{error}</p>}\n//           <button type=\"submit\" className=\"btn btn-success w-100 mb-3\" disabled={loading}>\n//             {loading ? 'Logging in...' : 'Login'}\n//           </button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Login;\n\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false); // State to toggle between admin/user login\n  const navigate = useNavigate(); // Hook for navigation\n\n  const handleEmailChange = (e) => setEmail(e.target.value);\n  const handlePasswordChange = (e) => setPassword(e.target.value);\n  const handleAdminToggle = () => setIsAdmin(!isAdmin);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n\n    const url = isAdmin\n      ? 'http://localhost:5000/api/admin/admin-login'\n      : 'http://localhost:5000/api/loginuser';\n\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ email, password }),\n      });\n      const data = await response.json();\n\n      if (response.ok) {\n        // Store auth token and role\n        localStorage.setItem('authToken', JSON.stringify(data.token));\n        localStorage.setItem('userRole', isAdmin ? 'admin' : 'user');\n\n        // Navigate based on role\n        navigate(isAdmin ? '/' : '/');\n      } else {\n        setError(data.error || 'Invalid email or password. Please try again.');\n        setTimeout(() => setError(''), 3000); // Clear error after 3 seconds\n      }\n    } catch (err) {\n      setError('An error occurred while logging in. Please try again.');\n      setTimeout(() => setError(''), 3000); // Clear error after 3 seconds\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div\n      style={{\n        backgroundImage:\n          'url(\"https://images.pexels.com/photos/326278/pexels-photo-326278.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")',\n        backgroundSize: 'cover',\n        height: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      <div className=\"container w-50 bg-dark text-light p-5 rounded border border-success\">\n        <h2 className=\"text-center mb-4\">{isAdmin ? 'Admin Login' : 'User Login'}</h2>\n        <form onSubmit={handleSubmit}>\n          <div className=\"mb-3\">\n            <label htmlFor=\"email\" className=\"form-label\">\n              Email:\n            </label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              value={email}\n              onChange={handleEmailChange}\n              className=\"form-control\"\n              placeholder=\"Enter your email\"\n              required\n            />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"password\" className=\"form-label\">\n              Password:\n            </label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={handlePasswordChange}\n              className=\"form-control\"\n              placeholder=\"Enter your password\"\n              required\n            />\n          </div>\n          <div className=\"form-check mb-3\">\n            <input\n              type=\"checkbox\"\n              id=\"admin\"\n              className=\"form-check-input\"\n              checked={isAdmin}\n              onChange={handleAdminToggle}\n            />\n            <label htmlFor=\"admin\" className=\"form-check-label\">\n              Login as Admin\n            </label>\n          </div>\n          {error && <p className=\"text-danger text-center\">{error}</p>}\n          <button type=\"submit\" className=\"btn btn-success w-100 mb-3\" disabled={loading}>\n            {loading ? 'Logging in...' : 'Login'}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}