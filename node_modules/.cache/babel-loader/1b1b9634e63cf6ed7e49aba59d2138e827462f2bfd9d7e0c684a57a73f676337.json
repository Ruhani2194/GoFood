{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruhan\\\\Documents\\\\gofood\\\\mernapp\\\\src\\\\components\\\\Card.js\",\n  _s = $RefreshSig$();\n// import React from 'react'\n// import { useNavigate } from 'react-router-dom'\n// import { useDispatchCart, useCart } from './ContextReducer'\n// import { Dropdown, DropdownButton } from 'react-bootstrap';\n// export default function Card(props) {\n//   let data = useCart();\n\n//   let navigate = useNavigate()\n//   const [qty, setQty] = useState(1)\n//   const [size, setSize] = useState(\"\")\n//   const priceRef = useRef();\n//   // const [btnEnable, setBtnEnable] = useState(false);\n//   // let totval = 0\n//   // let price = Object.values(options).map((value) => {\n//   //   return parseInt(value, 10);\n//   // });\n//   let options = props.options;\n//   let priceOptions = Object.keys(options);\n//   let foodItem = props.item;\n//   const dispatch = useDispatchCart();\n//   const handleClick = () => {\n//     if (!localStorage.getItem(\"token\")) {\n//       navigate(\"/login\")\n//     }\n//   }\n//   const handleQty = (e) => {\n//     setQty(e.target.value);\n//   }\n//   const handleOptions = (e) => {\n//     setSize(e.target.value);\n//   }\n//   const handleAddToCart = async () => {\n//     let food = []\n//     for (const item of data) {\n//       if (item.id === foodItem._id) {\n//         food = item;\n\n//         break;\n//       }\n//     }\n//     console.log(food)\n//     console.log(new Date())\n//     if (food !== []) {\n//       if (food.size === size) {\n//         await dispatch({ type: \"UPDATE\", id: foodItem._id, price: finalPrice, qty: qty })\n//         return\n//       }\n//       else if (food.size !== size) {\n//         await dispatch({ type: \"ADD\", id: foodItem._id, name: foodItem.name, price: finalPrice, qty: qty, size: size,img: props.ImgSrc })\n//         console.log(\"Size different so simply ADD one more to the list\")\n//         return\n//       }\n//       return\n//     }\n\n//     await dispatch({ type: \"ADD\", id: foodItem._id, name: foodItem.name, price: finalPrice, qty: qty, size: size })\n\n//     // setBtnEnable(true)\n\n//   }\n\n//   useEffect(() => {\n//     setSize(priceRef.current.value)\n//   }, [])\n\n//   // useEffect(()=>{\n//   // checkBtn();\n//   //   },[data])\n\n//   let finalPrice = qty * parseInt(options[size]);   //This is where Price is changing\n//   // totval += finalPrice;\n// console.log(totval)\n//   return (\n//     <div>\n//     </div>\n//   )\n// }\n// //\n// import React from 'react'\n\n// export default function Card() {\n//   return (\n//     <div>\n//       <div>\n\n//       <div className=\"card mt-3\" style={{ \"width\": \"18rem\", \"maxHeight\":\"360px\" }}>\n\n//       <img src=\"/Noodles.jpeg\" className =\"card-img-top\" alt=\"...\" />\n\n//       <div className=\"card-body\">\n\n//       <h5 className=\"card-title\">Card title</h5>\n\n//       <p className=\"card-text\">This is some Important text.</p>\n\n//       <div className='container w-100' >\n\n//       <select className='m-2 h-100  bg-success rounded'>\n\n//       {Array.from(Array(6), (e,i)=>{\n\n//       return(\n\n//       <option key={i+1} value={i+1}> {i+1} </option>)})}\n\n//       </select>\n//       <select className='m-2 h-100 bg-success rounded'>\n//         <option value=\"half\">Half</option>\n//         <option value=\"full\">Full</option>\n//       </select>\n//       <div className='d-inline h-100 fs-5'>TotalPrice</div>\n\n//       </div>\n\n//       </div>\n\n//       </div></div>\n//     </div>\n//   )\n// }\n\nimport React, { useEffect, useState } from 'react';\nimport Card from '../components/Card';\nimport Carousel from '../components/Carousel';\nimport Footer from '../components/Footer';\nimport Navbar from '../components/Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [foodCat, setFoodCat] = useState([]);\n  const [foodItems, setFoodItems] = useState([]);\n  const [search, setSearch] = useState('');\n  const loadFoodItems = async () => {\n    try {\n      let response = await fetch('http://localhost:5000/api/foodData', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      response = await response.json();\n      if (response && Array.isArray(response) && response.length === 2) {\n        setFoodItems(response[0] || []);\n        setFoodCat(response[1] || []);\n      } else {\n        console.error('Unexpected response format:', response);\n      }\n    } catch (error) {\n      console.error('Error loading food items:', error);\n    }\n  };\n  useEffect(() => {\n    loadFoodItems();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Carousel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: foodCat && foodCat.length > 0 ? foodCat.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fs-3 m-3\",\n          children: data.CategoryName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          id: \"hr-success\",\n          style: {\n            height: \"4px\",\n            backgroundImage: \"-webkit-linear-gradient(left, rgb(0, 255, 137), rgb(0, 0, 0))\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), foodItems && foodItems.length > 0 ? foodItems.filter(item => item.CategoryName === data.CategoryName && item.name.toLowerCase().includes(search.toLowerCase())).map(filterItems => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-md-6 col-lg-3\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            foodName: filterItems.name,\n            item: filterItems,\n            options: filterItems.options[0],\n            ImgSrc: filterItems.img\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this)\n        }, filterItems._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"No Such Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 18\n        }, this)]\n      }, data._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading Categories...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"iaZoUtKdHRC/1y0fSKe60pEqrf8=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","Card","Carousel","Footer","Navbar","jsxDEV","_jsxDEV","Home","_s","foodCat","setFoodCat","foodItems","setFoodItems","search","setSearch","loadFoodItems","response","fetch","method","headers","ok","Error","status","json","Array","isArray","length","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","data","CategoryName","id","style","height","backgroundImage","filter","item","name","toLowerCase","includes","filterItems","foodName","options","ImgSrc","img","_id","_c","$RefreshReg$"],"sources":["C:/Users/ruhan/Documents/gofood/mernapp/src/components/Card.js"],"sourcesContent":["\n// import React from 'react'\n// import { useNavigate } from 'react-router-dom'\n// import { useDispatchCart, useCart } from './ContextReducer'\n// import { Dropdown, DropdownButton } from 'react-bootstrap';\n// export default function Card(props) {\n//   let data = useCart();\n\n//   let navigate = useNavigate()\n//   const [qty, setQty] = useState(1)\n//   const [size, setSize] = useState(\"\")\n//   const priceRef = useRef();\n//   // const [btnEnable, setBtnEnable] = useState(false);\n//   // let totval = 0\n//   // let price = Object.values(options).map((value) => {\n//   //   return parseInt(value, 10);\n//   // });\n//   let options = props.options;\n//   let priceOptions = Object.keys(options);\n//   let foodItem = props.item;\n//   const dispatch = useDispatchCart();\n//   const handleClick = () => {\n//     if (!localStorage.getItem(\"token\")) {\n//       navigate(\"/login\")\n//     }\n//   }\n//   const handleQty = (e) => {\n//     setQty(e.target.value);\n//   }\n//   const handleOptions = (e) => {\n//     setSize(e.target.value);\n//   }\n//   const handleAddToCart = async () => {\n//     let food = []\n//     for (const item of data) {\n//       if (item.id === foodItem._id) {\n//         food = item;\n\n//         break;\n//       }\n//     }\n//     console.log(food)\n//     console.log(new Date())\n//     if (food !== []) {\n//       if (food.size === size) {\n//         await dispatch({ type: \"UPDATE\", id: foodItem._id, price: finalPrice, qty: qty })\n//         return\n//       }\n//       else if (food.size !== size) {\n//         await dispatch({ type: \"ADD\", id: foodItem._id, name: foodItem.name, price: finalPrice, qty: qty, size: size,img: props.ImgSrc })\n//         console.log(\"Size different so simply ADD one more to the list\")\n//         return\n//       }\n//       return\n//     }\n\n//     await dispatch({ type: \"ADD\", id: foodItem._id, name: foodItem.name, price: finalPrice, qty: qty, size: size })\n\n\n//     // setBtnEnable(true)\n\n//   }\n\n//   useEffect(() => {\n//     setSize(priceRef.current.value)\n//   }, [])\n\n//   // useEffect(()=>{\n//   // checkBtn();\n//   //   },[data])\n\n//   let finalPrice = qty * parseInt(options[size]);   //This is where Price is changing\n//   // totval += finalPrice;\n  // console.log(totval)\n//   return (\n//     <div>\n//     </div>\n//   )\n// }\n// //\n// import React from 'react'\n\n// export default function Card() {\n//   return (\n//     <div>\n//       <div>\n      \n//       <div className=\"card mt-3\" style={{ \"width\": \"18rem\", \"maxHeight\":\"360px\" }}>\n      \n//       <img src=\"/Noodles.jpeg\" className =\"card-img-top\" alt=\"...\" />\n      \n//       <div className=\"card-body\">\n      \n//       <h5 className=\"card-title\">Card title</h5>\n      \n//       <p className=\"card-text\">This is some Important text.</p>\n      \n//       <div className='container w-100' >\n      \n//       <select className='m-2 h-100  bg-success rounded'>\n      \n//       {Array.from(Array(6), (e,i)=>{\n      \n//       return(\n      \n//       <option key={i+1} value={i+1}> {i+1} </option>)})}\n      \n//       </select>\n//       <select className='m-2 h-100 bg-success rounded'>\n//         <option value=\"half\">Half</option>\n//         <option value=\"full\">Full</option>\n//       </select>\n//       <div className='d-inline h-100 fs-5'>TotalPrice</div>\n      \n//       </div>\n      \n//       </div>\n      \n//       </div></div>\n//     </div>\n//   )\n// }\n\n\nimport React, { useEffect, useState } from 'react';\nimport Card from '../components/Card';\nimport Carousel from '../components/Carousel';\nimport Footer from '../components/Footer';\nimport Navbar from '../components/Navbar';\n\nexport default function Home() {\n  const [foodCat, setFoodCat] = useState([]);\n  const [foodItems, setFoodItems] = useState([]);\n  const [search, setSearch] = useState('');\n\n  const loadFoodItems = async () => {\n    try {\n      let response = await fetch('http://localhost:5000/api/foodData', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      response = await response.json();\n\n      if (response && Array.isArray(response) && response.length === 2) {\n        setFoodItems(response[0] || []);\n        setFoodCat(response[1] || []);\n      } else {\n        console.error('Unexpected response format:', response);\n      }\n    } catch (error) {\n      console.error('Error loading food items:', error);\n    }\n  };\n\n  useEffect(() => {\n    loadFoodItems();\n  }, []);\n\n  return (\n    <div>\n      <Navbar />\n      <Carousel />\n      <div className='container'>\n        {foodCat && foodCat.length > 0 ? foodCat.map((data) => (\n          <div className='row mb-3' key={data._id}>\n            <div className='fs-3 m-3'>{data.CategoryName}</div>\n            <hr id=\"hr-success\" style={{ height: \"4px\", backgroundImage: \"-webkit-linear-gradient(left, rgb(0, 255, 137), rgb(0, 0, 0))\" }} />\n            {foodItems && foodItems.length > 0 ? foodItems.filter(\n              (item) => item.CategoryName === data.CategoryName && item.name.toLowerCase().includes(search.toLowerCase())\n            ).map(filterItems => (\n              <div key={filterItems._id} className='col-12 col-md-6 col-lg-3'>\n                <Card foodName={filterItems.name} item={filterItems} options={filterItems.options[0]} ImgSrc={filterItems.img} />\n              </div>\n            )) : <div>No Such Data</div>}\n          </div>\n        )) : <div>Loading Categories...</div>}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}