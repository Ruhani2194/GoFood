{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruhan\\\\Documents\\\\gofood\\\\mernapp\\\\src\\\\screens\\\\Home.js\",\n  _s = $RefreshSig$();\n// // // // import React, { useEffect, useState } from 'react';\n// // // // import Card from '../components/Card';\n// // // // import Carousel from '../components/Carousel';\n// // // // import Footer from '../components/Footer';\n// // // // import Navbar from '../components/Navbar';\n\n// // // // export default function Home() {\n// // // //   const [foodCat, setFoodCat] = useState([]);\n// // // //   const [foodItems, setFoodItems] = useState([]);\n// // // //   const [search, setSearch] = useState('');\n// // // //   const [loading, setLoading] = useState(true);\n\n// // // //   const loadFoodItems = async () => {\n// // // //     setLoading(true);\n// // // //     try {\n// // // //       let response = await fetch(\"http://localhost:5000/api/foodData\", {\n// // // //         method: 'POST',\n// // // //         headers: {\n// // // //           'Content-Type': 'application/json',\n// // // //         },\n// // // //       });\n\n// // // //       if (!response.ok) {\n// // // //         throw new Error(`HTTP error! Status: ${response.status}`);\n// // // //       }\n\n// // // //       let data = await response.json();\n// // // //       // console.log(\"API Response:\", data);\n\n// // // //       if (Array.isArray(data) && data.length === 2) {\n// // // //         setFoodItems(data[0] || []);\n// // // //         setFoodCat(data[1] || []);\n// // // //       } else {\n// // // //         console.error(\"Unexpected response format:\", data);\n// // // //       }\n// // // //     } catch (error) {\n// // // //       console.error(\"Error loading food items:\", error);\n// // // //     } finally {\n// // // //       setLoading(false);\n// // // //     }\n// // // //   };\n\n// // // //   useEffect(() => {\n// // // //     loadFoodItems();\n// // // //   }, []);\n\n// // // //   return (\n// // // //     <div className=\"bg-dark text-light min-vh-100\">\n// // // //       <Navbar />\n// // // //       <Carousel onSearchChange={setSearch} />\n// // // //       <div className='container py-4'>\n// // // //         {loading ? (\n// // // //           <div className=\"text-center text-light\">Loading...</div>\n// // // //         ) : foodCat.length > 0 ? (\n// // // //           foodCat.map((category) => (\n// // // //             <div className='row mb-3' key={category.id}>\n// // // //               <div className='fs-3 m-3'>\n// // // //                 {category.CategoryName}\n// // // //               </div>\n// // // //               <hr id=\"hr-success\" style={{ height: \"4px\", backgroundImage: \"linear-gradient(left,rgb(0, 255, 137),rgb(0, 0, 0))\" }} />\n// // // //               {foodItems.length > 0 ? foodItems\n// // // //                 .filter(item => item.CategoryName === category.CategoryName && item.name.toLowerCase().includes(search.toLowerCase()))\n// // // //                 .map(filteredItem => (\n// // // //                   <div key={filteredItem.id} className='col-12 col-md-6 col-lg-3'>\n// // // //                     <Card foodItem={filteredItem}  options={filteredItem.options[0]}  />\n// // // //                   </div>\n// // // //                 ))\n// // // //                 : <div className=\"text-center text-light\">No Such Data</div>}\n// // // //             </div>\n// // // //           ))\n// // // //         ) : (\n// // // //           <div className=\"text-center text-light\">No Categories Available</div>\n// // // //         )}\n// // // //       </div>\n// // // //       <Footer/>\n// // // //     </div>\n\n// // // //   );\n// // // // }\n\n// // // import React, { useEffect, useState } from 'react';\n// // // import Card from '../components/Card';\n// // // import Carousel from '../components/Carousel';\n// // // import Footer from '../components/Footer';\n// // // import Navbar from '../components/Navbar';\n\n// // // export default function Home() {\n// // //   const [foodCat, setFoodCat] = useState([]);\n// // //   const [foodItems, setFoodItems] = useState([]);\n// // //   const [search, setSearch] = useState('');\n// // //   const [loading, setLoading] = useState(true);\n\n// // //   const loadFoodItems = async () => {\n// // //     setLoading(true);\n// // //     try {\n// // //       const response = await fetch(\"http://localhost:5000/api/foodData\", {\n// // //         method: 'POST',\n// // //         headers: { 'Content-Type': 'application/json' },\n// // //       });\n\n// // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n\n// // //       const data = await response.json();\n// // //       if (Array.isArray(data) && data.length === 2) {\n// // //         setFoodItems(data[0] || []);\n// // //         setFoodCat(data[1] || []);\n// // //       } else {\n// // //         console.error(\"Unexpected response format:\", data);\n// // //       }\n// // //     } catch (error) {\n// // //       console.error(\"Error loading food items:\", error);\n// // //     } finally {\n// // //       setLoading(false);\n// // //     }\n// // //   };\n\n// // //   useEffect(() => {\n// // //     loadFoodItems();\n// // //   }, []);\n\n// // //   return (\n// // //     <div className=\"bg-dark text-light min-vh-100\">\n// // //       <Navbar />\n// // //       <Carousel onSearchChange={setSearch} />\n// // //       <div className='container py-4'>\n// // //         {loading ? (\n// // //           <div className=\"text-center text-light\">Loading...</div>\n// // //         ) : foodCat.length > 0 ? (\n// // //           foodCat.map((category) => (\n// // //             <div className='row mb-3' key={category.CategoryName}>\n// // //               <div className='fs-3 m-3'>{category.CategoryName}</div>\n// // //               <hr className=\"bg-light\" />\n// // //               {foodItems.length > 0 ? foodItems\n// // //                 .filter(item => item.name === category.CategoryName && item.name.toLowerCase().includes(search.toLowerCase()))\n// // //                 .map(filteredItem => (\n// // //                   <div key={filteredItem._id} className='col-12 col-md-6 col-lg-3'>\n// // //                     <Card foodItem={filteredItem} options={{ half: filteredItem.halfPrice, full: filteredItem.fullPrice }} />\n// // //                   </div>\n// // //                 )) : <div className=\"text-center text-light\">No Data Available</div>}\n// // //             </div>\n// // //           ))\n// // //         ) : (\n// // //           <div className=\"text-center text-light\">No Categories Available</div>\n// // //         )}\n// // //       </div>\n// // //       <Footer />\n// // //     </div>\n// // //   );\n// // // }\n\n// // import React, { useEffect, useState } from 'react';\n// // import Card from '../components/Card';\n// // import Carousel from '../components/Carousel';\n// // import Footer from '../components/Footer';\n// // import Navbar from '../components/Navbar';\n// // import UploadFoodItem from '../components/UploadFoodItem';\n// // export default function Home() {\n// //   const [foodCat, setFoodCat] = useState([]);\n// //   const [foodItems, setFoodItems] = useState([]);\n// //   const [search, setSearch] = useState('');\n// //   const [loading, setLoading] = useState(true);\n\n// //   const loadFoodItems = async () => {\n// //     setLoading(true);\n// //     try {\n// //       let response = await fetch(\"http://localhost:5000/api/foodData\", {\n// //         method: 'POST',\n// //         headers: {\n// //           'Content-Type': 'application/json',\n// //         },\n// //       });\n\n// //       if (!response.ok) {\n// //         throw new Error(`HTTP error! Status: ${response.status}`);\n// //       }\n\n// //       let data = await response.json();\n// //       // console.log(\"API Response:\", data);\n\n// //       if (Array.isArray(data) && data.length === 2) {\n// //         setFoodItems(data[0] || []);\n// //         setFoodCat(data[1] || []);\n// //       } else {\n// //         console.error(\"Unexpected response format:\", data);\n// //       }\n// //     } catch (error) {\n// //       console.error(\"Error loading food items:\", error);\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n\n// //     const formData = new FormData();\n// //     formData.append('name', name);\n// //     formData.append('halfPrice', halfPrice);\n// //     formData.append('fullPrice', fullPrice);\n// //     formData.append('image', image);\n\n// //     try {\n// //       const response = await fetch('http://localhost:5000/api/admin/add-food-item', {\n// //         method: 'POST',\n// //         body: formData,\n// //       });\n\n// //       const data = await response.json();\n\n// //       if (response.ok) {\n// //         setSuccessMessage('Food item uploaded successfully!');\n// //         setName('');\n// //         setPriceHalf('');\n// //         setPriceFull('');\n// //         setImage(null);\n\n// //         // Trigger a data reload in Home.js\n// //         if (props.onItemAdded) {\n// //           props.onItemAdded();\n// //         }\n\n// //         setTimeout(() => setSuccessMessage(''), 3000);\n// //       } else {\n// //         setErrorMessage(data.error || 'Failed to upload the food item.');\n// //         setTimeout(() => setErrorMessage(''), 3000);\n// //       }\n// //     } catch (error) {\n// //       setErrorMessage('An error occurred. Please try again.');\n// //       setTimeout(() => setErrorMessage(''), 3000);\n// //     }\n// //   };\n\n// //   useEffect(() => {\n// //     loadFoodItems();\n// //   }, []);\n\n// //   return (\n// //     <div className=\"bg-dark text-light min-vh-100\">\n// //       <Navbar />\n// //       <Carousel onSearchChange={setSearch} />\n// //       <div className='container py-4'>\n// //         {loading ? (\n// //           <div className=\"text-center text-light\">Loading...</div>\n// //         ) : foodCat.length > 0 ? (\n// //           foodCat.map((category) => (\n// //             <div className='row mb-3' key={category.id}>\n// //               <div className='fs-3 m-3'>\n// //                 {category.CategoryName}\n// //               </div>\n// //               <hr id=\"hr-success\" style={{ height: \"4px\", backgroundImage: \"linear-gradient(left,rgb(0, 255, 137),rgb(0, 0, 0))\" }} />\n// //               {foodItems.length > 0 ? foodItems\n// //                 .filter(item => item.CategoryName === category.CategoryName && item.name.toLowerCase().includes(search.toLowerCase()))\n// //                 .map(filteredItem => (\n// //                   <div key={filteredItem.id} className='col-12 col-md-6 col-lg-3'>\n// //                     <Card \n// //                       foodItem={filteredItem} \n// //                       imageUrl={`http://localhost:5000/uploads/${filteredItem.image}`} // Ensure the image URL is correct\n// //                       options={filteredItem.options[0]} \n// //                     />\n// //                   </div>\n// //                 ))\n// //                 : <div className=\"text-center text-light\">No Such Data</div>}\n// //             </div>\n// //           ))\n// //         ) : (\n// //           <div className=\"text-center text-light\">No Categories Available</div>\n// //         )}\n// //       </div>\n// //       <div className=\"container my-5\">\n// //         <UploadFoodItem onItemAdded={loadFoodItems} />\n// //       </div>\n// //       <Footer />\n// //     </div>\n// //   );\n// // }\n\n// import React, { useEffect, useState } from 'react';\n// import Card from '../components/Card';\n// import Carousel from '../components/Carousel';\n// import Footer from '../components/Footer';\n// import Navbar from '../components/Navbar';\n// import UploadFoodItem from '../components/UploadFoodItem';\n\n// export default function Home() {\n//   const [foodCat, setFoodCat] = useState([]);\n//   const [foodItems, setFoodItems] = useState([]);\n//   const [search, setSearch] = useState('');\n//   const [loading, setLoading] = useState(true);\n//   const [successMessage, setSuccessMessage] = useState('');\n//   const [errorMessage, setErrorMessage] = useState('');\n\n//   // Fetch food items and categories from the API\n//   const loadFoodItems = async () => {\n//     setLoading(true);\n//     try {\n//       const response = await fetch('http://localhost:5000/api/foodData', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! Status: ${response.status}`);\n//       }\n\n//       const data = await response.json();\n\n//       if (Array.isArray(data) && data.length === 2) {\n//         setFoodItems(data[0] || []);\n//         setFoodCat(data[1] || []);\n//       } else {\n//         console.error('Unexpected response format:', data);\n//       }\n//     } catch (error) {\n//       console.error('Error loading food items:', error);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   // Effect hook to load food items and categories on component mount\n//   useEffect(() => {\n//     loadFoodItems();\n//   }, []);\n\n//   return (\n//     <div className=\"bg-dark text-light min-vh-100\">\n//       <Navbar />\n//       <Carousel onSearchChange={setSearch} />\n//       <div className=\"container py-4\">\n//         {loading ? (\n//           <div className=\"text-center text-light\">Loading...</div>\n//         ) : foodCat.length > 0 ? (\n//           foodCat.map((category) => (\n//             <div className=\"row mb-3\" key={category.id}>\n//               <div className=\"fs-3 m-3\">{category.CategoryName}</div>\n//               <hr\n//                 id=\"hr-success\"\n//                 style={{\n//                   height: '4px',\n//                   backgroundImage: 'linear-gradient(left, rgb(0, 255, 137), rgb(0, 0, 0))',\n//                 }}\n//               />\n//               {foodItems.length > 0 ? (\n//                 foodItems\n//                   .filter(\n//                     (item) =>\n//                       item.CategoryName === category.CategoryName &&\n//                       item.name.toLowerCase().includes(search.toLowerCase())\n//                   )\n//                   .map((filteredItem) => (\n//                     <div key={filteredItem.id} className=\"col-12 col-md-6 col-lg-3\">\n//                       <Card\n//                         foodItem={filteredItem}\n//                         imageUrl={`http://localhost:5000/uploads/${filteredItem.image}`}\n//                         options={filteredItem.options[0]}\n//                       />\n//                     </div>\n//                   ))\n//               ) : (\n//                 <div className=\"text-center text-light\">No Such Data</div>\n//               )}\n//             </div>\n//           ))\n//         ) : (\n//           <div className=\"text-center text-light\">No Categories Available</div>\n//         )}\n//       </div>\n//       {/* Upload Food Item Section */}\n//       <div className=\"container my-5\">\n//         <UploadFoodItem onItemAdded={loadFoodItems} />\n//         {successMessage && (\n//           <div className=\"alert alert-success mt-3\" role=\"alert\">\n//             {successMessage}\n//           </div>\n//         )}\n//         {errorMessage && (\n//           <div className=\"alert alert-danger mt-3\" role=\"alert\">\n//             {errorMessage}\n//           </div>\n//         )}\n//       </div>\n//       <Footer />\n//     </div>\n//   );\n// }\n\nimport React, { useEffect, useState } from 'react';\nimport Card from '../components/Card';\nimport Carousel from '../components/Carousel';\nimport Footer from '../components/Footer';\nimport Navbar from '../components/Navbar';\nimport UploadFoodItem from '../components/UploadFoodItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [foodCat, setFoodCat] = useState([]); // Initialize as empty array\n  const [foodItems, setFoodItems] = useState([]); // Initialize as empty array\n  const [search, setSearch] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  // Fetch food items and categories from the API\n  const loadFoodItems = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:5000/api/foodData', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (Array.isArray(data) && data.length === 2) {\n        setFoodItems(data[0] || []);\n        setFoodCat(data[1] || []);\n      } else {\n        console.error('Unexpected response format:', data);\n        setErrorMessage('Failed to load data from the server.');\n      }\n    } catch (error) {\n      console.error('Error loading food items:', error);\n      setErrorMessage('Error fetching data from the server.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Effect hook to load food items and categories on component mount\n  useEffect(() => {\n    loadFoodItems();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-dark text-light min-vh-100\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Carousel, {\n      onSearchChange: setSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container py-4\",\n      children: [loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-light\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 11\n      }, this) : foodCat.length > 0 ? foodCat.map(category => {\n        // Ensure category exists and has the CategoryName property\n        if (!category || !category.CategoryName) {\n          return null; // Skip this iteration if category or CategoryName is missing\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"fs-3 m-3\",\n            children: category.CategoryName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            id: \"hr-success\",\n            style: {\n              height: '4px',\n              backgroundImage: 'linear-gradient(left, rgb(0, 255, 137), rgb(0, 0, 0))'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 17\n          }, this), foodItems.length > 0 ? foodItems.filter(item => item.CategoryName === category.CategoryName && item.name.toLowerCase().includes(search.toLowerCase())).map(filteredItem => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 col-md-6 col-lg-3\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              foodItem: filteredItem,\n              imageUrl: `http://localhost:5000/uploads/${filteredItem.image}`,\n              options: filteredItem.options[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 25\n            }, this)\n          }, filteredItem.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 23\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center text-light\",\n            children: \"No Items Available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 19\n          }, this)]\n        }, category.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 15\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-light\",\n        children: \"No Categories Available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 11\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger mt-3\",\n        role: \"alert\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-5\",\n      children: [/*#__PURE__*/_jsxDEV(UploadFoodItem, {\n        onItemAdded: loadFoodItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 9\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success mt-3\",\n        role: \"alert\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 447,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"xoQrTH2ZXBJlKm/aic0Jg0FtamE=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","Card","Carousel","Footer","Navbar","UploadFoodItem","jsxDEV","_jsxDEV","Home","_s","foodCat","setFoodCat","foodItems","setFoodItems","search","setSearch","loading","setLoading","successMessage","setSuccessMessage","errorMessage","setErrorMessage","loadFoodItems","response","fetch","method","headers","ok","Error","status","data","json","Array","isArray","length","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearchChange","map","category","CategoryName","id","style","height","backgroundImage","filter","item","name","toLowerCase","includes","filteredItem","foodItem","imageUrl","image","options","role","onItemAdded","_c","$RefreshReg$"],"sources":["C:/Users/ruhan/Documents/gofood/mernapp/src/screens/Home.js"],"sourcesContent":["// // // // import React, { useEffect, useState } from 'react';\n// // // // import Card from '../components/Card';\n// // // // import Carousel from '../components/Carousel';\n// // // // import Footer from '../components/Footer';\n// // // // import Navbar from '../components/Navbar';\n\n// // // // export default function Home() {\n// // // //   const [foodCat, setFoodCat] = useState([]);\n// // // //   const [foodItems, setFoodItems] = useState([]);\n// // // //   const [search, setSearch] = useState('');\n// // // //   const [loading, setLoading] = useState(true);\n\n// // // //   const loadFoodItems = async () => {\n// // // //     setLoading(true);\n// // // //     try {\n// // // //       let response = await fetch(\"http://localhost:5000/api/foodData\", {\n// // // //         method: 'POST',\n// // // //         headers: {\n// // // //           'Content-Type': 'application/json',\n// // // //         },\n// // // //       });\n\n// // // //       if (!response.ok) {\n// // // //         throw new Error(`HTTP error! Status: ${response.status}`);\n// // // //       }\n\n// // // //       let data = await response.json();\n// // // //       // console.log(\"API Response:\", data);\n\n// // // //       if (Array.isArray(data) && data.length === 2) {\n// // // //         setFoodItems(data[0] || []);\n// // // //         setFoodCat(data[1] || []);\n// // // //       } else {\n// // // //         console.error(\"Unexpected response format:\", data);\n// // // //       }\n// // // //     } catch (error) {\n// // // //       console.error(\"Error loading food items:\", error);\n// // // //     } finally {\n// // // //       setLoading(false);\n// // // //     }\n// // // //   };\n\n// // // //   useEffect(() => {\n// // // //     loadFoodItems();\n// // // //   }, []);\n\n// // // //   return (\n// // // //     <div className=\"bg-dark text-light min-vh-100\">\n// // // //       <Navbar />\n// // // //       <Carousel onSearchChange={setSearch} />\n// // // //       <div className='container py-4'>\n// // // //         {loading ? (\n// // // //           <div className=\"text-center text-light\">Loading...</div>\n// // // //         ) : foodCat.length > 0 ? (\n// // // //           foodCat.map((category) => (\n// // // //             <div className='row mb-3' key={category.id}>\n// // // //               <div className='fs-3 m-3'>\n// // // //                 {category.CategoryName}\n// // // //               </div>\n// // // //               <hr id=\"hr-success\" style={{ height: \"4px\", backgroundImage: \"linear-gradient(left,rgb(0, 255, 137),rgb(0, 0, 0))\" }} />\n// // // //               {foodItems.length > 0 ? foodItems\n// // // //                 .filter(item => item.CategoryName === category.CategoryName && item.name.toLowerCase().includes(search.toLowerCase()))\n// // // //                 .map(filteredItem => (\n// // // //                   <div key={filteredItem.id} className='col-12 col-md-6 col-lg-3'>\n// // // //                     <Card foodItem={filteredItem}  options={filteredItem.options[0]}  />\n// // // //                   </div>\n// // // //                 ))\n// // // //                 : <div className=\"text-center text-light\">No Such Data</div>}\n// // // //             </div>\n// // // //           ))\n// // // //         ) : (\n// // // //           <div className=\"text-center text-light\">No Categories Available</div>\n// // // //         )}\n// // // //       </div>\n// // // //       <Footer/>\n// // // //     </div>\n    \n// // // //   );\n// // // // }\n\n\n\n// // // import React, { useEffect, useState } from 'react';\n// // // import Card from '../components/Card';\n// // // import Carousel from '../components/Carousel';\n// // // import Footer from '../components/Footer';\n// // // import Navbar from '../components/Navbar';\n\n// // // export default function Home() {\n// // //   const [foodCat, setFoodCat] = useState([]);\n// // //   const [foodItems, setFoodItems] = useState([]);\n// // //   const [search, setSearch] = useState('');\n// // //   const [loading, setLoading] = useState(true);\n\n// // //   const loadFoodItems = async () => {\n// // //     setLoading(true);\n// // //     try {\n// // //       const response = await fetch(\"http://localhost:5000/api/foodData\", {\n// // //         method: 'POST',\n// // //         headers: { 'Content-Type': 'application/json' },\n// // //       });\n\n// // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n      \n// // //       const data = await response.json();\n// // //       if (Array.isArray(data) && data.length === 2) {\n// // //         setFoodItems(data[0] || []);\n// // //         setFoodCat(data[1] || []);\n// // //       } else {\n// // //         console.error(\"Unexpected response format:\", data);\n// // //       }\n// // //     } catch (error) {\n// // //       console.error(\"Error loading food items:\", error);\n// // //     } finally {\n// // //       setLoading(false);\n// // //     }\n// // //   };\n\n// // //   useEffect(() => {\n// // //     loadFoodItems();\n// // //   }, []);\n\n// // //   return (\n// // //     <div className=\"bg-dark text-light min-vh-100\">\n// // //       <Navbar />\n// // //       <Carousel onSearchChange={setSearch} />\n// // //       <div className='container py-4'>\n// // //         {loading ? (\n// // //           <div className=\"text-center text-light\">Loading...</div>\n// // //         ) : foodCat.length > 0 ? (\n// // //           foodCat.map((category) => (\n// // //             <div className='row mb-3' key={category.CategoryName}>\n// // //               <div className='fs-3 m-3'>{category.CategoryName}</div>\n// // //               <hr className=\"bg-light\" />\n// // //               {foodItems.length > 0 ? foodItems\n// // //                 .filter(item => item.name === category.CategoryName && item.name.toLowerCase().includes(search.toLowerCase()))\n// // //                 .map(filteredItem => (\n// // //                   <div key={filteredItem._id} className='col-12 col-md-6 col-lg-3'>\n// // //                     <Card foodItem={filteredItem} options={{ half: filteredItem.halfPrice, full: filteredItem.fullPrice }} />\n// // //                   </div>\n// // //                 )) : <div className=\"text-center text-light\">No Data Available</div>}\n// // //             </div>\n// // //           ))\n// // //         ) : (\n// // //           <div className=\"text-center text-light\">No Categories Available</div>\n// // //         )}\n// // //       </div>\n// // //       <Footer />\n// // //     </div>\n// // //   );\n// // // }\n\n\n\n// // import React, { useEffect, useState } from 'react';\n// // import Card from '../components/Card';\n// // import Carousel from '../components/Carousel';\n// // import Footer from '../components/Footer';\n// // import Navbar from '../components/Navbar';\n// // import UploadFoodItem from '../components/UploadFoodItem';\n// // export default function Home() {\n// //   const [foodCat, setFoodCat] = useState([]);\n// //   const [foodItems, setFoodItems] = useState([]);\n// //   const [search, setSearch] = useState('');\n// //   const [loading, setLoading] = useState(true);\n\n// //   const loadFoodItems = async () => {\n// //     setLoading(true);\n// //     try {\n// //       let response = await fetch(\"http://localhost:5000/api/foodData\", {\n// //         method: 'POST',\n// //         headers: {\n// //           'Content-Type': 'application/json',\n// //         },\n// //       });\n\n// //       if (!response.ok) {\n// //         throw new Error(`HTTP error! Status: ${response.status}`);\n// //       }\n\n// //       let data = await response.json();\n// //       // console.log(\"API Response:\", data);\n\n// //       if (Array.isArray(data) && data.length === 2) {\n// //         setFoodItems(data[0] || []);\n// //         setFoodCat(data[1] || []);\n// //       } else {\n// //         console.error(\"Unexpected response format:\", data);\n// //       }\n// //     } catch (error) {\n// //       console.error(\"Error loading food items:\", error);\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n  \n// //     const formData = new FormData();\n// //     formData.append('name', name);\n// //     formData.append('halfPrice', halfPrice);\n// //     formData.append('fullPrice', fullPrice);\n// //     formData.append('image', image);\n  \n// //     try {\n// //       const response = await fetch('http://localhost:5000/api/admin/add-food-item', {\n// //         method: 'POST',\n// //         body: formData,\n// //       });\n  \n// //       const data = await response.json();\n  \n// //       if (response.ok) {\n// //         setSuccessMessage('Food item uploaded successfully!');\n// //         setName('');\n// //         setPriceHalf('');\n// //         setPriceFull('');\n// //         setImage(null);\n  \n// //         // Trigger a data reload in Home.js\n// //         if (props.onItemAdded) {\n// //           props.onItemAdded();\n// //         }\n  \n// //         setTimeout(() => setSuccessMessage(''), 3000);\n// //       } else {\n// //         setErrorMessage(data.error || 'Failed to upload the food item.');\n// //         setTimeout(() => setErrorMessage(''), 3000);\n// //       }\n// //     } catch (error) {\n// //       setErrorMessage('An error occurred. Please try again.');\n// //       setTimeout(() => setErrorMessage(''), 3000);\n// //     }\n// //   };\n  \n// //   useEffect(() => {\n// //     loadFoodItems();\n// //   }, []);\n\n// //   return (\n// //     <div className=\"bg-dark text-light min-vh-100\">\n// //       <Navbar />\n// //       <Carousel onSearchChange={setSearch} />\n// //       <div className='container py-4'>\n// //         {loading ? (\n// //           <div className=\"text-center text-light\">Loading...</div>\n// //         ) : foodCat.length > 0 ? (\n// //           foodCat.map((category) => (\n// //             <div className='row mb-3' key={category.id}>\n// //               <div className='fs-3 m-3'>\n// //                 {category.CategoryName}\n// //               </div>\n// //               <hr id=\"hr-success\" style={{ height: \"4px\", backgroundImage: \"linear-gradient(left,rgb(0, 255, 137),rgb(0, 0, 0))\" }} />\n// //               {foodItems.length > 0 ? foodItems\n// //                 .filter(item => item.CategoryName === category.CategoryName && item.name.toLowerCase().includes(search.toLowerCase()))\n// //                 .map(filteredItem => (\n// //                   <div key={filteredItem.id} className='col-12 col-md-6 col-lg-3'>\n// //                     <Card \n// //                       foodItem={filteredItem} \n// //                       imageUrl={`http://localhost:5000/uploads/${filteredItem.image}`} // Ensure the image URL is correct\n// //                       options={filteredItem.options[0]} \n// //                     />\n// //                   </div>\n// //                 ))\n// //                 : <div className=\"text-center text-light\">No Such Data</div>}\n// //             </div>\n// //           ))\n// //         ) : (\n// //           <div className=\"text-center text-light\">No Categories Available</div>\n// //         )}\n// //       </div>\n// //       <div className=\"container my-5\">\n// //         <UploadFoodItem onItemAdded={loadFoodItems} />\n// //       </div>\n// //       <Footer />\n// //     </div>\n// //   );\n// // }\n\n\n// import React, { useEffect, useState } from 'react';\n// import Card from '../components/Card';\n// import Carousel from '../components/Carousel';\n// import Footer from '../components/Footer';\n// import Navbar from '../components/Navbar';\n// import UploadFoodItem from '../components/UploadFoodItem';\n\n// export default function Home() {\n//   const [foodCat, setFoodCat] = useState([]);\n//   const [foodItems, setFoodItems] = useState([]);\n//   const [search, setSearch] = useState('');\n//   const [loading, setLoading] = useState(true);\n//   const [successMessage, setSuccessMessage] = useState('');\n//   const [errorMessage, setErrorMessage] = useState('');\n\n//   // Fetch food items and categories from the API\n//   const loadFoodItems = async () => {\n//     setLoading(true);\n//     try {\n//       const response = await fetch('http://localhost:5000/api/foodData', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! Status: ${response.status}`);\n//       }\n\n//       const data = await response.json();\n\n//       if (Array.isArray(data) && data.length === 2) {\n//         setFoodItems(data[0] || []);\n//         setFoodCat(data[1] || []);\n//       } else {\n//         console.error('Unexpected response format:', data);\n//       }\n//     } catch (error) {\n//       console.error('Error loading food items:', error);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   // Effect hook to load food items and categories on component mount\n//   useEffect(() => {\n//     loadFoodItems();\n//   }, []);\n\n//   return (\n//     <div className=\"bg-dark text-light min-vh-100\">\n//       <Navbar />\n//       <Carousel onSearchChange={setSearch} />\n//       <div className=\"container py-4\">\n//         {loading ? (\n//           <div className=\"text-center text-light\">Loading...</div>\n//         ) : foodCat.length > 0 ? (\n//           foodCat.map((category) => (\n//             <div className=\"row mb-3\" key={category.id}>\n//               <div className=\"fs-3 m-3\">{category.CategoryName}</div>\n//               <hr\n//                 id=\"hr-success\"\n//                 style={{\n//                   height: '4px',\n//                   backgroundImage: 'linear-gradient(left, rgb(0, 255, 137), rgb(0, 0, 0))',\n//                 }}\n//               />\n//               {foodItems.length > 0 ? (\n//                 foodItems\n//                   .filter(\n//                     (item) =>\n//                       item.CategoryName === category.CategoryName &&\n//                       item.name.toLowerCase().includes(search.toLowerCase())\n//                   )\n//                   .map((filteredItem) => (\n//                     <div key={filteredItem.id} className=\"col-12 col-md-6 col-lg-3\">\n//                       <Card\n//                         foodItem={filteredItem}\n//                         imageUrl={`http://localhost:5000/uploads/${filteredItem.image}`}\n//                         options={filteredItem.options[0]}\n//                       />\n//                     </div>\n//                   ))\n//               ) : (\n//                 <div className=\"text-center text-light\">No Such Data</div>\n//               )}\n//             </div>\n//           ))\n//         ) : (\n//           <div className=\"text-center text-light\">No Categories Available</div>\n//         )}\n//       </div>\n//       {/* Upload Food Item Section */}\n//       <div className=\"container my-5\">\n//         <UploadFoodItem onItemAdded={loadFoodItems} />\n//         {successMessage && (\n//           <div className=\"alert alert-success mt-3\" role=\"alert\">\n//             {successMessage}\n//           </div>\n//         )}\n//         {errorMessage && (\n//           <div className=\"alert alert-danger mt-3\" role=\"alert\">\n//             {errorMessage}\n//           </div>\n//         )}\n//       </div>\n//       <Footer />\n//     </div>\n//   );\n// }\n\n\nimport React, { useEffect, useState } from 'react';\nimport Card from '../components/Card';\nimport Carousel from '../components/Carousel';\nimport Footer from '../components/Footer';\nimport Navbar from '../components/Navbar';\nimport UploadFoodItem from '../components/UploadFoodItem';\n\nexport default function Home() {\n  const [foodCat, setFoodCat] = useState([]); // Initialize as empty array\n  const [foodItems, setFoodItems] = useState([]); // Initialize as empty array\n  const [search, setSearch] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  // Fetch food items and categories from the API\n  const loadFoodItems = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:5000/api/foodData', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n\n      const data = await response.json();\n\n      if (Array.isArray(data) && data.length === 2) {\n        setFoodItems(data[0] || []);\n        setFoodCat(data[1] || []);\n      } else {\n        console.error('Unexpected response format:', data);\n        setErrorMessage('Failed to load data from the server.');\n      }\n    } catch (error) {\n      console.error('Error loading food items:', error);\n      setErrorMessage('Error fetching data from the server.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Effect hook to load food items and categories on component mount\n  useEffect(() => {\n    loadFoodItems();\n  }, []);\n\n  return (\n    <div className=\"bg-dark text-light min-vh-100\">\n      <Navbar />\n      <Carousel onSearchChange={setSearch} />\n      <div className=\"container py-4\">\n        {loading ? (\n          <div className=\"text-center text-light\">Loading...</div>\n        ) : foodCat.length > 0 ? (\n          foodCat.map((category) => {\n            // Ensure category exists and has the CategoryName property\n            if (!category || !category.CategoryName) {\n              return null; // Skip this iteration if category or CategoryName is missing\n            }\n            return (\n              <div className=\"row mb-3\" key={category.id}>\n                <div className=\"fs-3 m-3\">{category.CategoryName}</div>\n                <hr\n                  id=\"hr-success\"\n                  style={{\n                    height: '4px',\n                    backgroundImage: 'linear-gradient(left, rgb(0, 255, 137), rgb(0, 0, 0))',\n                  }}\n                />\n                {foodItems.length > 0 ? (\n                  foodItems\n                    .filter(\n                      (item) =>\n                        item.CategoryName === category.CategoryName &&\n                        item.name.toLowerCase().includes(search.toLowerCase())\n                    )\n                    .map((filteredItem) => (\n                      <div key={filteredItem.id} className=\"col-12 col-md-6 col-lg-3\">\n                        <Card\n                          foodItem={filteredItem}\n                          imageUrl={`http://localhost:5000/uploads/${filteredItem.image}`}\n                          options={filteredItem.options[0]}\n                        />\n                      </div>\n                    ))\n                ) : (\n                  <div className=\"text-center text-light\">No Items Available</div>\n                )}\n              </div>\n            );\n          })\n        ) : (\n          <div className=\"text-center text-light\">No Categories Available</div>\n        )}\n        {/* Display error message if any */}\n        {errorMessage && <div className=\"alert alert-danger mt-3\" role=\"alert\">{errorMessage}</div>}\n      </div>\n      {/* Upload Food Item Section */}\n      <div className=\"container my-5\">\n        <UploadFoodItem onItemAdded={loadFoodItems} />\n        {successMessage && (\n          <div className=\"alert alert-success mt-3\" role=\"alert\">\n            {successMessage}\n          </div>\n        )}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,cAAc,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChD,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACkB,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;E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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}