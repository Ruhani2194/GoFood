{"ast":null,"code":"// // // import React, { useEffect } from 'react';\n// // // import { useCart, useDispatchCart } from '../components/ContextReducer';\n\n// // // export default function Cart() {\n// // //     const cartItems = useCart(); // Fetch items from cart context\n// // //     const dispatch = useDispatchCart();\n\n// // //     // Debug: Log cartItems to see what items are in the cart\n// // //     useEffect(() => {\n// // //         console.log('Cart Items:', cartItems);\n// // //     }, [cartItems]);\n\n// // //     // Calculate the grand total of all cart items (price * quantity for each item)\n// // //     let totalPrice = cartItems.reduce((total, food) => total + (food.price * food.qty), 0);\n\n// // //     const handleRemove = (index) => {\n// // //         dispatch({ type: 'REMOVE', index });\n// // //     };\n\n// // //     if (cartItems.length === 0) {\n// // //         return (\n// // //             <div className=\"text-center m-5 text-light\">\n// // //                 Your Cart is Empty\n// // //             </div>\n// // //         );\n// // //     }\n// // // const  handleCheckOut=async()=>{\n// // //   let userEmail=localStorage.getItem(\"userEmail\");\n// // //   let response=await fetch(\"http://localhost:5000/api/orderData\"),{\n// // //   method:'POST',\n// // //   headers:{\n// // //     'Content-Type':'application/json'\n// // //   },\n// // //   body:JSON.stringnify{\n// // //     order_data:cartItems,\n// // //     email:userEmail,\n// // //     order_date:new Date().toString()\n// // //   }\n// // // };\n// // // if(response.status===200){\n// // //   dispatch({type:\"DROP\"})\n// // // }\n// // // }\n// // //     return (\n// // //         <div className=\"container m-auto mt-5 responsive table-responsive-sm table-responsive-md\">\n// // //             <h2 className=\"table table-hover\">Your Cart</h2>\n// // //             <table className=\"table table-dark table-bordered table-hover\">\n// // //                 <thead>\n// // //                     <tr>\n// // //                         <th scope=\"col\" className=\"text-light\">S.No</th>\n// // //                         <th scope=\"col\" className=\"text-light\">Food Name</th>\n// // //                         <th scope=\"col\" className=\"text-light\">Quantity</th>\n// // //                         <th scope=\"col\" className=\"text-light\">Option</th>\n// // //                         <th scope=\"col\" className=\"text-light\">Amount</th>\n// // //                         <th scope=\"col\" className=\"text-light\">Action</th>\n// // //                     </tr>\n// // //                 </thead>\n// // //                 <tbody>\n// // //                     {cartItems.map((item, index) => (\n// // //                         <tr key={index}>\n// // //                             <td className=\"text-light\">{index + 1}</td>\n// // //                             <td className=\"text-light\">{item.name}</td>\n// // //                             <td className=\"text-light\">{item.qty}</td>\n// // //                             <td className=\"text-light\">{item.size}</td>\n// // //                             <td className=\"text-light\">₹{item.price * item.qty}</td>\n// // //                             <td>\n// // //                                 <button className=\"btn btn-danger\" onClick={() => handleRemove(index)}>\n// // //                                     Remove\n// // //                                 </button>\n// // //                             </td>\n// // //                         </tr>\n// // //                     ))}\n// // //                 </tbody>\n// // //             </table>\n// // //             <div className=\"fs-2 mt-3 text-light\">\n// // //                 {/* Displaying the grand total */}\n// // //                 <h1>Grand Total: ₹{totalPrice}</h1>\n// // //             </div>\n// // //             <div>\n// // //                 <button className='btn btn-success mt-5'>CheckOut</button>\n// // //             </div>\n// // //         </div>\n// // //     );\n// // // } \n\n// // import React, { useEffect } from 'react';\n// // import { useCart, useDispatchCart } from '../components/ContextReducer';\n\n// // export default function Cart() {\n// //     const cartItems = useCart(); // Fetch items from cart context\n// //     const dispatch = useDispatchCart();\n\n// //     // Debug: Log cartItems to see what items are in the cart\n// //     useEffect(() => {\n// //         console.log('Cart Items:', cartItems);\n// //     }, [cartItems]);\n\n// //     // Calculate the grand total of all cart items (price * quantity for each item)\n// //     let totalPrice = cartItems.reduce((total, food) => total + (food.price * food.qty), 0);\n\n// //     const handleRemove = (index) => {\n// //         dispatch({ type: 'REMOVE', index });\n// //     };\n\n// //     const handleCheckOut = async () => {\n// //         // Check if the cart is empty\n// //         if (cartItems.length === 0) {\n// //             alert(\"Cart is empty!\"); // Alert when cart is empty\n// //             return;\n// //         }\n\n// //         let userEmail = localStorage.getItem(\"userEmail\");\n\n// //         // Check if userEmail exists\n// //         if (!userEmail) {\n// //             alert(\"User email not found. Please log in.\");\n// //             return;\n// //         }\n\n// //         // Make the checkout request to the server\n// //         try {\n// //             let response = await fetch(\"http://localhost:5000/api/orderData\", {\n// //                 method: 'POST',\n// //                 headers: {\n// //                     'Content-Type': 'application/json'\n// //                 },\n// //                 body: JSON.stringify({\n// //                     order_data: cartItems,\n// //                     email: userEmail,\n// //                     order_date: new Date().toString()\n// //                 })\n// //             });\n\n// //             // Handle the response from the server\n// //             if (response.ok) {\n// //                 dispatch({ type: \"DROP\" }); // Clear the cart after successful checkout\n// //                 alert(\"Order placed successfully!\"); // Optional success message\n// //             } else {\n// //                 console.error('Failed to place order', response.statusText); // Log the error response\n// //                 alert(\"Failed to place order. Please try again.\"); // Show alert on failure\n// //             }\n// //         } catch (error) {\n// //             console.error('Error:', error);\n// //             alert(\"An error occurred while placing the order. Please try again.\");\n// //         }\n// //     };\n\n// //     // Display message if the cart is empty\n// //     if (cartItems.length === 0) {\n// //         return (\n// //             <div className=\"text-center m-5 text-light\">\n// //                 Your Cart is Empty\n// //             </div>\n// //         );\n// //     }\n\n// //     return (\n// //         <div className=\"container m-auto mt-5 responsive table-responsive-sm table-responsive-md\">\n// //             <h2 className=\"table table-hover text-light\">Your Cart</h2>\n// //             <table className=\"table table-dark table-bordered table-hover\">\n// //                 <thead>\n// //                     <tr>\n// //                         <th scope=\"col\" className=\"text-light\">S.No</th>\n// //                         <th scope=\"col\" className=\"text-light\">Food Name</th>\n// //                         <th scope=\"col\" className=\"text-light\">Quantity</th>\n// //                         <th scope=\"col\" className=\"text-light\">Option</th>\n// //                         <th scope=\"col\" className=\"text-light\">Amount</th>\n// //                         <th scope=\"col\" className=\"text-light\">Action</th>\n// //                     </tr>\n// //                 </thead>\n// //                 <tbody>\n// //                     {cartItems.map((item, index) => (\n// //                         <tr key={index}>\n// //                             <td className=\"text-light\">{index + 1}</td>\n// //                             <td className=\"text-light\">{item.name}</td>\n// //                             <td className=\"text-light\">{item.qty}</td>\n// //                             <td className=\"text-light\">{item.size}</td>\n// //                             <td className=\"text-light\">₹{item.price * item.qty}</td>\n// //                             <td>\n// //                                 <button className=\"btn btn-danger\" onClick={() => handleRemove(index)}>\n// //                                     Remove\n// //                                 </button>\n// //                             </td>\n// //                         </tr>\n// //                     ))}\n// //                 </tbody>\n// //             </table>\n// //             <div className=\"fs-2 mt-3 text-light\">\n// //                 <h1>Grand Total: ₹{totalPrice}</h1>\n// //             </div>\n// //             <div>\n// //                 <button className='btn btn-success mt-5' onClick={handleCheckOut}>CheckOut</button>\n// //             </div>\n// //         </div>\n// //     );\n// // }\n\n// import React, { useEffect } from 'react';\n// import { useCart, useDispatchCart } from '../components/ContextReducer';\n\n// export default function Cart() {\n//     const cartItems = useCart(); // Fetch items from cart context\n//     const dispatch = useDispatchCart();\n\n//     // Debug: Log cartItems to see what items are in the cart\n//     useEffect(() => {\n//         console.log('Cart Items:', cartItems);\n//     }, [cartItems]);\n\n//     // Calculate the grand total of all cart items (price * quantity for each item)\n//     let totalPrice = cartItems.reduce((total, food) => total + (food.price * food.qty), 0);\n\n//     const handleRemove = (index) => {\n//         dispatch({ type: 'REMOVE', index });\n//     };\n\n//     const handleCheckOut = async () => {\n//         // Check if the cart is empty\n//         if (cartItems.length === 0) {\n//             alert(\"Cart is empty!\"); // Alert when cart is empty\n//             return;\n//         }\n\n//         let userEmail = localStorage.getItem(\"userEmail\");\n\n//         // Check if userEmail exists\n//         if (!userEmail) {\n//             alert(\"User email not found. Please log in.\");\n//             return;\n//         }\n\n//         // Make the checkout request to the server\n//         try {\n//             let response = await fetch(\"http://localhost:5000/api/orderData\", {\n//                 method: 'POST',\n//                 headers: {\n//                     'Content-Type': 'application/json'\n//                 },\n//                 body: JSON.stringify({\n//                     order_data: cartItems,\n//                     email: userEmail,\n//                     order_date: new Date().toString()\n//                 })\n//             });\n\n//             // Handle the response from the server\n//             if (response.ok) {\n//                 dispatch({ type: \"DROP\" }); // Clear the cart after successful checkout\n//                 alert(\"Order placed successfully!\"); // Optional success message\n//             } else {\n//                 console.error('Failed to place order', response.statusText); // Log the error response\n//                 alert(\"Failed to place order. Please try again.\"); // Show alert on failure\n//             }\n//         } catch (error) {\n//             console.error('Error:', error);\n//             alert(\"An error occurred while placing the order. Please try again.\");\n//         }\n//     };\n\n//     // Display message if the cart is empty\n//     if (cartItems.length === 0) {\n//         return (\n//             <div className=\"text-center m-5 text-light\">\n//                 Your Cart is Empty\n//             </div>\n//         );\n//     }\n\n//     return (\n//         <div className=\"container m-auto mt-5 responsive table-responsive-sm table-responsive-md\">\n//             <h2 className=\"table table-hover text-light\">Your Cart</h2>\n//             <table className=\"table table-dark table-bordered table-hover\">\n//                 <thead>\n//                     <tr>\n//                         <th scope=\"col\" className=\"text-light\">S.No</th>\n//                         <th scope=\"col\" className=\"text-light\">Food Name</th>\n//                         <th scope=\"col\" className=\"text-light\">Quantity</th>\n//                         <th scope=\"col\" className=\"text-light\">Option</th>\n//                         <th scope=\"col\" className=\"text-light\">Amount</th>\n//                         <th scope=\"col\" className=\"text-light\">Action</th>\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {cartItems.map((item, index) => (\n//                         <tr key={index}>\n//                             <td className=\"text-light\">{index + 1}</td>\n//                             <td className=\"text-light\">{item.name}</td>\n//                             <td className=\"text-light\">{item.qty}</td>\n//                             <td className=\"text-light\">{item.size}</td>\n//                             <td className=\"text-light\">₹{item.price * item.qty}</td>\n//                             <td>\n//                                 <button className=\"btn btn-danger\" onClick={() => handleRemove(index)}>\n//                                     Remove\n//                                 </button>\n//                             </td>\n//                         </tr>\n//                     ))}\n//                 </tbody>\n//             </table>\n//             <div className=\"fs-2 mt-3 text-light\">\n//                 <h1>Grand Total: ₹{totalPrice}</h1>\n//             </div>\n//             <div>\n//                 <button className='btn btn-success mt-5' onClick={handleCheckOut}>CheckOut</button>\n//             </div>\n//         </div>\n//     );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/ruhan/Documents/gofood/mernapp/src/screens/Cart.js"],"sourcesContent":["// // // import React, { useEffect } from 'react';\r\n// // // import { useCart, useDispatchCart } from '../components/ContextReducer';\r\n\r\n// // // export default function Cart() {\r\n// // //     const cartItems = useCart(); // Fetch items from cart context\r\n// // //     const dispatch = useDispatchCart();\r\n\r\n// // //     // Debug: Log cartItems to see what items are in the cart\r\n// // //     useEffect(() => {\r\n// // //         console.log('Cart Items:', cartItems);\r\n// // //     }, [cartItems]);\r\n\r\n// // //     // Calculate the grand total of all cart items (price * quantity for each item)\r\n// // //     let totalPrice = cartItems.reduce((total, food) => total + (food.price * food.qty), 0);\r\n\r\n// // //     const handleRemove = (index) => {\r\n// // //         dispatch({ type: 'REMOVE', index });\r\n// // //     };\r\n\r\n// // //     if (cartItems.length === 0) {\r\n// // //         return (\r\n// // //             <div className=\"text-center m-5 text-light\">\r\n// // //                 Your Cart is Empty\r\n// // //             </div>\r\n// // //         );\r\n// // //     }\r\n// // // const  handleCheckOut=async()=>{\r\n// // //   let userEmail=localStorage.getItem(\"userEmail\");\r\n// // //   let response=await fetch(\"http://localhost:5000/api/orderData\"),{\r\n// // //   method:'POST',\r\n// // //   headers:{\r\n// // //     'Content-Type':'application/json'\r\n// // //   },\r\n// // //   body:JSON.stringnify{\r\n// // //     order_data:cartItems,\r\n// // //     email:userEmail,\r\n// // //     order_date:new Date().toString()\r\n// // //   }\r\n// // // };\r\n// // // if(response.status===200){\r\n// // //   dispatch({type:\"DROP\"})\r\n// // // }\r\n// // // }\r\n// // //     return (\r\n// // //         <div className=\"container m-auto mt-5 responsive table-responsive-sm table-responsive-md\">\r\n// // //             <h2 className=\"table table-hover\">Your Cart</h2>\r\n// // //             <table className=\"table table-dark table-bordered table-hover\">\r\n// // //                 <thead>\r\n// // //                     <tr>\r\n// // //                         <th scope=\"col\" className=\"text-light\">S.No</th>\r\n// // //                         <th scope=\"col\" className=\"text-light\">Food Name</th>\r\n// // //                         <th scope=\"col\" className=\"text-light\">Quantity</th>\r\n// // //                         <th scope=\"col\" className=\"text-light\">Option</th>\r\n// // //                         <th scope=\"col\" className=\"text-light\">Amount</th>\r\n// // //                         <th scope=\"col\" className=\"text-light\">Action</th>\r\n// // //                     </tr>\r\n// // //                 </thead>\r\n// // //                 <tbody>\r\n// // //                     {cartItems.map((item, index) => (\r\n// // //                         <tr key={index}>\r\n// // //                             <td className=\"text-light\">{index + 1}</td>\r\n// // //                             <td className=\"text-light\">{item.name}</td>\r\n// // //                             <td className=\"text-light\">{item.qty}</td>\r\n// // //                             <td className=\"text-light\">{item.size}</td>\r\n// // //                             <td className=\"text-light\">₹{item.price * item.qty}</td>\r\n// // //                             <td>\r\n// // //                                 <button className=\"btn btn-danger\" onClick={() => handleRemove(index)}>\r\n// // //                                     Remove\r\n// // //                                 </button>\r\n// // //                             </td>\r\n// // //                         </tr>\r\n// // //                     ))}\r\n// // //                 </tbody>\r\n// // //             </table>\r\n// // //             <div className=\"fs-2 mt-3 text-light\">\r\n// // //                 {/* Displaying the grand total */}\r\n// // //                 <h1>Grand Total: ₹{totalPrice}</h1>\r\n// // //             </div>\r\n// // //             <div>\r\n// // //                 <button className='btn btn-success mt-5'>CheckOut</button>\r\n// // //             </div>\r\n// // //         </div>\r\n// // //     );\r\n// // // } \r\n\r\n// // import React, { useEffect } from 'react';\r\n// // import { useCart, useDispatchCart } from '../components/ContextReducer';\r\n\r\n// // export default function Cart() {\r\n// //     const cartItems = useCart(); // Fetch items from cart context\r\n// //     const dispatch = useDispatchCart();\r\n\r\n// //     // Debug: Log cartItems to see what items are in the cart\r\n// //     useEffect(() => {\r\n// //         console.log('Cart Items:', cartItems);\r\n// //     }, [cartItems]);\r\n\r\n// //     // Calculate the grand total of all cart items (price * quantity for each item)\r\n// //     let totalPrice = cartItems.reduce((total, food) => total + (food.price * food.qty), 0);\r\n\r\n// //     const handleRemove = (index) => {\r\n// //         dispatch({ type: 'REMOVE', index });\r\n// //     };\r\n\r\n// //     const handleCheckOut = async () => {\r\n// //         // Check if the cart is empty\r\n// //         if (cartItems.length === 0) {\r\n// //             alert(\"Cart is empty!\"); // Alert when cart is empty\r\n// //             return;\r\n// //         }\r\n\r\n// //         let userEmail = localStorage.getItem(\"userEmail\");\r\n\r\n// //         // Check if userEmail exists\r\n// //         if (!userEmail) {\r\n// //             alert(\"User email not found. Please log in.\");\r\n// //             return;\r\n// //         }\r\n\r\n// //         // Make the checkout request to the server\r\n// //         try {\r\n// //             let response = await fetch(\"http://localhost:5000/api/orderData\", {\r\n// //                 method: 'POST',\r\n// //                 headers: {\r\n// //                     'Content-Type': 'application/json'\r\n// //                 },\r\n// //                 body: JSON.stringify({\r\n// //                     order_data: cartItems,\r\n// //                     email: userEmail,\r\n// //                     order_date: new Date().toString()\r\n// //                 })\r\n// //             });\r\n\r\n// //             // Handle the response from the server\r\n// //             if (response.ok) {\r\n// //                 dispatch({ type: \"DROP\" }); // Clear the cart after successful checkout\r\n// //                 alert(\"Order placed successfully!\"); // Optional success message\r\n// //             } else {\r\n// //                 console.error('Failed to place order', response.statusText); // Log the error response\r\n// //                 alert(\"Failed to place order. Please try again.\"); // Show alert on failure\r\n// //             }\r\n// //         } catch (error) {\r\n// //             console.error('Error:', error);\r\n// //             alert(\"An error occurred while placing the order. Please try again.\");\r\n// //         }\r\n// //     };\r\n\r\n// //     // Display message if the cart is empty\r\n// //     if (cartItems.length === 0) {\r\n// //         return (\r\n// //             <div className=\"text-center m-5 text-light\">\r\n// //                 Your Cart is Empty\r\n// //             </div>\r\n// //         );\r\n// //     }\r\n\r\n// //     return (\r\n// //         <div className=\"container m-auto mt-5 responsive table-responsive-sm table-responsive-md\">\r\n// //             <h2 className=\"table table-hover text-light\">Your Cart</h2>\r\n// //             <table className=\"table table-dark table-bordered table-hover\">\r\n// //                 <thead>\r\n// //                     <tr>\r\n// //                         <th scope=\"col\" className=\"text-light\">S.No</th>\r\n// //                         <th scope=\"col\" className=\"text-light\">Food Name</th>\r\n// //                         <th scope=\"col\" className=\"text-light\">Quantity</th>\r\n// //                         <th scope=\"col\" className=\"text-light\">Option</th>\r\n// //                         <th scope=\"col\" className=\"text-light\">Amount</th>\r\n// //                         <th scope=\"col\" className=\"text-light\">Action</th>\r\n// //                     </tr>\r\n// //                 </thead>\r\n// //                 <tbody>\r\n// //                     {cartItems.map((item, index) => (\r\n// //                         <tr key={index}>\r\n// //                             <td className=\"text-light\">{index + 1}</td>\r\n// //                             <td className=\"text-light\">{item.name}</td>\r\n// //                             <td className=\"text-light\">{item.qty}</td>\r\n// //                             <td className=\"text-light\">{item.size}</td>\r\n// //                             <td className=\"text-light\">₹{item.price * item.qty}</td>\r\n// //                             <td>\r\n// //                                 <button className=\"btn btn-danger\" onClick={() => handleRemove(index)}>\r\n// //                                     Remove\r\n// //                                 </button>\r\n// //                             </td>\r\n// //                         </tr>\r\n// //                     ))}\r\n// //                 </tbody>\r\n// //             </table>\r\n// //             <div className=\"fs-2 mt-3 text-light\">\r\n// //                 <h1>Grand Total: ₹{totalPrice}</h1>\r\n// //             </div>\r\n// //             <div>\r\n// //                 <button className='btn btn-success mt-5' onClick={handleCheckOut}>CheckOut</button>\r\n// //             </div>\r\n// //         </div>\r\n// //     );\r\n// // }\r\n\r\n// import React, { useEffect } from 'react';\r\n// import { useCart, useDispatchCart } from '../components/ContextReducer';\r\n\r\n// export default function Cart() {\r\n//     const cartItems = useCart(); // Fetch items from cart context\r\n//     const dispatch = useDispatchCart();\r\n\r\n//     // Debug: Log cartItems to see what items are in the cart\r\n//     useEffect(() => {\r\n//         console.log('Cart Items:', cartItems);\r\n//     }, [cartItems]);\r\n\r\n//     // Calculate the grand total of all cart items (price * quantity for each item)\r\n//     let totalPrice = cartItems.reduce((total, food) => total + (food.price * food.qty), 0);\r\n\r\n//     const handleRemove = (index) => {\r\n//         dispatch({ type: 'REMOVE', index });\r\n//     };\r\n\r\n//     const handleCheckOut = async () => {\r\n//         // Check if the cart is empty\r\n//         if (cartItems.length === 0) {\r\n//             alert(\"Cart is empty!\"); // Alert when cart is empty\r\n//             return;\r\n//         }\r\n\r\n//         let userEmail = localStorage.getItem(\"userEmail\");\r\n\r\n//         // Check if userEmail exists\r\n//         if (!userEmail) {\r\n//             alert(\"User email not found. Please log in.\");\r\n//             return;\r\n//         }\r\n\r\n//         // Make the checkout request to the server\r\n//         try {\r\n//             let response = await fetch(\"http://localhost:5000/api/orderData\", {\r\n//                 method: 'POST',\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json'\r\n//                 },\r\n//                 body: JSON.stringify({\r\n//                     order_data: cartItems,\r\n//                     email: userEmail,\r\n//                     order_date: new Date().toString()\r\n//                 })\r\n//             });\r\n\r\n//             // Handle the response from the server\r\n//             if (response.ok) {\r\n//                 dispatch({ type: \"DROP\" }); // Clear the cart after successful checkout\r\n//                 alert(\"Order placed successfully!\"); // Optional success message\r\n//             } else {\r\n//                 console.error('Failed to place order', response.statusText); // Log the error response\r\n//                 alert(\"Failed to place order. Please try again.\"); // Show alert on failure\r\n//             }\r\n//         } catch (error) {\r\n//             console.error('Error:', error);\r\n//             alert(\"An error occurred while placing the order. Please try again.\");\r\n//         }\r\n//     };\r\n\r\n//     // Display message if the cart is empty\r\n//     if (cartItems.length === 0) {\r\n//         return (\r\n//             <div className=\"text-center m-5 text-light\">\r\n//                 Your Cart is Empty\r\n//             </div>\r\n//         );\r\n//     }\r\n\r\n//     return (\r\n//         <div className=\"container m-auto mt-5 responsive table-responsive-sm table-responsive-md\">\r\n//             <h2 className=\"table table-hover text-light\">Your Cart</h2>\r\n//             <table className=\"table table-dark table-bordered table-hover\">\r\n//                 <thead>\r\n//                     <tr>\r\n//                         <th scope=\"col\" className=\"text-light\">S.No</th>\r\n//                         <th scope=\"col\" className=\"text-light\">Food Name</th>\r\n//                         <th scope=\"col\" className=\"text-light\">Quantity</th>\r\n//                         <th scope=\"col\" className=\"text-light\">Option</th>\r\n//                         <th scope=\"col\" className=\"text-light\">Amount</th>\r\n//                         <th scope=\"col\" className=\"text-light\">Action</th>\r\n//                     </tr>\r\n//                 </thead>\r\n//                 <tbody>\r\n//                     {cartItems.map((item, index) => (\r\n//                         <tr key={index}>\r\n//                             <td className=\"text-light\">{index + 1}</td>\r\n//                             <td className=\"text-light\">{item.name}</td>\r\n//                             <td className=\"text-light\">{item.qty}</td>\r\n//                             <td className=\"text-light\">{item.size}</td>\r\n//                             <td className=\"text-light\">₹{item.price * item.qty}</td>\r\n//                             <td>\r\n//                                 <button className=\"btn btn-danger\" onClick={() => handleRemove(index)}>\r\n//                                     Remove\r\n//                                 </button>\r\n//                             </td>\r\n//                         </tr>\r\n//                     ))}\r\n//                 </tbody>\r\n//             </table>\r\n//             <div className=\"fs-2 mt-3 text-light\">\r\n//                 <h1>Grand Total: ₹{totalPrice}</h1>\r\n//             </div>\r\n//             <div>\r\n//                 <button className='btn btn-success mt-5' onClick={handleCheckOut}>CheckOut</button>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}