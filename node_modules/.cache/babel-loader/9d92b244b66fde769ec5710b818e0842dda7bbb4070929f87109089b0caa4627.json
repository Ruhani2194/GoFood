{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruhan\\\\Documents\\\\gofood\\\\mernapp\\\\src\\\\components\\\\UploadFoodItem.js\",\n  _s = $RefreshSig$();\n// // import React, { useState } from 'react';\n\n// // const UploadFoodItem = () => {\n// //   const [name, setName] = useState('');\n// //   const [halfPrice, setPriceHalf] = useState('');\n// //   const [fullPrice, setPriceFull] = useState('');\n// //   const [image, setImage] = useState(null);\n// //   const [successMessage, setSuccessMessage] = useState('');\n// //   const [errorMessage, setErrorMessage] = useState('');\n\n// //   const handleImageChange = (e) => setImage(e.target.files[0]);\n// //   const token = localStorage.getItem('authToken');\n// //   // console.log(token);\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n\n// //     const formData = new FormData();\n// //     formData.append('name', name);\n// //     formData.append('halfPrice', halfPrice);\n// //     formData.append('fullPrice', fullPrice);\n// //     formData.append('image', image);\n\n// //     try {\n// //       const response = await fetch('http://localhost:5000/api/admin/add-food-item', {\n// //         method: 'POST',\n// //         body: formData,\n// //       });\n\n// //       const data = await response.json();\n\n// //       if (response.ok) {\n// //         setSuccessMessage('Food item uploaded successfully!');\n// //         setName('');\n// //         setPriceHalf('');\n// //         setPriceFull('');\n// //         setImage(null);\n// //         setTimeout(() => setSuccessMessage(''), 3000);\n// //       } else {\n// //         setErrorMessage(data.error || 'Failed to upload the food item.');\n// //         setTimeout(() => setErrorMessage(''), 3000);\n// //       }\n// //     } catch (error) {\n// //       setErrorMessage('An error occurred. Please try again.');\n// //       setTimeout(() => setErrorMessage(''), 3000);\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"container mt-5\">\n// //       <h2 className=\"text-center mb-4\">Upload Food Item</h2>\n// //       <form onSubmit={handleSubmit} className=\"bg-light p-4 rounded shadow\">\n// //         <div className=\"mb-3\">\n// //           <label htmlFor=\"name\" className=\"form-label\">Food Name</label>\n// //           <input\n// //             type=\"text\"\n// //             id=\"name\"\n// //             value={name}\n// //             onChange={(e) => setName(e.target.value)}\n// //             className=\"form-control\"\n// //             placeholder=\"Enter food name\"\n// //             required\n// //           />\n// //         </div>\n// //         <div className=\"mb-3\">\n// //           <label htmlFor=\"priceHalf\" className=\"form-label\">Price (Half)</label>\n// //           <input\n// //             type=\"number\"\n// //             id=\"halfPrice\"\n// //             value={halfPrice}\n// //             onChange={(e) => setPriceHalf(e.target.value)}\n// //             className=\"form-control\"\n// //             placeholder=\"Enter half plate price\"\n// //             required\n// //           />\n// //         </div>\n// //         <div className=\"mb-3\">\n// //           <label htmlFor=\"priceFull\" className=\"form-label\">Price (Full)</label>\n// //           <input\n// //             type=\"number\"\n// //             id=\"fullPrice\"\n// //             value={fullPrice}\n// //             onChange={(e) => setPriceFull(e.target.value)}\n// //             className=\"form-control\"\n// //             placeholder=\"Enter full plate price\"\n// //             required\n// //           />\n// //         </div>\n// //         <div className=\"mb-3\">\n// //           <label htmlFor=\"image\" className=\"form-label\">Upload Image</label>\n// //           <input\n// //             type=\"file\"\n// //             id=\"image\"\n// //             onChange={handleImageChange}\n// //             className=\"form-control\"\n// //             accept=\"image/*\"\n// //             required\n// //           />\n// //         </div>\n// //         {successMessage && <p className=\"text-success\">{successMessage}</p>}\n// //         {errorMessage && <p className=\"text-danger\">{errorMessage}</p>}\n// //         <button type=\"submit\" className=\"btn btn-primary w-100\">Upload</button>\n// //       </form>\n// //     </div>\n// //   );\n// // };\n\n// // export default UploadFoodItem;\n\n// import React, { useState } from 'react';\n\n// const UploadFoodItem = () => {\n//   const [name, setName] = useState('');\n//   const [halfPrice, setHalfPrice] = useState('');\n//   const [fullPrice, setFullPrice] = useState('');\n//   const [image, setImage] = useState(null);\n//   const [successMessage, setSuccessMessage] = useState('');\n//   const [errorMessage, setErrorMessage] = useState('');\n\n//   const handleImageChange = (e) => {\n//     setImage(e.target.files[0]);\n//   };\n\n//   const token = localStorage.getItem('authToken');\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     const formData = new FormData();\n//     formData.append('name', name);\n//     formData.append('halfPrice', halfPrice);\n//     formData.append('fullPrice', fullPrice);\n//     formData.append('image', image);\n\n//     try {\n//       const response = await fetch('http://localhost:5000/api/admin/add-food-item', {\n//         method: 'POST',\n//         headers: {\n//           'Authorization': `Bearer ${token}`,\n//         },\n//         body: formData,\n//       });\n\n//       const data = await response.json();\n\n//       if (response.ok) {\n//         setSuccessMessage('Food item uploaded successfully!');\n//         setName('');\n//         setHalfPrice('');\n//         setFullPrice('');\n//         setImage(null);\n//         setTimeout(() => setSuccessMessage(''), 3000);\n//       } else {\n//         setErrorMessage(data.error || 'Failed to upload food item.');\n//         setTimeout(() => setErrorMessage(''), 3000);\n//       }\n//     } catch (error) {\n//       setErrorMessage('An error occurred. Please try again.');\n//       setTimeout(() => setErrorMessage(''), 3000);\n//     }\n//   };\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <h2 className=\"text-center mb-4\">Upload Food Item</h2>\n//       <form onSubmit={handleSubmit} className=\"bg-light p-4 rounded shadow\">\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"name\" className=\"form-label\">Food Name</label>\n//           <input\n//             type=\"text\"\n//             id=\"name\"\n//             value={name}\n//             onChange={(e) => setName(e.target.value)}\n//             className=\"form-control\"\n//             placeholder=\"Enter food name\"\n//             required\n//           />\n//         </div>\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"halfPrice\" className=\"form-label\">Price (Half)</label>\n//           <input\n//             type=\"number\"\n//             id=\"halfPrice\"\n//             value={halfPrice}\n//             onChange={(e) => setHalfPrice(e.target.value)}\n//             className=\"form-control\"\n//             placeholder=\"Enter half plate price\"\n//             required\n//           />\n//         </div>\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"fullPrice\" className=\"form-label\">Price (Full)</label>\n//           <input\n//             type=\"number\"\n//             id=\"fullPrice\"\n//             value={fullPrice}\n//             onChange={(e) => setFullPrice(e.target.value)}\n//             className=\"form-control\"\n//             placeholder=\"Enter full plate price\"\n//             required\n//           />\n//         </div>\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"image\" className=\"form-label\">Upload Image</label>\n//           <input\n//             type=\"file\"\n//             id=\"image\"\n//             onChange={handleImageChange}\n//             className=\"form-control\"\n//             accept=\"image/*\"\n//             required\n//           />\n//         </div>\n//         {successMessage && <p className=\"text-success\">{successMessage}</p>}\n//         {errorMessage && <p className=\"text-danger\">{errorMessage}</p>}\n//         <button type=\"submit\" className=\"btn btn-primary w-100\">Upload</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default UploadFoodItem;\n\n// import React, { useState } from 'react';\n\n// const UploadFoodItem = () => {\n//   const [name, setName] = useState('');\n//   const [halfPrice, setHalfPrice] = useState('');\n//   const [fullPrice, setFullPrice] = useState('');\n//   const [image, setImage] = useState(null);\n//   const [successMessage, setSuccessMessage] = useState('');\n//   const [errorMessage, setErrorMessage] = useState('');\n\n//   const handleImageChange = (e) => {\n//     setImage(e.target.files[0]);\n//   };\n\n//   const token = localStorage.getItem('authToken');  // Get token from localStorage\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     const formData = new FormData();\n//     formData.append('name', name);\n//     formData.append('halfPrice', halfPrice);\n//     formData.append('fullPrice', fullPrice);\n//     formData.append('image', image);\n\n//     try {\n//       const response = await fetch('http://localhost:5000/api/admin/add-food-item', {\n//         method: 'POST',\n//         headers: {\n//           'Authorization': `Bearer ${token}`,  // Send token in header for admin authentication\n//         },\n//         body: formData,\n//       });\n\n//       const data = await response.json();\n\n//       if (response.ok) {\n//         setSuccessMessage('Food item uploaded successfully!');\n//         setName('');\n//         setHalfPrice('');\n//         setFullPrice('');\n//         setImage(null);\n//         setTimeout(() => setSuccessMessage(''), 3000);  // Clear success message after 3 seconds\n//       } else {\n//         setErrorMessage(data.message || 'Failed to upload food item.');\n//         setTimeout(() => setErrorMessage(''), 3000);  // Clear error message after 3 seconds\n//       }\n//     } catch (error) {\n//       setErrorMessage('An error occurred. Please try again.');\n//       setTimeout(() => setErrorMessage(''), 3000);  // Clear error message after 3 seconds\n//     }\n//   };\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <h2 className=\"text-center mb-4\">Upload Food Item</h2>\n//       <form onSubmit={handleSubmit} className=\"bg-light p-4 rounded shadow\">\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"name\" className=\"form-label\">Food Name</label>\n//           <input\n//             type=\"text\"\n//             id=\"name\"\n//             value={name}\n//             onChange={(e) => setName(e.target.value)}\n//             className=\"form-control\"\n//             placeholder=\"Enter food name\"\n//             required\n//           />\n//         </div>\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"halfPrice\" className=\"form-label\">Price (Half)</label>\n//           <input\n//             type=\"number\"\n//             id=\"halfPrice\"\n//             value={halfPrice}\n//             onChange={(e) => setHalfPrice(e.target.value)}\n//             className=\"form-control\"\n//             placeholder=\"Enter half plate price\"\n//             required\n//           />\n//         </div>\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"fullPrice\" className=\"form-label\">Price (Full)</label>\n//           <input\n//             type=\"number\"\n//             id=\"fullPrice\"\n//             value={fullPrice}\n//             onChange={(e) => setFullPrice(e.target.value)}\n//             className=\"form-control\"\n//             placeholder=\"Enter full plate price\"\n//             required\n//           />\n//         </div>\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"image\" className=\"form-label\">Upload Image</label>\n//           <input\n//             type=\"file\"\n//             id=\"image\"\n//             onChange={handleImageChange}\n//             className=\"form-control\"\n//             accept=\"image/*\"\n//             required\n//           />\n//         </div>\n//         {successMessage && <p className=\"text-success\">{successMessage}</p>}\n//         {errorMessage && <p className=\"text-danger\">{errorMessage}</p>}\n//         <button type=\"submit\" className=\"btn btn-primary w-100\">Upload</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default UploadFoodItem;\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadFoodItem = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = useState('');\n  const [halfPrice, setHalfPrice] = useState('');\n  const [fullPrice, setFullPrice] = useState('');\n  const [image, setImage] = useState(null);\n  const [altText, setAltText] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleImageChange = e => {\n    setImage(e.target.files[0]);\n  };\n  const token = localStorage.getItem('authToken'); // Get token from localStorage\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('description', description);\n    formData.append('category', category);\n    formData.append('halfPrice', halfPrice);\n    formData.append('fullPrice', fullPrice);\n    formData.append('image', image);\n    formData.append('altText', altText);\n    try {\n      const response = await fetch('http://localhost:5000/api/admin/add-food-item', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}` // Send token in header for admin authentication\n        },\n        body: formData\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setSuccessMessage('Food item uploaded successfully!');\n        setName('');\n        setDescription('');\n        setCategory('');\n        setHalfPrice('');\n        setFullPrice('');\n        setImage(null);\n        setAltText('');\n        setTimeout(() => setSuccessMessage(''), 3000); // Clear success message after 3 seconds\n      } else {\n        setErrorMessage(data.message || 'Failed to upload food item.');\n        setTimeout(() => setErrorMessage(''), 3000); // Clear error message after 3 seconds\n      }\n    } catch (error) {\n      setErrorMessage('An error occurred. Please try again.');\n      setTimeout(() => setErrorMessage(''), 3000); // Clear error message after 3 seconds\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mb-4\",\n      children: \"Upload Food Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"bg-light p-4 rounded shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          className: \"form-label\",\n          children: \"Food Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          className: \"form-control\",\n          placeholder: \"Enter food name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          className: \"form-label\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          className: \"form-control\",\n          placeholder: \"Enter food description\",\n          maxLength: \"500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"category\",\n          className: \"form-label\",\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"category\",\n          value: category,\n          onChange: e => setCategory(e.target.value),\n          className: \"form-control\",\n          placeholder: \"Enter food category\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"halfPrice\",\n          className: \"form-label\",\n          children: \"Price (Half)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"halfPrice\",\n          value: halfPrice,\n          onChange: e => setHalfPrice(e.target.value),\n          className: \"form-control\",\n          placeholder: \"Enter half plate price\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fullPrice\",\n          className: \"form-label\",\n          children: \"Price (Full)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"fullPrice\",\n          value: fullPrice,\n          onChange: e => setFullPrice(e.target.value),\n          className: \"form-control\",\n          placeholder: \"Enter full plate price\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          className: \"form-label\",\n          children: \"Upload Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"image\",\n          onChange: handleImageChange,\n          className: \"form-control\",\n          accept: \"image/*\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"altText\",\n          className: \"form-label\",\n          children: \"Image Description (Alt Text)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"altText\",\n          value: altText,\n          onChange: e => setAltText(e.target.value),\n          className: \"form-control\",\n          placeholder: \"Enter alt text for the image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 9\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-success\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 28\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-danger\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary w-100\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 402,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadFoodItem, \"ISu2C5gAfsGzqe4YSaQNxzd8ISY=\");\n_c = UploadFoodItem;\nexport default UploadFoodItem;\nvar _c;\n$RefreshReg$(_c, \"UploadFoodItem\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadFoodItem","_s","name","setName","description","setDescription","category","setCategory","halfPrice","setHalfPrice","fullPrice","setFullPrice","image","setImage","altText","setAltText","successMessage","setSuccessMessage","errorMessage","setErrorMessage","handleImageChange","e","target","files","token","localStorage","getItem","handleSubmit","preventDefault","formData","FormData","append","response","fetch","method","headers","body","data","json","ok","setTimeout","message","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","placeholder","required","maxLength","accept","_c","$RefreshReg$"],"sources":["C:/Users/ruhan/Documents/gofood/mernapp/src/components/UploadFoodItem.js"],"sourcesContent":["// // import React, { useState } from 'react';\r\n\r\n// // const UploadFoodItem = () => {\r\n// //   const [name, setName] = useState('');\r\n// //   const [halfPrice, setPriceHalf] = useState('');\r\n// //   const [fullPrice, setPriceFull] = useState('');\r\n// //   const [image, setImage] = useState(null);\r\n// //   const [successMessage, setSuccessMessage] = useState('');\r\n// //   const [errorMessage, setErrorMessage] = useState('');\r\n\r\n// //   const handleImageChange = (e) => setImage(e.target.files[0]);\r\n// //   const token = localStorage.getItem('authToken');\r\n// //   // console.log(token);\r\n// //   const handleSubmit = async (e) => {\r\n// //     e.preventDefault();\r\n\r\n// //     const formData = new FormData();\r\n// //     formData.append('name', name);\r\n// //     formData.append('halfPrice', halfPrice);\r\n// //     formData.append('fullPrice', fullPrice);\r\n// //     formData.append('image', image);\r\n\r\n// //     try {\r\n// //       const response = await fetch('http://localhost:5000/api/admin/add-food-item', {\r\n// //         method: 'POST',\r\n// //         body: formData,\r\n// //       });\r\n\r\n// //       const data = await response.json();\r\n\r\n// //       if (response.ok) {\r\n// //         setSuccessMessage('Food item uploaded successfully!');\r\n// //         setName('');\r\n// //         setPriceHalf('');\r\n// //         setPriceFull('');\r\n// //         setImage(null);\r\n// //         setTimeout(() => setSuccessMessage(''), 3000);\r\n// //       } else {\r\n// //         setErrorMessage(data.error || 'Failed to upload the food item.');\r\n// //         setTimeout(() => setErrorMessage(''), 3000);\r\n// //       }\r\n// //     } catch (error) {\r\n// //       setErrorMessage('An error occurred. Please try again.');\r\n// //       setTimeout(() => setErrorMessage(''), 3000);\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"container mt-5\">\r\n// //       <h2 className=\"text-center mb-4\">Upload Food Item</h2>\r\n// //       <form onSubmit={handleSubmit} className=\"bg-light p-4 rounded shadow\">\r\n// //         <div className=\"mb-3\">\r\n// //           <label htmlFor=\"name\" className=\"form-label\">Food Name</label>\r\n// //           <input\r\n// //             type=\"text\"\r\n// //             id=\"name\"\r\n// //             value={name}\r\n// //             onChange={(e) => setName(e.target.value)}\r\n// //             className=\"form-control\"\r\n// //             placeholder=\"Enter food name\"\r\n// //             required\r\n// //           />\r\n// //         </div>\r\n// //         <div className=\"mb-3\">\r\n// //           <label htmlFor=\"priceHalf\" className=\"form-label\">Price (Half)</label>\r\n// //           <input\r\n// //             type=\"number\"\r\n// //             id=\"halfPrice\"\r\n// //             value={halfPrice}\r\n// //             onChange={(e) => setPriceHalf(e.target.value)}\r\n// //             className=\"form-control\"\r\n// //             placeholder=\"Enter half plate price\"\r\n// //             required\r\n// //           />\r\n// //         </div>\r\n// //         <div className=\"mb-3\">\r\n// //           <label htmlFor=\"priceFull\" className=\"form-label\">Price (Full)</label>\r\n// //           <input\r\n// //             type=\"number\"\r\n// //             id=\"fullPrice\"\r\n// //             value={fullPrice}\r\n// //             onChange={(e) => setPriceFull(e.target.value)}\r\n// //             className=\"form-control\"\r\n// //             placeholder=\"Enter full plate price\"\r\n// //             required\r\n// //           />\r\n// //         </div>\r\n// //         <div className=\"mb-3\">\r\n// //           <label htmlFor=\"image\" className=\"form-label\">Upload Image</label>\r\n// //           <input\r\n// //             type=\"file\"\r\n// //             id=\"image\"\r\n// //             onChange={handleImageChange}\r\n// //             className=\"form-control\"\r\n// //             accept=\"image/*\"\r\n// //             required\r\n// //           />\r\n// //         </div>\r\n// //         {successMessage && <p className=\"text-success\">{successMessage}</p>}\r\n// //         {errorMessage && <p className=\"text-danger\">{errorMessage}</p>}\r\n// //         <button type=\"submit\" className=\"btn btn-primary w-100\">Upload</button>\r\n// //       </form>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default UploadFoodItem;\r\n\r\n\r\n// import React, { useState } from 'react';\r\n\r\n// const UploadFoodItem = () => {\r\n//   const [name, setName] = useState('');\r\n//   const [halfPrice, setHalfPrice] = useState('');\r\n//   const [fullPrice, setFullPrice] = useState('');\r\n//   const [image, setImage] = useState(null);\r\n//   const [successMessage, setSuccessMessage] = useState('');\r\n//   const [errorMessage, setErrorMessage] = useState('');\r\n\r\n//   const handleImageChange = (e) => {\r\n//     setImage(e.target.files[0]);\r\n//   };\r\n\r\n//   const token = localStorage.getItem('authToken');\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     const formData = new FormData();\r\n//     formData.append('name', name);\r\n//     formData.append('halfPrice', halfPrice);\r\n//     formData.append('fullPrice', fullPrice);\r\n//     formData.append('image', image);\r\n\r\n//     try {\r\n//       const response = await fetch('http://localhost:5000/api/admin/add-food-item', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Authorization': `Bearer ${token}`,\r\n//         },\r\n//         body: formData,\r\n//       });\r\n\r\n//       const data = await response.json();\r\n\r\n//       if (response.ok) {\r\n//         setSuccessMessage('Food item uploaded successfully!');\r\n//         setName('');\r\n//         setHalfPrice('');\r\n//         setFullPrice('');\r\n//         setImage(null);\r\n//         setTimeout(() => setSuccessMessage(''), 3000);\r\n//       } else {\r\n//         setErrorMessage(data.error || 'Failed to upload food item.');\r\n//         setTimeout(() => setErrorMessage(''), 3000);\r\n//       }\r\n//     } catch (error) {\r\n//       setErrorMessage('An error occurred. Please try again.');\r\n//       setTimeout(() => setErrorMessage(''), 3000);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container mt-5\">\r\n//       <h2 className=\"text-center mb-4\">Upload Food Item</h2>\r\n//       <form onSubmit={handleSubmit} className=\"bg-light p-4 rounded shadow\">\r\n//         <div className=\"mb-3\">\r\n//           <label htmlFor=\"name\" className=\"form-label\">Food Name</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             id=\"name\"\r\n//             value={name}\r\n//             onChange={(e) => setName(e.target.value)}\r\n//             className=\"form-control\"\r\n//             placeholder=\"Enter food name\"\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div className=\"mb-3\">\r\n//           <label htmlFor=\"halfPrice\" className=\"form-label\">Price (Half)</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             id=\"halfPrice\"\r\n//             value={halfPrice}\r\n//             onChange={(e) => setHalfPrice(e.target.value)}\r\n//             className=\"form-control\"\r\n//             placeholder=\"Enter half plate price\"\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div className=\"mb-3\">\r\n//           <label htmlFor=\"fullPrice\" className=\"form-label\">Price (Full)</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             id=\"fullPrice\"\r\n//             value={fullPrice}\r\n//             onChange={(e) => setFullPrice(e.target.value)}\r\n//             className=\"form-control\"\r\n//             placeholder=\"Enter full plate price\"\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div className=\"mb-3\">\r\n//           <label htmlFor=\"image\" className=\"form-label\">Upload Image</label>\r\n//           <input\r\n//             type=\"file\"\r\n//             id=\"image\"\r\n//             onChange={handleImageChange}\r\n//             className=\"form-control\"\r\n//             accept=\"image/*\"\r\n//             required\r\n//           />\r\n//         </div>\r\n//         {successMessage && <p className=\"text-success\">{successMessage}</p>}\r\n//         {errorMessage && <p className=\"text-danger\">{errorMessage}</p>}\r\n//         <button type=\"submit\" className=\"btn btn-primary w-100\">Upload</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UploadFoodItem;\r\n\r\n// import React, { useState } from 'react';\r\n\r\n// const UploadFoodItem = () => {\r\n//   const [name, setName] = useState('');\r\n//   const [halfPrice, setHalfPrice] = useState('');\r\n//   const [fullPrice, setFullPrice] = useState('');\r\n//   const [image, setImage] = useState(null);\r\n//   const [successMessage, setSuccessMessage] = useState('');\r\n//   const [errorMessage, setErrorMessage] = useState('');\r\n\r\n//   const handleImageChange = (e) => {\r\n//     setImage(e.target.files[0]);\r\n//   };\r\n\r\n//   const token = localStorage.getItem('authToken');  // Get token from localStorage\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     const formData = new FormData();\r\n//     formData.append('name', name);\r\n//     formData.append('halfPrice', halfPrice);\r\n//     formData.append('fullPrice', fullPrice);\r\n//     formData.append('image', image);\r\n\r\n//     try {\r\n//       const response = await fetch('http://localhost:5000/api/admin/add-food-item', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Authorization': `Bearer ${token}`,  // Send token in header for admin authentication\r\n//         },\r\n//         body: formData,\r\n//       });\r\n\r\n//       const data = await response.json();\r\n\r\n//       if (response.ok) {\r\n//         setSuccessMessage('Food item uploaded successfully!');\r\n//         setName('');\r\n//         setHalfPrice('');\r\n//         setFullPrice('');\r\n//         setImage(null);\r\n//         setTimeout(() => setSuccessMessage(''), 3000);  // Clear success message after 3 seconds\r\n//       } else {\r\n//         setErrorMessage(data.message || 'Failed to upload food item.');\r\n//         setTimeout(() => setErrorMessage(''), 3000);  // Clear error message after 3 seconds\r\n//       }\r\n//     } catch (error) {\r\n//       setErrorMessage('An error occurred. Please try again.');\r\n//       setTimeout(() => setErrorMessage(''), 3000);  // Clear error message after 3 seconds\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container mt-5\">\r\n//       <h2 className=\"text-center mb-4\">Upload Food Item</h2>\r\n//       <form onSubmit={handleSubmit} className=\"bg-light p-4 rounded shadow\">\r\n//         <div className=\"mb-3\">\r\n//           <label htmlFor=\"name\" className=\"form-label\">Food Name</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             id=\"name\"\r\n//             value={name}\r\n//             onChange={(e) => setName(e.target.value)}\r\n//             className=\"form-control\"\r\n//             placeholder=\"Enter food name\"\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div className=\"mb-3\">\r\n//           <label htmlFor=\"halfPrice\" className=\"form-label\">Price (Half)</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             id=\"halfPrice\"\r\n//             value={halfPrice}\r\n//             onChange={(e) => setHalfPrice(e.target.value)}\r\n//             className=\"form-control\"\r\n//             placeholder=\"Enter half plate price\"\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div className=\"mb-3\">\r\n//           <label htmlFor=\"fullPrice\" className=\"form-label\">Price (Full)</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             id=\"fullPrice\"\r\n//             value={fullPrice}\r\n//             onChange={(e) => setFullPrice(e.target.value)}\r\n//             className=\"form-control\"\r\n//             placeholder=\"Enter full plate price\"\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div className=\"mb-3\">\r\n//           <label htmlFor=\"image\" className=\"form-label\">Upload Image</label>\r\n//           <input\r\n//             type=\"file\"\r\n//             id=\"image\"\r\n//             onChange={handleImageChange}\r\n//             className=\"form-control\"\r\n//             accept=\"image/*\"\r\n//             required\r\n//           />\r\n//         </div>\r\n//         {successMessage && <p className=\"text-success\">{successMessage}</p>}\r\n//         {errorMessage && <p className=\"text-danger\">{errorMessage}</p>}\r\n//         <button type=\"submit\" className=\"btn btn-primary w-100\">Upload</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UploadFoodItem;\r\n\r\n\r\nimport React, { useState } from 'react';\r\n\r\nconst UploadFoodItem = () => {\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [halfPrice, setHalfPrice] = useState('');\r\n  const [fullPrice, setFullPrice] = useState('');\r\n  const [image, setImage] = useState(null);\r\n  const [altText, setAltText] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const handleImageChange = (e) => {\r\n    setImage(e.target.files[0]);\r\n  };\r\n\r\n  const token = localStorage.getItem('authToken');  // Get token from localStorage\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.append('name', name);\r\n    formData.append('description', description);\r\n    formData.append('category', category);\r\n    formData.append('halfPrice', halfPrice);\r\n    formData.append('fullPrice', fullPrice);\r\n    formData.append('image', image);\r\n    formData.append('altText', altText);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/admin/add-food-item', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,  // Send token in header for admin authentication\r\n        },\r\n        body: formData,\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setSuccessMessage('Food item uploaded successfully!');\r\n        setName('');\r\n        setDescription('');\r\n        setCategory('');\r\n        setHalfPrice('');\r\n        setFullPrice('');\r\n        setImage(null);\r\n        setAltText('');\r\n        setTimeout(() => setSuccessMessage(''), 3000);  // Clear success message after 3 seconds\r\n      } else {\r\n        setErrorMessage(data.message || 'Failed to upload food item.');\r\n        setTimeout(() => setErrorMessage(''), 3000);  // Clear error message after 3 seconds\r\n      }\r\n    } catch (error) {\r\n      setErrorMessage('An error occurred. Please try again.');\r\n      setTimeout(() => setErrorMessage(''), 3000);  // Clear error message after 3 seconds\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2 className=\"text-center mb-4\">Upload Food Item</h2>\r\n      <form onSubmit={handleSubmit} className=\"bg-light p-4 rounded shadow\">\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"name\" className=\"form-label\">Food Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            className=\"form-control\"\r\n            placeholder=\"Enter food name\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"description\" className=\"form-label\">Description</label>\r\n          <textarea\r\n            id=\"description\"\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n            className=\"form-control\"\r\n            placeholder=\"Enter food description\"\r\n            maxLength=\"500\"\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"category\" className=\"form-label\">Category</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"category\"\r\n            value={category}\r\n            onChange={(e) => setCategory(e.target.value)}\r\n            className=\"form-control\"\r\n            placeholder=\"Enter food category\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"halfPrice\" className=\"form-label\">Price (Half)</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"halfPrice\"\r\n            value={halfPrice}\r\n            onChange={(e) => setHalfPrice(e.target.value)}\r\n            className=\"form-control\"\r\n            placeholder=\"Enter half plate price\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"fullPrice\" className=\"form-label\">Price (Full)</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"fullPrice\"\r\n            value={fullPrice}\r\n            onChange={(e) => setFullPrice(e.target.value)}\r\n            className=\"form-control\"\r\n            placeholder=\"Enter full plate price\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"image\" className=\"form-label\">Upload Image</label>\r\n          <input\r\n            type=\"file\"\r\n            id=\"image\"\r\n            onChange={handleImageChange}\r\n            className=\"form-control\"\r\n            accept=\"image/*\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"altText\" className=\"form-label\">Image Description (Alt Text)</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"altText\"\r\n            value={altText}\r\n            onChange={(e) => setAltText(e.target.value)}\r\n            className=\"form-control\"\r\n            placeholder=\"Enter alt text for the image\"\r\n          />\r\n        </div>\r\n        {successMessage && <p className=\"text-success\">{successMessage}</p>}\r\n        {errorMessage && <p className=\"text-danger\">{errorMessage}</p>}\r\n        <button type=\"submit\" className=\"btn btn-primary w-100\">Upload</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadFoodItem;\r\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}