{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruhan\\\\Documents\\\\gofood\\\\mernapp\\\\src\\\\components\\\\ProtectedAdminRoute.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// function AdminPanel() {\n//   const [name, setName] = useState('');\n//   const [price, setPrice] = useState('');\n//   const [image, setImage] = useState(null);\n//   const [message, setMessage] = useState('');\n\n//   const handleImageChange = (e) => {\n//     setImage(e.target.files[0]);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const formData = new FormData();\n//     formData.append('name', name);\n//     formData.append('price', price);\n//     formData.append('image', image);\n\n//     try {\n//       const token = localStorage.getItem('token');\n//       const response = await axios.post('http://localhost:5000/api/foods', formData, {\n//         headers: { Authorization: `Bearer ${token}` }\n//       });\n//       setMessage(response.data.message);\n//     } catch (err) {\n//       setMessage('Error adding food item');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Admin Panel</h2>\n//       <form onSubmit={handleSubmit}>\n//         <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} placeholder=\"Food Name\" required />\n//         <input type=\"number\" value={price} onChange={(e) => setPrice(e.target.value)} placeholder=\"Price\" required />\n//         <input type=\"file\" onChange={handleImageChange} required />\n//         <button type=\"submit\">Add Food</button>\n//       </form>\n//       {message && <p>{message}</p>}\n//     </div>\n//   );\n// }\n\n// export default AdminPanel;\n\nimport React, { useState, useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedAdminRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  _s();\n  const [isAuthorized, setIsAuthorized] = useState(null); // null: loading, true/false: resolved\n  const token = localStorage.getItem('authToken');\n  useEffect(() => {\n    const verifyAdmin = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/validate-admin', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setIsAuthorized(data.role === 'admin'); // Assume backend returns { role: \"admin\" }\n        } else {\n          setIsAuthorized(false);\n        }\n      } catch (error) {\n        console.error('Error verifying admin:', error);\n        setIsAuthorized(false);\n      }\n    };\n    if (token) {\n      verifyAdmin();\n    } else {\n      setIsAuthorized(false);\n    }\n  }, [token]);\n  if (isAuthorized === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 12\n    }, this); // Show a loading state while verifying\n  }\n  return isAuthorized ? /*#__PURE__*/_jsxDEV(Component, {\n    ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 25\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 51\n  }, this);\n};\n_s(ProtectedAdminRoute, \"/RbkxiFcbMKahpHiUnYVhfdK+Ww=\");\n_c = ProtectedAdminRoute;\nexport default ProtectedAdminRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedAdminRoute\");","map":{"version":3,"names":["React","useState","useEffect","Navigate","jsxDEV","_jsxDEV","ProtectedAdminRoute","component","Component","rest","_s","isAuthorized","setIsAuthorized","token","localStorage","getItem","verifyAdmin","response","fetch","method","headers","Authorization","ok","data","json","role","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","_c","$RefreshReg$"],"sources":["C:/Users/ruhan/Documents/gofood/mernapp/src/components/ProtectedAdminRoute.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// function AdminPanel() {\r\n//   const [name, setName] = useState('');\r\n//   const [price, setPrice] = useState('');\r\n//   const [image, setImage] = useState(null);\r\n//   const [message, setMessage] = useState('');\r\n\r\n//   const handleImageChange = (e) => {\r\n//     setImage(e.target.files[0]);\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const formData = new FormData();\r\n//     formData.append('name', name);\r\n//     formData.append('price', price);\r\n//     formData.append('image', image);\r\n\r\n//     try {\r\n//       const token = localStorage.getItem('token');\r\n//       const response = await axios.post('http://localhost:5000/api/foods', formData, {\r\n//         headers: { Authorization: `Bearer ${token}` }\r\n//       });\r\n//       setMessage(response.data.message);\r\n//     } catch (err) {\r\n//       setMessage('Error adding food item');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Admin Panel</h2>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} placeholder=\"Food Name\" required />\r\n//         <input type=\"number\" value={price} onChange={(e) => setPrice(e.target.value)} placeholder=\"Price\" required />\r\n//         <input type=\"file\" onChange={handleImageChange} required />\r\n//         <button type=\"submit\">Add Food</button>\r\n//       </form>\r\n//       {message && <p>{message}</p>}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default AdminPanel;\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst ProtectedAdminRoute = ({ component: Component, ...rest }) => {\r\n  const [isAuthorized, setIsAuthorized] = useState(null); // null: loading, true/false: resolved\r\n  const token = localStorage.getItem('authToken');\r\n\r\n  useEffect(() => {\r\n    const verifyAdmin = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/validate-admin', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setIsAuthorized(data.role === 'admin'); // Assume backend returns { role: \"admin\" }\r\n        } else {\r\n          setIsAuthorized(false);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error verifying admin:', error);\r\n        setIsAuthorized(false);\r\n      }\r\n    };\r\n\r\n    if (token) {\r\n      verifyAdmin();\r\n    } else {\r\n      setIsAuthorized(false);\r\n    }\r\n  }, [token]);\r\n\r\n  if (isAuthorized === null) {\r\n    return <div>Loading...</div>; // Show a loading state while verifying\r\n  }\r\n\r\n  return isAuthorized ? <Component {...rest} /> : <Navigate to=\"/\" replace />;\r\n};\r\n\r\nexport default ProtectedAdminRoute;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC,SAAS,EAAEC,SAAS;EAAE,GAAGC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACjE,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACxD,MAAMY,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAE/Cb,SAAS,CAAC,MAAM;IACd,MAAMc,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAA0C,EAAE;UACvEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClCC,aAAa,EAAE,UAAUR,KAAK;UAChC;QACF,CAAC,CAAC;QAEF,IAAII,QAAQ,CAACK,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;UAClCZ,eAAe,CAACW,IAAI,CAACE,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC;QAC1C,CAAC,MAAM;UACLb,eAAe,CAAC,KAAK,CAAC;QACxB;MACF,CAAC,CAAC,OAAOc,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9Cd,eAAe,CAAC,KAAK,CAAC;MACxB;IACF,CAAC;IAED,IAAIC,KAAK,EAAE;MACTG,WAAW,CAAC,CAAC;IACf,CAAC,MAAM;MACLJ,eAAe,CAAC,KAAK,CAAC;IACxB;EACF,CAAC,EAAE,CAACC,KAAK,CAAC,CAAC;EAEX,IAAIF,YAAY,KAAK,IAAI,EAAE;IACzB,oBAAON,OAAA;MAAAuB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAChC;EAEA,OAAOrB,YAAY,gBAAGN,OAAA,CAACG,SAAS;IAAA,GAAKC;EAAI;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC,gBAAG3B,OAAA,CAACF,QAAQ;IAAC8B,EAAE,EAAC,GAAG;IAACC,OAAO;EAAA;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC7E,CAAC;AAACtB,EAAA,CAvCIJ,mBAAmB;AAAA6B,EAAA,GAAnB7B,mBAAmB;AAyCzB,eAAeA,mBAAmB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}