{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruhan\\\\Documents\\\\gofood\\\\mernapp\\\\src\\\\components\\\\Footer.js\",\n  _s = $RefreshSig$();\n// // // // // // // // // import React from 'react'\n// // // // // // // // // import {link} from 'react-router-dom'\n// // // // // // // // // export default function Footer() {\n// // // // // // // // //   return (\n// // // // // // // // //     <div><div className=\"container\">\n// // // // // // // // //     <footer className=\"d-flex flex-wrap justify-content-between align-items-center py-3 my-4 border-top\">\n// // // // // // // // //       <div className=\"col-md-4 d-flex align-items-center\">\n// // // // // // // // //         <link to=\"/\" className=\"mb-3 me-2 mb-md-0 text-muted text-decoration-none lh-1\">\n// // // // // // // // //         </link>\n// // // // // // // // //         <span className=\"text-muted\">Â© 2024<i>GoFood</i>, Inc</span>\n// // // // // // // // //       </div>\n\n// // // // // // // // //       {/* <ul className=\"nav col-md-4 justify-content-end list-unstyled d-flex\">\n// // // // // // // // //         <li className=\"ms-3\"><a className=\"text-muted\" href=\"/\"><svg className=\"bi\" width=\"24\" height=\"24\"><use ></use></svg></a></li>\n// // // // // // // // //         <li className=\"ms-3\"><a className=\"text-muted\" href=\"/\"><svg className=\"bi\" width=\"24\" height=\"24\"><use ></use></svg></a></li>\n// // // // // // // // //         <li className=\"ms-3\"><a className=\"text-muted\" href=\"/\"><svg className=\"bi\" width=\"24\" height=\"24\"><use></use></svg></a></li>\n// // // // // // // // //       </ul> */}\n// // // // // // // // //     </footer>\n// // // // // // // // //   </div>\n// // // // // // // // //   </div>\n// // // // // // // // //   )\n// // // // // // // // // }\n\n// // // // // // // // import React, { useEffect, useState } from 'react';\n\n// // // // // // // // function Footer() {\n// // // // // // // //   const [reviews, setReviews] = useState([]);\n// // // // // // // //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// // // // // // // //   const [editReview, setEditReview] = useState(null);\n\n// // // // // // // //   // Fetch reviews from the backend\n// // // // // // // //   const fetchReviews = async () => {\n// // // // // // // //     try {\n// // // // // // // //       const response = await fetch('http://localhost:5000/api/reviews');\n// // // // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // // // //       const data = await response.json();\n// // // // // // // //       setReviews(data);\n// // // // // // // //     } catch (error) {\n// // // // // // // //       console.error('Error fetching reviews:', error);\n// // // // // // // //     }\n// // // // // // // //   };\n\n// // // // // // // //   useEffect(() => {\n// // // // // // // //     fetchReviews();\n// // // // // // // //   }, []);\n\n// // // // // // // //   // Create a new review\n// // // // // // // //   const handleCreate = async () => {\n// // // // // // // //     try {\n// // // // // // // //       const response = await fetch('http://localhost:5000/api/reviews', {\n// // // // // // // //         method: 'POST',\n// // // // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // // // //         body: JSON.stringify(newReview),\n// // // // // // // //       });\n// // // // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // // // //       const data = await response.json();\n// // // // // // // //       setReviews([...reviews, data]);\n// // // // // // // //       setNewReview({ user: '', comment: '', rating: 1 });\n// // // // // // // //     } catch (error) {\n// // // // // // // //       console.error('Error creating review:', error);\n// // // // // // // //     }\n// // // // // // // //   };\n\n// // // // // // // //   // Update an existing review\n// // // // // // // //   const handleUpdate = async () => {\n// // // // // // // //     if (!editReview) return;\n\n// // // // // // // //     try {\n// // // // // // // //       const response = await fetch(`http://localhost:5000/api/reviews/${editReview._id}`, {\n// // // // // // // //         method: 'PUT',\n// // // // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // // // //         body: JSON.stringify(editReview),\n// // // // // // // //       });\n// // // // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // // // //       const data = await response.json();\n// // // // // // // //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// // // // // // // //       setEditReview(null);\n// // // // // // // //     } catch (error) {\n// // // // // // // //       console.error('Error updating review:', error);\n// // // // // // // //     }\n// // // // // // // //   };\n\n// // // // // // // //   // Delete a review\n// // // // // // // //   const handleDelete = async (id) => {\n// // // // // // // //     try {\n// // // // // // // //       const response = await fetch(`http://localhost:5000/api/reviews/${id}`, { method: 'DELETE' });\n// // // // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // // // //       setReviews(reviews.filter(review => review._id !== id));\n// // // // // // // //     } catch (error) {\n// // // // // // // //       console.error('Error deleting review:', error);\n// // // // // // // //     }\n// // // // // // // //   };\n\n// // // // // // // //   return (\n// // // // // // // //     <footer className=\"bg-dark text-light py-3\">\n// // // // // // // //       <div className=\"container\">\n// // // // // // // //         <h4>User Reviews</h4>\n// // // // // // // //         <ul className=\"list-unstyled\">\n// // // // // // // //           {reviews.map(review => (\n// // // // // // // //             <li key={review._id} className=\"mb-2\">\n// // // // // // // //               <div>\n// // // // // // // //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// // // // // // // //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// // // // // // // //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// // // // // // // //               </div>\n// // // // // // // //             </li>\n// // // // // // // //           ))}\n// // // // // // // //         </ul>\n// // // // // // // //         {editReview ? (\n// // // // // // // //           <div>\n// // // // // // // //             <h5>Edit Review</h5>\n// // // // // // // //             <input\n// // // // // // // //               type=\"text\"\n// // // // // // // //               value={editReview.user}\n// // // // // // // //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// // // // // // // //               placeholder=\"User\"\n// // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // //             />\n// // // // // // // //             <input\n// // // // // // // //               type=\"text\"\n// // // // // // // //               value={editReview.comment}\n// // // // // // // //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// // // // // // // //               placeholder=\"Comment\"\n// // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // //             />\n// // // // // // // //             <input\n// // // // // // // //               type=\"number\"\n// // // // // // // //               min=\"1\"\n// // // // // // // //               max=\"5\"\n// // // // // // // //               value={editReview.rating}\n// // // // // // // //               onChange={(e) => setEditReview({ ...editReview, rating: Number(e.target.value) })}\n// // // // // // // //               placeholder=\"Rating\"\n// // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // //             />\n// // // // // // // //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// // // // // // // //           </div>\n// // // // // // // //         ) : (\n// // // // // // // //           <div>\n// // // // // // // //             <h5>Add Review</h5>\n// // // // // // // //             <input\n// // // // // // // //               type=\"text\"\n// // // // // // // //               value={newReview.user}\n// // // // // // // //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// // // // // // // //               placeholder=\"User\"\n// // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // //             />\n// // // // // // // //             <input\n// // // // // // // //               type=\"text\"\n// // // // // // // //               value={newReview.comment}\n// // // // // // // //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// // // // // // // //               placeholder=\"Comment\"\n// // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // //             />\n// // // // // // // //             <input\n// // // // // // // //               type=\"number\"\n// // // // // // // //               min=\"1\"\n// // // // // // // //               max=\"5\"\n// // // // // // // //               value={newReview.rating}\n// // // // // // // //               onChange={(e) => setNewReview({ ...newReview, rating: Number(e.target.value) })}\n// // // // // // // //               placeholder=\"Rating\"\n// // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // //             />\n// // // // // // // //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// // // // // // // //           </div>\n// // // // // // // //         )}\n// // // // // // // //       </div>\n// // // // // // // //     </footer>\n// // // // // // // //   );\n// // // // // // // // }\n\n// // // // // // // // export default Footer;\n\n// // // // // // // import React, { useEffect, useState } from 'react';\n\n// // // // // // // function Footer() {\n// // // // // // //   const [reviews, setReviews] = useState([]);\n// // // // // // //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// // // // // // //   const [editReview, setEditReview] = useState(null);\n\n// // // // // // //   // Fetch reviews from the backend\n// // // // // // //   const fetchReviews = async () => {\n// // // // // // //     try {\n// // // // // // //       const response = await fetch('http://localhost:5000/api/reviews');\n// // // // // // //       const data = await response.json();\n// // // // // // //       setReviews(data);\n// // // // // // //     } catch (error) {\n// // // // // // //       console.error('Error fetching reviews:', error);\n// // // // // // //     }\n// // // // // // //   };\n\n// // // // // // //   useEffect(() => {\n// // // // // // //     fetchReviews();\n// // // // // // //   }, []);\n\n// // // // // // //   // Create a new review\n// // // // // // //   const handleCreate = async () => {\n// // // // // // //     try {\n// // // // // // //       const response = await fetch('http://localhost:5000/api/reviews', {\n// // // // // // //         method: 'POST',\n// // // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // // //         body: JSON.stringify(newReview),\n// // // // // // //       });\n// // // // // // //       const data = await response.json();\n// // // // // // //       setReviews([...reviews, data]);\n// // // // // // //       setNewReview({ user: '', comment: '', rating: 1 });\n// // // // // // //     } catch (error) {\n// // // // // // //       console.error('Error creating review:', error);\n// // // // // // //     }\n// // // // // // //   };\n\n// // // // // // //   // Update an existing review\n// // // // // // //   const handleUpdate = async () => {\n// // // // // // //     if (!editReview) return;\n\n// // // // // // //     try {\n// // // // // // //       const response = await fetch(`http://localhost:5000/api/reviews/${editReview._id}`, {\n// // // // // // //         method: 'PUT',\n// // // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // // //         body: JSON.stringify(editReview),\n// // // // // // //       });\n// // // // // // //       const data = await response.json();\n// // // // // // //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// // // // // // //       setEditReview(null);\n// // // // // // //     } catch (error) {\n// // // // // // //       console.error('Error updating review:', error);\n// // // // // // //     }\n// // // // // // //   };\n\n// // // // // // //   // Delete a review\n// // // // // // //   const handleDelete = async (id) => {\n// // // // // // //     try {\n// // // // // // //       await fetch(`http://localhost:5000/api/reviews/${id}`, { method: 'DELETE' });\n// // // // // // //       setReviews(reviews.filter(review => review._id !== id));\n// // // // // // //     } catch (error) {\n// // // // // // //       console.error('Error deleting review:', error);\n// // // // // // //     }\n// // // // // // //   };\n\n// // // // // // //   return (\n// // // // // // //     <footer className=\"bg-dark text-light py-3\">\n// // // // // // //       <div className=\"container\">\n// // // // // // //         <h4>User Reviews</h4>\n// // // // // // //         <ul className=\"list-unstyled\">\n// // // // // // //           {reviews.map(review => (\n// // // // // // //             <li key={review._id}>\n// // // // // // //               <div>\n// // // // // // //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// // // // // // //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// // // // // // //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// // // // // // //               </div>\n// // // // // // //             </li>\n// // // // // // //           ))}\n// // // // // // //         </ul>\n// // // // // // //         {editReview ? (\n// // // // // // //           <div>\n// // // // // // //             <h5>Edit Review</h5>\n// // // // // // //             <input\n// // // // // // //               type=\"text\"\n// // // // // // //               value={editReview.user}\n// // // // // // //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// // // // // // //               placeholder=\"User\"\n// // // // // // //             />\n// // // // // // //             <input\n// // // // // // //               type=\"text\"\n// // // // // // //               value={editReview.comment}\n// // // // // // //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// // // // // // //               placeholder=\"Comment\"\n// // // // // // //             />\n// // // // // // //             <input\n// // // // // // //               type=\"number\"\n// // // // // // //               min=\"1\"\n// // // // // // //               max=\"5\"\n// // // // // // //               value={editReview.rating}\n// // // // // // //               onChange={(e) => setEditReview({ ...editReview, rating: e.target.value })}\n// // // // // // //               placeholder=\"Rating\"\n// // // // // // //             />\n// // // // // // //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// // // // // // //           </div>\n// // // // // // //         ) : (\n// // // // // // //           <div>\n// // // // // // //             <h5>Add Review</h5>\n// // // // // // //             <input\n// // // // // // //               type=\"text\"\n// // // // // // //               value={newReview.user}\n// // // // // // //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// // // // // // //               placeholder=\"User\"\n// // // // // // //             />\n// // // // // // //             <input\n// // // // // // //               type=\"text\"\n// // // // // // //               value={newReview.comment}\n// // // // // // //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// // // // // // //               placeholder=\"Comment\"\n// // // // // // //             />\n// // // // // // //             <input\n// // // // // // //               type=\"number\"\n// // // // // // //               min=\"1\"\n// // // // // // //               max=\"5\"\n// // // // // // //               value={newReview.rating}\n// // // // // // //               onChange={(e) => setNewReview({ ...newReview, rating: e.target.value })}\n// // // // // // //               placeholder=\"Rating\"\n// // // // // // //             />\n// // // // // // //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// // // // // // //           </div>\n// // // // // // //         )}\n// // // // // // //       </div>\n// // // // // // //     </footer>\n// // // // // // //   );\n// // // // // // // }\n\n// // // // // // // export default Footer;\n\n// // // // // // import React, { useEffect, useState } from 'react';\n\n// // // // // // function Footer() {\n// // // // // //   const [reviews, setReviews] = useState([]);\n// // // // // //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// // // // // //   const [editReview, setEditReview] = useState(null);\n\n// // // // // //   // Fetch reviews from the backend\n// // // // // //   const fetchReviews = async () => {\n// // // // // //     try {\n// // // // // //       const response = await fetch('http://localhost:5000/api/reviews');\n// // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // //       const data = await response.json();\n// // // // // //       setReviews(data);\n// // // // // //     } catch (error) {\n// // // // // //       console.error('Error fetching reviews:', error);\n// // // // // //     }\n// // // // // //   };\n\n// // // // // //   useEffect(() => {\n// // // // // //     fetchReviews();\n// // // // // //   }, []);\n\n// // // // // //   // Create a new review\n// // // // // //   const handleCreate = async () => {\n// // // // // //     try {\n// // // // // //       const response = await fetch('http://localhost:5000/api/reviews', {\n// // // // // //         method: 'POST',\n// // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // //         body: JSON.stringify(newReview),\n// // // // // //       });\n// // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // //       const data = await response.json();\n// // // // // //       setReviews([...reviews, data]);\n// // // // // //       setNewReview({ user: '', comment: '', rating: 1 });\n// // // // // //     } catch (error) {\n// // // // // //       console.error('Error creating review:', error);\n// // // // // //     }\n// // // // // //   };\n\n// // // // // //   // Update an existing review\n// // // // // //   const handleUpdate = async () => {\n// // // // // //     if (!editReview) return;\n\n// // // // // //     try {\n// // // // // //       const response = await fetch(`http://localhost:5000/api/reviews/${editReview._id}`, {\n// // // // // //         method: 'PUT',\n// // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // //         body: JSON.stringify(editReview),\n// // // // // //       });\n// // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // //       const data = await response.json();\n// // // // // //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// // // // // //       setEditReview(null);\n// // // // // //     } catch (error) {\n// // // // // //       console.error('Error updating review:', error);\n// // // // // //     }\n// // // // // //   };\n\n// // // // // //   // Delete a review\n// // // // // //   const handleDelete = async (id) => {\n// // // // // //     try {\n// // // // // //       const response = await fetch(`http://localhost:5000/api/reviews/${id}`, { method: 'DELETE' });\n// // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // //       setReviews(reviews.filter(review => review._id !== id));\n// // // // // //     } catch (error) {\n// // // // // //       console.error('Error deleting review:', error);\n// // // // // //     }\n// // // // // //   };\n\n// // // // // //   return (\n// // // // // //     <footer className=\"bg-dark text-light py-3\">\n// // // // // //       <div className=\"container\">\n// // // // // //         <h4>User Reviews</h4>\n// // // // // //         <ul className=\"list-unstyled\">\n// // // // // //           {reviews.map(review => (\n// // // // // //             <li key={review._id} className=\"mb-2\">\n// // // // // //               <div>\n// // // // // //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// // // // // //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// // // // // //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// // // // // //               </div>\n// // // // // //             </li>\n// // // // // //           ))}\n// // // // // //         </ul>\n// // // // // //         {editReview ? (\n// // // // // //           <div>\n// // // // // //             <h5>Edit Review</h5>\n// // // // // //             <input\n// // // // // //               type=\"text\"\n// // // // // //               value={editReview.user}\n// // // // // //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// // // // // //               placeholder=\"User\"\n// // // // // //               className=\"form-control mb-2\"\n// // // // // //             />\n// // // // // //             <input\n// // // // // //               type=\"text\"\n// // // // // //               value={editReview.comment}\n// // // // // //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// // // // // //               placeholder=\"Comment\"\n// // // // // //               className=\"form-control mb-2\"\n// // // // // //             />\n// // // // // //             <input\n// // // // // //               type=\"number\"\n// // // // // //               min=\"1\"\n// // // // // //               max=\"5\"\n// // // // // //               value={editReview.rating}\n// // // // // //               onChange={(e) => setEditReview({ ...editReview, rating: Number(e.target.value) })}\n// // // // // //               placeholder=\"Rating\"\n// // // // // //               className=\"form-control mb-2\"\n// // // // // //             />\n// // // // // //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// // // // // //           </div>\n// // // // // //         ) : (\n// // // // // //           <div>\n// // // // // //             <h5>Add Review</h5>\n// // // // // //             <input\n// // // // // //               type=\"text\"\n// // // // // //               value={newReview.user}\n// // // // // //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// // // // // //               placeholder=\"User\"\n// // // // // //               className=\"form-control mb-2\"\n// // // // // //             />\n// // // // // //             <input\n// // // // // //               type=\"text\"\n// // // // // //               value={newReview.comment}\n// // // // // //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// // // // // //               placeholder=\"Comment\"\n// // // // // //               className=\"form-control mb-2\"\n// // // // // //             />\n// // // // // //             <input\n// // // // // //               type=\"number\"\n// // // // // //               min=\"1\"\n// // // // // //               max=\"5\"\n// // // // // //               value={newReview.rating}\n// // // // // //               onChange={(e) => setNewReview({ ...newReview, rating: Number(e.target.value) })}\n// // // // // //               placeholder=\"Rating\"\n// // // // // //               className=\"form-control mb-2\"\n// // // // // //             />\n// // // // // //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// // // // // //           </div>\n// // // // // //         )}\n// // // // // //       </div>\n// // // // // //     </footer>\n// // // // // //   );\n// // // // // // }\n\n// // // // // // export default Footer;\n\n// // // // // import React, { useEffect, useState } from 'react';\n\n// // // // // function Footer() {\n// // // // //   const [reviews, setReviews] = useState([]);\n// // // // //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// // // // //   const [editReview, setEditReview] = useState(null);\n\n// // // // //   // Fetch reviews from the backend\n// // // // //   const fetchReviews = async () => {\n// // // // //     try {\n// // // // //       const response = await fetch('http://localhost:5000/api');\n// // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // //       const data = await response.json();\n// // // // //       setReviews(data);\n// // // // //     } catch (error) {\n// // // // //       console.error('Error fetching reviews:', error);\n// // // // //     }\n// // // // //   };\n\n// // // // //   useEffect(() => {\n// // // // //     fetchReviews();\n// // // // //   }, []);\n\n// // // // //   // Create a new review\n// // // // //   const handleCreate = async () => {\n// // // // //     if (!newReview.user || !newReview.comment || newReview.rating < 1 || newReview.rating > 5) {\n// // // // //       alert('Please fill out all fields correctly.');\n// // // // //       return;\n// // // // //     }\n// // // // //     try {\n// // // // //       const response = await fetch('http://localhost:5000/api', {\n// // // // //         method: 'POST',\n// // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // //         body: JSON.stringify(newReview),\n// // // // //       });\n// // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // //       const data = await response.json();\n// // // // //       setReviews([...reviews, data]);\n// // // // //       setNewReview({ user: '', comment: '', rating: 1 });\n// // // // //     } catch (error) {\n// // // // //       console.error('Error creating review:', error);\n// // // // //     }\n// // // // //   };\n\n// // // // //   // Update an existing review\n// // // // //   const handleUpdate = async () => {\n// // // // //     if (!editReview || !editReview.user || !editReview.comment || editReview.rating < 1 || editReview.rating > 5) {\n// // // // //       alert('Please fill out all fields correctly.');\n// // // // //       return;\n// // // // //     }\n// // // // //     try {\n// // // // //       const response = await fetch(`http://localhost:5000/api/${editReview._id}`, {\n// // // // //         method: 'PUT',\n// // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // //         body: JSON.stringify(editReview),\n// // // // //       });\n// // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // //       const data = await response.json();\n// // // // //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// // // // //       setEditReview(null);\n// // // // //     } catch (error) {\n// // // // //       console.error('Error updating review:', error);\n// // // // //     }\n// // // // //   };\n\n// // // // //   // Delete a review\n// // // // //   const handleDelete = async (id) => {\n// // // // //     try {\n// // // // //       const response = await fetch(`http://localhost:5000/api/${id}`, { method: 'DELETE' });\n// // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // //       setReviews(reviews.filter(review => review._id !== id));\n// // // // //     } catch (error) {\n// // // // //       console.error('Error deleting review:', error);\n// // // // //     }\n// // // // //   };\n\n// // // // //   return (\n// // // // //     <footer className=\"bg-dark text-light py-3\">\n// // // // //       <div className=\"container\">\n// // // // //         <h4>User Reviews</h4>\n// // // // //         <ul className=\"list-unstyled\">\n// // // // //           {reviews.map(review => (\n// // // // //             <li key={review._id} className=\"mb-2\">\n// // // // //               <div>\n// // // // //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// // // // //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// // // // //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// // // // //               </div>\n// // // // //             </li>\n// // // // //           ))}\n// // // // //         </ul>\n// // // // //         {editReview ? (\n// // // // //           <div>\n// // // // //             <h5>Edit Review</h5>\n// // // // //             <input\n// // // // //               type=\"text\"\n// // // // //               value={editReview.user}\n// // // // //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// // // // //               placeholder=\"User\"\n// // // // //               className=\"form-control mb-2\"\n// // // // //             />\n// // // // //             <input\n// // // // //               type=\"text\"\n// // // // //               value={editReview.comment}\n// // // // //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// // // // //               placeholder=\"Comment\"\n// // // // //               className=\"form-control mb-2\"\n// // // // //             />\n// // // // //             <input\n// // // // //               type=\"number\"\n// // // // //               min=\"1\"\n// // // // //               max=\"5\"\n// // // // //               value={editReview.rating}\n// // // // //               onChange={(e) => setEditReview({ ...editReview, rating: Number(e.target.value) })}\n// // // // //               placeholder=\"Rating\"\n// // // // //               className=\"form-control mb-2\"\n// // // // //             />\n// // // // //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// // // // //           </div>\n// // // // //         ) : (\n// // // // //           <div>\n// // // // //             <h5>Add Review</h5>\n// // // // //             <input\n// // // // //               type=\"text\"\n// // // // //               value={newReview.user}\n// // // // //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// // // // //               placeholder=\"User\"\n// // // // //               className=\"form-control mb-2\"\n// // // // //             />\n// // // // //             <input\n// // // // //               type=\"text\"\n// // // // //               value={newReview.comment}\n// // // // //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// // // // //               placeholder=\"Comment\"\n// // // // //               className=\"form-control mb-2\"\n// // // // //             />\n// // // // //             <input\n// // // // //               type=\"number\"\n// // // // //               min=\"1\"\n// // // // //               max=\"5\"\n// // // // //               value={newReview.rating}\n// // // // //               onChange={(e) => setNewReview({ ...newReview, rating: Number(e.target.value) })}\n// // // // //               placeholder=\"Rating\"\n// // // // //               className=\"form-control mb-2\"\n// // // // //             />\n// // // // //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// // // // //           </div>\n// // // // //         )}\n// // // // //       </div>\n// // // // //     </footer>\n// // // // //   );\n// // // // // }\n\n// // // // // export default Footer;\n\n// // // // import React, { useEffect, useState } from 'react';\n\n// // // // function Footer() {\n// // // //   const [reviews, setReviews] = useState([]);\n// // // //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// // // //   const [editReview, setEditReview] = useState(null);\n\n// // // //   // Fetch reviews from the backend\n// // // //   const fetchReviews = async () => {\n// // // //     try {\n// // // //       const response = await fetch('http://localhost:5000/api');\n// // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // //       const data = await response.json();\n// // // //       console.log('Fetched reviews:', data); // Debugging\n// // // //       setReviews(data);\n// // // //     } catch (error) {\n// // // //       console.error('Error fetching reviews:', error);\n// // // //     }\n// // // //   };\n\n// // // //   useEffect(() => {\n// // // //     fetchReviews();\n// // // //   }, []);\n\n// // // //   // Create a new review\n// // // //   const handleCreate = async () => {\n// // // //     if (!newReview.user || !newReview.comment || newReview.rating < 1 || newReview.rating > 5) {\n// // // //       alert('Please fill out all fields correctly.');\n// // // //       return;\n// // // //     }\n// // // //     try {\n// // // //       const response = await fetch('http://localhost:5000/api', {\n// // // //         method: 'POST',\n// // // //         headers: { 'Content-Type': 'application/json' },\n// // // //         body: JSON.stringify(newReview),\n// // // //       });\n// // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // //       const data = await response.json();\n// // // //       console.log('Review added:', data); // Debugging\n// // // //       setReviews([...reviews, data]);\n// // // //       setNewReview({ user: '', comment: '', rating: 1 });\n// // // //     } catch (error) {\n// // // //       console.error('Error creating review:', error);\n// // // //     }\n// // // //   };\n\n// // // //   // Update an existing review\n// // // //   const handleUpdate = async () => {\n// // // //     if (!editReview || !editReview.user || !editReview.comment || editReview.rating < 1 || editReview.rating > 5) {\n// // // //       alert('Please fill out all fields correctly.');\n// // // //       return;\n// // // //     }\n// // // //     try {\n// // // //       const response = await fetch(`http://localhost:5000/api/${editReview._id}`, {\n// // // //         method: 'PUT',\n// // // //         headers: { 'Content-Type': 'application/json' },\n// // // //         body: JSON.stringify(editReview),\n// // // //       });\n// // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // //       const data = await response.json();\n// // // //       console.log('Review updated:', data); // Debugging\n// // // //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// // // //       setEditReview(null);\n// // // //     } catch (error) {\n// // // //       console.error('Error updating review:', error);\n// // // //     }\n// // // //   };\n\n// // // //   // Delete a review\n// // // //   const handleDelete = async (id) => {\n// // // //     try {\n// // // //       const response = await fetch(`http://localhost:5000/api/${id}`, { method: 'DELETE' });\n// // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // //       console.log('Review deleted:', id); // Debugging\n// // // //       setReviews(reviews.filter(review => review._id !== id));\n// // // //     } catch (error) {\n// // // //       console.error('Error deleting review:', error);\n// // // //     }\n// // // //   };\n\n// // // //   return (\n// // // //     <footer className=\"bg-dark text-light py-3\">\n// // // //       <div className=\"container\">\n// // // //         <h4>User Reviews</h4>\n// // // //         <ul className=\"list-unstyled\">\n// // // //           {reviews.map(review => (\n// // // //             <li key={review._id} className=\"mb-2\">\n// // // //               <div>\n// // // //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// // // //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// // // //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// // // //               </div>\n// // // //             </li>\n// // // //           ))}\n// // // //         </ul>\n// // // //         {editReview ? (\n// // // //           <div>\n// // // //             <h5>Edit Review</h5>\n// // // //             <input\n// // // //               type=\"text\"\n// // // //               value={editReview.user}\n// // // //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// // // //               placeholder=\"User\"\n// // // //               className=\"form-control mb-2\"\n// // // //             />\n// // // //             <input\n// // // //               type=\"text\"\n// // // //               value={editReview.comment}\n// // // //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// // // //               placeholder=\"Comment\"\n// // // //               className=\"form-control mb-2\"\n// // // //             />\n// // // //             <input\n// // // //               type=\"number\"\n// // // //               min=\"1\"\n// // // //               max=\"5\"\n// // // //               value={editReview.rating}\n// // // //               onChange={(e) => setEditReview({ ...editReview, rating: Number(e.target.value) })}\n// // // //               placeholder=\"Rating\"\n// // // //               className=\"form-control mb-2\"\n// // // //             />\n// // // //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// // // //           </div>\n// // // //         ) : (\n// // // //           <div>\n// // // //             <h5>Add Review</h5>\n// // // //             <input\n// // // //               type=\"text\"\n// // // //               value={newReview.user}\n// // // //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// // // //               placeholder=\"User\"\n// // // //               className=\"form-control mb-2\"\n// // // //             />\n// // // //             <input\n// // // //               type=\"text\"\n// // // //               value={newReview.comment}\n// // // //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// // // //               placeholder=\"Comment\"\n// // // //               className=\"form-control mb-2\"\n// // // //             />\n// // // //             <input\n// // // //               type=\"number\"\n// // // //               min=\"1\"\n// // // //               max=\"5\"\n// // // //               value={newReview.rating}\n// // // //               onChange={(e) => setNewReview({ ...newReview, rating: Number(e.target.value) })}\n// // // //               placeholder=\"Rating\"\n// // // //               className=\"form-control mb-2\"\n// // // //             />\n// // // //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// // // //           </div>\n// // // //         )}\n// // // //       </div>\n// // // //     </footer>\n// // // //   );\n// // // // }\n\n// // // // export default Footer;\n\n// // // import React, { useEffect, useState } from 'react';\n\n// // // function Footer() {\n// // //   const [reviews, setReviews] = useState([]);\n// // //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// // //   const [editReview, setEditReview] = useState(null);\n\n// // //   // Fetch reviews from the backend\n// // //   const fetchReviews = async () => {\n// // //     try {\n// // //       const response = await fetch('http://localhost:5000/api');\n// // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // //       const data = await response.json();\n// // //       setReviews(data);\n// // //     } catch (error) {\n// // //       console.error('Error fetching reviews:', error);\n// // //     }\n// // //   };\n\n// // //   useEffect(() => {\n// // //     fetchReviews();\n// // //   }, []);\n\n// // //   // Create a new review\n// // //   const handleCreate = async () => {\n// // //     if (!newReview.user || !newReview.comment || newReview.rating < 1 || newReview.rating > 5) {\n// // //       alert('Please fill out all fields correctly.');\n// // //       return;\n// // //     }\n// // //     try {\n// // //       const response = await fetch('http://localhost:5000/api', {\n// // //         method: 'POST',\n// // //         headers: { 'Content-Type': 'application/json' },\n// // //         body: JSON.stringify(newReview),\n// // //       });\n// // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // //       const data = await response.json();\n// // //       setReviews([...reviews, data]);\n// // //       setNewReview({ user: '', comment: '', rating: 1 });\n// // //     } catch (error) {\n// // //       console.error('Error creating review:', error);\n// // //     }\n// // //   };\n\n// // //   // Update an existing review\n// // //   const handleUpdate = async () => {\n// // //     if (!editReview || !editReview.user || !editReview.comment || editReview.rating < 1 || editReview.rating > 5) {\n// // //       alert('Please fill out all fields correctly.');\n// // //       return;\n// // //     }\n// // //     try {\n// // //       const response = await fetch(`http://localhost:5000/api/${editReview._id}`, {\n// // //         method: 'PUT',\n// // //         headers: { 'Content-Type': 'application/json' },\n// // //         body: JSON.stringify(editReview),\n// // //       });\n// // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // //       const data = await response.json();\n// // //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// // //       setEditReview(null);\n// // //     } catch (error) {\n// // //       console.error('Error updating review:', error);\n// // //     }\n// // //   };\n\n// // //   // Delete a review\n// // //   const handleDelete = async (id) => {\n// // //     try {\n// // //       const response = await fetch(`http://localhost:5000/api/${id}`, { method: 'DELETE' });\n// // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // //       setReviews(reviews.filter(review => review._id !== id));\n// // //     } catch (error) {\n// // //       console.error('Error deleting review:', error);\n// // //     }\n// // //   };\n\n// // //   return (\n// // //     <footer className=\"bg-dark text-light py-3\">\n// // //       <div className=\"container\">\n// // //         <h4>User Reviews</h4>\n// // //         <ul className=\"list-unstyled\">\n// // //           {reviews.map(review => (\n// // //             <li key={review._id} className=\"mb-2\">\n// // //               <div>\n// // //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// // //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// // //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// // //               </div>\n// // //             </li>\n// // //           ))}\n// // //         </ul>\n// // //         {editReview ? (\n// // //           <div>\n// // //             <h5>Edit Review</h5>\n// // //             <input\n// // //               type=\"text\"\n// // //               value={editReview.user}\n// // //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// // //               placeholder=\"User\"\n// // //               className=\"form-control mb-2\"\n// // //             />\n// // //             <input\n// // //               type=\"text\"\n// // //               value={editReview.comment}\n// // //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// // //               placeholder=\"Comment\"\n// // //               className=\"form-control mb-2\"\n// // //             />\n// // //             <input\n// // //               type=\"number\"\n// // //               min=\"1\"\n// // //               max=\"5\"\n// // //               value={editReview.rating}\n// // //               onChange={(e) => setEditReview({ ...editReview, rating: Number(e.target.value) })}\n// // //               placeholder=\"Rating\"\n// // //               className=\"form-control mb-2\"\n// // //             />\n// // //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// // //           </div>\n// // //         ) : (\n// // //           <div>\n// // //             <h5>Add Review</h5>\n// // //             <input\n// // //               type=\"text\"\n// // //               value={newReview.user}\n// // //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// // //               placeholder=\"User\"\n// // //               className=\"form-control mb-2\"\n// // //             />\n// // //             <input\n// // //               type=\"text\"\n// // //               value={newReview.comment}\n// // //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// // //               placeholder=\"Comment\"\n// // //               className=\"form-control mb-2\"\n// // //             />\n// // //             <input\n// // //               type=\"number\"\n// // //               min=\"1\"\n// // //               max=\"5\"\n// // //               value={newReview.rating}\n// // //               onChange={(e) => setNewReview({ ...newReview, rating: Number(e.target.value) })}\n// // //               placeholder=\"Rating\"\n// // //               className=\"form-control mb-2\"\n// // //             />\n// // //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// // //           </div>\n// // //         )}\n// // //       </div>\n// // //     </footer>\n// // //   );\n// // // }\n\n// // // export default Footer;\n// // import React, { useEffect, useState } from 'react';\n\n// // function Footer() {\n// //   const [reviews, setReviews] = useState([]);\n// //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// //   const [editReview, setEditReview] = useState(null);\n\n// //   // Fetch reviews from the backend\n// //   const fetchReviews = async () => {\n// //     try {\n// //       const response = await fetch('http://localhost:5000/api/reviews');\n// //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// //       const data = await response.json();\n// //       setReviews(data);\n// //     } catch (error) {\n// //       console.error('Error fetching reviews:', error);\n// //     }\n// //   };\n\n// //   useEffect(() => {\n// //     fetchReviews();\n// //   }, []);\n\n// //   // Create a new review\n// //   const handleCreate = async () => {\n// //     if (!newReview.user || !newReview.comment || newReview.rating < 1 || newReview.rating > 5) {\n// //       alert('Please fill out all fields correctly.');\n// //       return;\n// //     }\n// //     try {\n// //       const response = await fetch('http://localhost:5000/api/reviews', {\n// //         method: 'POST',\n// //         headers: { 'Content-Type': 'application/json' },\n// //         body: JSON.stringify(newReview),\n// //       });\n// //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// //       const data = await response.json();\n// //       setReviews([...reviews, data]);\n// //       setNewReview({ user: '', comment: '', rating: 1 });\n// //     } catch (error) {\n// //       console.error('Error creating review:', error);\n// //     }\n// //   };\n\n// //   // Update an existing review\n// //   const handleUpdate = async () => {\n// //     if (!editReview || !editReview.user || !editReview.comment || editReview.rating < 1 || editReview.rating > 5) {\n// //       alert('Please fill out all fields correctly.');\n// //       return;\n// //     }\n// //     try {\n// //       const response = await fetch(`http://localhost:5000/api/reviews/${editReview._id}`, {\n// //         method: 'PUT',\n// //         headers: { 'Content-Type': 'application/json' },\n// //         body: JSON.stringify(editReview),\n// //       });\n// //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// //       const data = await response.json();\n// //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// //       setEditReview(null);\n// //     } catch (error) {\n// //       console.error('Error updating review:', error);\n// //     }\n// //   };\n\n// //   // Delete a review\n// //   const handleDelete = async (id) => {\n// //     try {\n// //       const response = await fetch(`http://localhost:5000/api/reviews/${id}`, { method: 'DELETE' });\n// //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// //       setReviews(reviews.filter(review => review._id !== id));\n// //     } catch (error) {\n// //       console.error('Error deleting review:', error);\n// //     }\n// //   };\n\n// //   return (\n// //     <footer className=\"bg-dark text-light py-3\">\n// //       <div className=\"container\">\n// //         <h4>User Reviews</h4>\n// //         <ul className=\"list-unstyled\">\n// //           {reviews.map(review => (\n// //             <li key={review._id} className=\"mb-2\">\n// //               <div>\n// //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// //               </div>\n// //             </li>\n// //           ))}\n// //         </ul>\n// //         {editReview ? (\n// //           <div>\n// //             <h5>Edit Review</h5>\n// //             <input\n// //               type=\"text\"\n// //               value={editReview.user}\n// //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// //               placeholder=\"User\"\n// //               className=\"form-control mb-2\"\n// //             />\n// //             <input\n// //               type=\"text\"\n// //               value={editReview.comment}\n// //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// //               placeholder=\"Comment\"\n// //               className=\"form-control mb-2\"\n// //             />\n// //             <input\n// //               type=\"number\"\n// //               min=\"1\"\n// //               max=\"5\"\n// //               value={editReview.rating}\n// //               onChange={(e) => setEditReview({ ...editReview, rating: Number(e.target.value) })}\n// //               placeholder=\"Rating\"\n// //               className=\"form-control mb-2\"\n// //             />\n// //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// //             <button onClick={() => setEditReview(null)} className=\"btn btn-secondary ms-2\">Cancel</button>\n// //           </div>\n// //         ) : (\n// //           <div>\n// //             <h5>Add Review</h5>\n// //             <input\n// //               type=\"text\"\n// //               value={newReview.user}\n// //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// //               placeholder=\"User\"\n// //               className=\"form-control mb-2\"\n// //             />\n// //             <input\n// //               type=\"text\"\n// //               value={newReview.comment}\n// //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// //               placeholder=\"Comment\"\n// //               className=\"form-control mb-2\"\n// //             />\n// //             <input\n// //               type=\"number\"\n// //               min=\"1\"\n// //               max=\"5\"\n// //               value={newReview.rating}\n// //               onChange={(e) => setNewReview({ ...newReview, rating: Number(e.target.value) })}\n// //               placeholder=\"Rating\"\n// //               className=\"form-control mb-2\"\n// //             />\n// //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// //           </div>\n// //         )}\n// //       </div>\n// //     </footer>\n// //   );\n// // }\n\n// // export default Footer;\n\n// import React, { useEffect, useState } from 'react';\n\n// function Footer() {\n//   const [reviews, setReviews] = useState([]);\n//   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n//   const [editReview, setEditReview] = useState(null);\n\n//   // Fetch reviews from the backend\n//   const fetchReviews = async () => {\n//     try {\n//       const response = await fetch('http://localhost:5000/api/reviews');\n//       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n//       const data = await response.json();\n//       setReviews(data);\n//     } catch (error) {\n//       console.error('Error fetching reviews:', error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchReviews();\n//   }, []);\n\n//   // Create a new review\n//   const handleCreate = async () => {\n//     if (!newReview.user || !newReview.comment || newReview.rating < 1 || newReview.rating > 5) {\n//       alert('Please fill out all fields correctly.');\n//       return;\n//     }\n//     try {\n//       const response = await fetch('http://localhost:5000/api/reviews', {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify(newReview),\n//       });\n//       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n//       const data = await response.json();\n//       setReviews([...reviews, data]);\n//       setNewReview({ user: '', comment: '', rating: 1 });\n//     } catch (error) {\n//       console.error('Error creating review:', error);\n//     }\n//   };\n\n//   // Update an existing review\n//   const handleUpdate = async () => {\n//     if (!editReview || !editReview.user || !editReview.comment || editReview.rating < 1 || editReview.rating > 5) {\n//       alert('Please fill out all fields correctly.');\n//       return;\n//     }\n//     try {\n//       const response = await fetch(`http://localhost:5000/api/reviews/${editReview._id}`, {\n//         method: 'PUT',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify(editReview),\n//       });\n//       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n//       const data = await response.json();\n//       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n//       setEditReview(null);\n//     } catch (error) {\n//       console.error('Error updating review:', error);\n//     }\n//   };\n\n//   // Delete a review\n//   const handleDelete = async (id) => {\n//     try {\n//       const response = await fetch(`http://localhost:5000/api/reviews/${id}`, { method: 'DELETE' });\n//       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n//       setReviews(reviews.filter(review => review._id !== id));\n//     } catch (error) {\n//       console.error('Error deleting review:', error);\n//     }\n//   };\n\n//   return (\n//     <footer className=\"bg-dark text-light py-3\">\n//       <div className=\"container\">\n//         <h4>User Reviews</h4>\n//         <ul className=\"list-unstyled\">\n//           {reviews.map(review => (\n//             <li key={review._id} className=\"mb-2\">\n//               <div>\n//                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n//                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n//                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n//               </div>\n//             </li>\n//           ))}\n//         </ul>\n//         {editReview ? (\n//           <div>\n//             <h5>Edit Review</h5>\n//             <input\n//               type=\"text\"\n//               value={editReview.user}\n//               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n//               placeholder=\"User\"\n//               className=\"form-control mb-2\"\n//             />\n//             <input\n//               type=\"text\"\n//               value={editReview.comment}\n//               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n//               placeholder=\"Comment\"\n//               className=\"form-control mb-2\"\n//             />\n//             <input\n//               type=\"number\"\n//               min=\"1\"\n//               max=\"5\"\n//               value={editReview.rating}\n//               onChange={(e) => setEditReview({ ...editReview, rating: Number(e.target.value) })}\n//               placeholder=\"Rating\"\n//               className=\"form-control mb-2\"\n//             />\n//             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n//             <button onClick={() => setEditReview(null)} className=\"btn btn-secondary ms-2\">Cancel</button>\n//           </div>\n//         ) : (\n//           <div>\n//             <h5>Add Review</h5>\n//             <input\n//               type=\"text\"\n//               value={newReview.user}\n//               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n//               placeholder=\"User\"\n//               className=\"form-control mb-2\"\n//             />\n//             <input\n//               type=\"text\"\n//               value={newReview.comment}\n//               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n//               placeholder=\"Comment\"\n//               className=\"form-control mb-2\"\n//             />\n//             <input\n//               type=\"number\"\n//               min=\"1\"\n//               max=\"5\"\n//               value={newReview.rating}\n//               onChange={(e) => setNewReview({ ...newReview, rating: Number(e.target.value) })}\n//               placeholder=\"Rating\"\n//               className=\"form-control mb-2\"\n//             />\n//             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n//           </div>\n//         )}\n//       </div>\n//     </footer>\n//   );\n// }\n\n// export default Footer;\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Footer = () => {\n  _s();\n  const [userId, setUserId] = useState('');\n  const [foodItemId, setFoodItemId] = useState('');\n  const [rating, setRating] = useState('');\n  const [review, setReview] = useState('');\n  const [reviews, setReviews] = useState([]);\n  const [editId, setEditId] = useState(null);\n  useEffect(() => {\n    // Fetch all reviews on component mount\n    const fetchReviews = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/reviews');\n        const data = await response.json();\n        setReviews(data);\n      } catch (error) {\n        console.error('Error fetching reviews:', error);\n      }\n    };\n    fetchReviews();\n  }, []);\n  const handleAddReview = async e => {\n    e.preventDefault();\n    try {\n      const newReview = {\n        userId,\n        foodItemId,\n        rating,\n        review\n      };\n      const response = await fetch('http://localhost:5000/api/reviews', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newReview)\n      });\n      if (!response.ok) throw new Error('Failed to add review');\n      const addedReview = await response.json();\n      setUserId('');\n      setFoodItemId('');\n      setRating('');\n      setReview('');\n      // Refresh reviews\n      const fetchResponse = await fetch('http://localhost:5000/api/reviews');\n      const data = await fetchResponse.json();\n      setReviews(data);\n    } catch (error) {\n      console.error('Error adding review:', error);\n    }\n  };\n  const handleEditReview = async e => {\n    e.preventDefault();\n    try {\n      const updatedReview = {\n        userId,\n        foodItemId,\n        rating,\n        review\n      };\n      const response = await fetch(`http://localhost:5000/api/reviews/${editId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedReview)\n      });\n      if (!response.ok) throw new Error('Failed to update review');\n      const updatedReviewData = await response.json();\n      setUserId('');\n      setFoodItemId('');\n      setRating('');\n      setReview('');\n      setEditId(null);\n      // Refresh reviews\n      const fetchResponse = await fetch('http://localhost:5000/api/reviews');\n      const data = await fetchResponse.json();\n      setReviews(data);\n    } catch (error) {\n      console.error('Error updating review:', error);\n    }\n  };\n  const handleDeleteReview = async id => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/reviews/${id}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) throw new Error('Failed to delete review');\n      // Refresh reviews\n      const fetchResponse = await fetch('http://localhost:5000/api/reviews');\n      const data = await fetchResponse.json();\n      setReviews(data);\n    } catch (error) {\n      console.error('Error deleting review:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"footer\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Review Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1341,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: editId ? handleEditReview : handleAddReview,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"User ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1344,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userId,\n          onChange: e => setUserId(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1345,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1343,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Food Item ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1353,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: foodItemId,\n          onChange: e => setFoodItemId(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1354,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1352,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Rating:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1362,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: rating,\n          onChange: e => setRating(e.target.value),\n          min: \"1\",\n          max: \"5\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1363,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1361,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Review:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1373,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: review,\n          onChange: e => setReview(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1374,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1372,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: editId ? 'Update Review' : 'Add Review'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1380,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1342,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Existing Reviews\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1382,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: reviews.map(review => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"User ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1386,\n            columnNumber: 16\n          }, this), \" \", review.userId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1386,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Food Item ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1387,\n            columnNumber: 16\n          }, this), \" \", review.foodItemId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1387,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Rating:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1388,\n            columnNumber: 16\n          }, this), \" \", review.rating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1388,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Review:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1389,\n            columnNumber: 16\n          }, this), \" \", review.review]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1389,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setEditId(review._id);\n            setUserId(review.userId);\n            setFoodItemId(review.foodItemId);\n            setRating(review.rating);\n            setReview(review.review);\n          },\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1390,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteReview(review._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1397,\n          columnNumber: 13\n        }, this)]\n      }, review._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1385,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1383,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1340,\n    columnNumber: 5\n  }, this);\n};\n_s(Footer, \"AVKc1CXAHLErmS8EYtTQAJ5hJsc=\");\n_c = Footer;\nexport default Footer;\nvar _c;\n$RefreshReg$(_c, \"Footer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Footer","_s","userId","setUserId","foodItemId","setFoodItemId","rating","setRating","review","setReview","reviews","setReviews","editId","setEditId","fetchReviews","response","fetch","data","json","error","console","handleAddReview","e","preventDefault","newReview","method","headers","body","JSON","stringify","ok","Error","addedReview","fetchResponse","handleEditReview","updatedReview","updatedReviewData","handleDeleteReview","id","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","min","max","map","onClick","_id","_c","$RefreshReg$"],"sources":["C:/Users/ruhan/Documents/gofood/mernapp/src/components/Footer.js"],"sourcesContent":["// // // // // // // // // import React from 'react'\n// // // // // // // // // import {link} from 'react-router-dom'\n// // // // // // // // // export default function Footer() {\n// // // // // // // // //   return (\n// // // // // // // // //     <div><div className=\"container\">\n// // // // // // // // //     <footer className=\"d-flex flex-wrap justify-content-between align-items-center py-3 my-4 border-top\">\n// // // // // // // // //       <div className=\"col-md-4 d-flex align-items-center\">\n// // // // // // // // //         <link to=\"/\" className=\"mb-3 me-2 mb-md-0 text-muted text-decoration-none lh-1\">\n// // // // // // // // //         </link>\n// // // // // // // // //         <span className=\"text-muted\">Â© 2024<i>GoFood</i>, Inc</span>\n// // // // // // // // //       </div>\n  \n// // // // // // // // //       {/* <ul className=\"nav col-md-4 justify-content-end list-unstyled d-flex\">\n// // // // // // // // //         <li className=\"ms-3\"><a className=\"text-muted\" href=\"/\"><svg className=\"bi\" width=\"24\" height=\"24\"><use ></use></svg></a></li>\n// // // // // // // // //         <li className=\"ms-3\"><a className=\"text-muted\" href=\"/\"><svg className=\"bi\" width=\"24\" height=\"24\"><use ></use></svg></a></li>\n// // // // // // // // //         <li className=\"ms-3\"><a className=\"text-muted\" href=\"/\"><svg className=\"bi\" width=\"24\" height=\"24\"><use></use></svg></a></li>\n// // // // // // // // //       </ul> */}\n// // // // // // // // //     </footer>\n// // // // // // // // //   </div>\n// // // // // // // // //   </div>\n// // // // // // // // //   )\n// // // // // // // // // }\n\n// // // // // // // // import React, { useEffect, useState } from 'react';\n\n// // // // // // // // function Footer() {\n// // // // // // // //   const [reviews, setReviews] = useState([]);\n// // // // // // // //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// // // // // // // //   const [editReview, setEditReview] = useState(null);\n\n// // // // // // // //   // Fetch reviews from the backend\n// // // // // // // //   const fetchReviews = async () => {\n// // // // // // // //     try {\n// // // // // // // //       const response = await fetch('http://localhost:5000/api/reviews');\n// // // // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // // // //       const data = await response.json();\n// // // // // // // //       setReviews(data);\n// // // // // // // //     } catch (error) {\n// // // // // // // //       console.error('Error fetching reviews:', error);\n// // // // // // // //     }\n// // // // // // // //   };\n\n// // // // // // // //   useEffect(() => {\n// // // // // // // //     fetchReviews();\n// // // // // // // //   }, []);\n\n// // // // // // // //   // Create a new review\n// // // // // // // //   const handleCreate = async () => {\n// // // // // // // //     try {\n// // // // // // // //       const response = await fetch('http://localhost:5000/api/reviews', {\n// // // // // // // //         method: 'POST',\n// // // // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // // // //         body: JSON.stringify(newReview),\n// // // // // // // //       });\n// // // // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // // // //       const data = await response.json();\n// // // // // // // //       setReviews([...reviews, data]);\n// // // // // // // //       setNewReview({ user: '', comment: '', rating: 1 });\n// // // // // // // //     } catch (error) {\n// // // // // // // //       console.error('Error creating review:', error);\n// // // // // // // //     }\n// // // // // // // //   };\n\n// // // // // // // //   // Update an existing review\n// // // // // // // //   const handleUpdate = async () => {\n// // // // // // // //     if (!editReview) return;\n\n// // // // // // // //     try {\n// // // // // // // //       const response = await fetch(`http://localhost:5000/api/reviews/${editReview._id}`, {\n// // // // // // // //         method: 'PUT',\n// // // // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // // // //         body: JSON.stringify(editReview),\n// // // // // // // //       });\n// // // // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // // // //       const data = await response.json();\n// // // // // // // //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// // // // // // // //       setEditReview(null);\n// // // // // // // //     } catch (error) {\n// // // // // // // //       console.error('Error updating review:', error);\n// // // // // // // //     }\n// // // // // // // //   };\n\n// // // // // // // //   // Delete a review\n// // // // // // // //   const handleDelete = async (id) => {\n// // // // // // // //     try {\n// // // // // // // //       const response = await fetch(`http://localhost:5000/api/reviews/${id}`, { method: 'DELETE' });\n// // // // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // // // //       setReviews(reviews.filter(review => review._id !== id));\n// // // // // // // //     } catch (error) {\n// // // // // // // //       console.error('Error deleting review:', error);\n// // // // // // // //     }\n// // // // // // // //   };\n\n// // // // // // // //   return (\n// // // // // // // //     <footer className=\"bg-dark text-light py-3\">\n// // // // // // // //       <div className=\"container\">\n// // // // // // // //         <h4>User Reviews</h4>\n// // // // // // // //         <ul className=\"list-unstyled\">\n// // // // // // // //           {reviews.map(review => (\n// // // // // // // //             <li key={review._id} className=\"mb-2\">\n// // // // // // // //               <div>\n// // // // // // // //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// // // // // // // //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// // // // // // // //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// // // // // // // //               </div>\n// // // // // // // //             </li>\n// // // // // // // //           ))}\n// // // // // // // //         </ul>\n// // // // // // // //         {editReview ? (\n// // // // // // // //           <div>\n// // // // // // // //             <h5>Edit Review</h5>\n// // // // // // // //             <input\n// // // // // // // //               type=\"text\"\n// // // // // // // //               value={editReview.user}\n// // // // // // // //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// // // // // // // //               placeholder=\"User\"\n// // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // //             />\n// // // // // // // //             <input\n// // // // // // // //               type=\"text\"\n// // // // // // // //               value={editReview.comment}\n// // // // // // // //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// // // // // // // //               placeholder=\"Comment\"\n// // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // //             />\n// // // // // // // //             <input\n// // // // // // // //               type=\"number\"\n// // // // // // // //               min=\"1\"\n// // // // // // // //               max=\"5\"\n// // // // // // // //               value={editReview.rating}\n// // // // // // // //               onChange={(e) => setEditReview({ ...editReview, rating: Number(e.target.value) })}\n// // // // // // // //               placeholder=\"Rating\"\n// // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // //             />\n// // // // // // // //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// // // // // // // //           </div>\n// // // // // // // //         ) : (\n// // // // // // // //           <div>\n// // // // // // // //             <h5>Add Review</h5>\n// // // // // // // //             <input\n// // // // // // // //               type=\"text\"\n// // // // // // // //               value={newReview.user}\n// // // // // // // //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// // // // // // // //               placeholder=\"User\"\n// // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // //             />\n// // // // // // // //             <input\n// // // // // // // //               type=\"text\"\n// // // // // // // //               value={newReview.comment}\n// // // // // // // //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// // // // // // // //               placeholder=\"Comment\"\n// // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // //             />\n// // // // // // // //             <input\n// // // // // // // //               type=\"number\"\n// // // // // // // //               min=\"1\"\n// // // // // // // //               max=\"5\"\n// // // // // // // //               value={newReview.rating}\n// // // // // // // //               onChange={(e) => setNewReview({ ...newReview, rating: Number(e.target.value) })}\n// // // // // // // //               placeholder=\"Rating\"\n// // // // // // // //               className=\"form-control mb-2\"\n// // // // // // // //             />\n// // // // // // // //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// // // // // // // //           </div>\n// // // // // // // //         )}\n// // // // // // // //       </div>\n// // // // // // // //     </footer>\n// // // // // // // //   );\n// // // // // // // // }\n\n// // // // // // // // export default Footer;\n\n\n// // // // // // // import React, { useEffect, useState } from 'react';\n\n// // // // // // // function Footer() {\n// // // // // // //   const [reviews, setReviews] = useState([]);\n// // // // // // //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// // // // // // //   const [editReview, setEditReview] = useState(null);\n\n// // // // // // //   // Fetch reviews from the backend\n// // // // // // //   const fetchReviews = async () => {\n// // // // // // //     try {\n// // // // // // //       const response = await fetch('http://localhost:5000/api/reviews');\n// // // // // // //       const data = await response.json();\n// // // // // // //       setReviews(data);\n// // // // // // //     } catch (error) {\n// // // // // // //       console.error('Error fetching reviews:', error);\n// // // // // // //     }\n// // // // // // //   };\n\n// // // // // // //   useEffect(() => {\n// // // // // // //     fetchReviews();\n// // // // // // //   }, []);\n\n// // // // // // //   // Create a new review\n// // // // // // //   const handleCreate = async () => {\n// // // // // // //     try {\n// // // // // // //       const response = await fetch('http://localhost:5000/api/reviews', {\n// // // // // // //         method: 'POST',\n// // // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // // //         body: JSON.stringify(newReview),\n// // // // // // //       });\n// // // // // // //       const data = await response.json();\n// // // // // // //       setReviews([...reviews, data]);\n// // // // // // //       setNewReview({ user: '', comment: '', rating: 1 });\n// // // // // // //     } catch (error) {\n// // // // // // //       console.error('Error creating review:', error);\n// // // // // // //     }\n// // // // // // //   };\n\n// // // // // // //   // Update an existing review\n// // // // // // //   const handleUpdate = async () => {\n// // // // // // //     if (!editReview) return;\n\n// // // // // // //     try {\n// // // // // // //       const response = await fetch(`http://localhost:5000/api/reviews/${editReview._id}`, {\n// // // // // // //         method: 'PUT',\n// // // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // // //         body: JSON.stringify(editReview),\n// // // // // // //       });\n// // // // // // //       const data = await response.json();\n// // // // // // //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// // // // // // //       setEditReview(null);\n// // // // // // //     } catch (error) {\n// // // // // // //       console.error('Error updating review:', error);\n// // // // // // //     }\n// // // // // // //   };\n\n// // // // // // //   // Delete a review\n// // // // // // //   const handleDelete = async (id) => {\n// // // // // // //     try {\n// // // // // // //       await fetch(`http://localhost:5000/api/reviews/${id}`, { method: 'DELETE' });\n// // // // // // //       setReviews(reviews.filter(review => review._id !== id));\n// // // // // // //     } catch (error) {\n// // // // // // //       console.error('Error deleting review:', error);\n// // // // // // //     }\n// // // // // // //   };\n\n// // // // // // //   return (\n// // // // // // //     <footer className=\"bg-dark text-light py-3\">\n// // // // // // //       <div className=\"container\">\n// // // // // // //         <h4>User Reviews</h4>\n// // // // // // //         <ul className=\"list-unstyled\">\n// // // // // // //           {reviews.map(review => (\n// // // // // // //             <li key={review._id}>\n// // // // // // //               <div>\n// // // // // // //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// // // // // // //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// // // // // // //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// // // // // // //               </div>\n// // // // // // //             </li>\n// // // // // // //           ))}\n// // // // // // //         </ul>\n// // // // // // //         {editReview ? (\n// // // // // // //           <div>\n// // // // // // //             <h5>Edit Review</h5>\n// // // // // // //             <input\n// // // // // // //               type=\"text\"\n// // // // // // //               value={editReview.user}\n// // // // // // //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// // // // // // //               placeholder=\"User\"\n// // // // // // //             />\n// // // // // // //             <input\n// // // // // // //               type=\"text\"\n// // // // // // //               value={editReview.comment}\n// // // // // // //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// // // // // // //               placeholder=\"Comment\"\n// // // // // // //             />\n// // // // // // //             <input\n// // // // // // //               type=\"number\"\n// // // // // // //               min=\"1\"\n// // // // // // //               max=\"5\"\n// // // // // // //               value={editReview.rating}\n// // // // // // //               onChange={(e) => setEditReview({ ...editReview, rating: e.target.value })}\n// // // // // // //               placeholder=\"Rating\"\n// // // // // // //             />\n// // // // // // //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// // // // // // //           </div>\n// // // // // // //         ) : (\n// // // // // // //           <div>\n// // // // // // //             <h5>Add Review</h5>\n// // // // // // //             <input\n// // // // // // //               type=\"text\"\n// // // // // // //               value={newReview.user}\n// // // // // // //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// // // // // // //               placeholder=\"User\"\n// // // // // // //             />\n// // // // // // //             <input\n// // // // // // //               type=\"text\"\n// // // // // // //               value={newReview.comment}\n// // // // // // //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// // // // // // //               placeholder=\"Comment\"\n// // // // // // //             />\n// // // // // // //             <input\n// // // // // // //               type=\"number\"\n// // // // // // //               min=\"1\"\n// // // // // // //               max=\"5\"\n// // // // // // //               value={newReview.rating}\n// // // // // // //               onChange={(e) => setNewReview({ ...newReview, rating: e.target.value })}\n// // // // // // //               placeholder=\"Rating\"\n// // // // // // //             />\n// // // // // // //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// // // // // // //           </div>\n// // // // // // //         )}\n// // // // // // //       </div>\n// // // // // // //     </footer>\n// // // // // // //   );\n// // // // // // // }\n\n// // // // // // // export default Footer;\n\n// // // // // // import React, { useEffect, useState } from 'react';\n\n// // // // // // function Footer() {\n// // // // // //   const [reviews, setReviews] = useState([]);\n// // // // // //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// // // // // //   const [editReview, setEditReview] = useState(null);\n\n// // // // // //   // Fetch reviews from the backend\n// // // // // //   const fetchReviews = async () => {\n// // // // // //     try {\n// // // // // //       const response = await fetch('http://localhost:5000/api/reviews');\n// // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // //       const data = await response.json();\n// // // // // //       setReviews(data);\n// // // // // //     } catch (error) {\n// // // // // //       console.error('Error fetching reviews:', error);\n// // // // // //     }\n// // // // // //   };\n\n// // // // // //   useEffect(() => {\n// // // // // //     fetchReviews();\n// // // // // //   }, []);\n\n// // // // // //   // Create a new review\n// // // // // //   const handleCreate = async () => {\n// // // // // //     try {\n// // // // // //       const response = await fetch('http://localhost:5000/api/reviews', {\n// // // // // //         method: 'POST',\n// // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // //         body: JSON.stringify(newReview),\n// // // // // //       });\n// // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // //       const data = await response.json();\n// // // // // //       setReviews([...reviews, data]);\n// // // // // //       setNewReview({ user: '', comment: '', rating: 1 });\n// // // // // //     } catch (error) {\n// // // // // //       console.error('Error creating review:', error);\n// // // // // //     }\n// // // // // //   };\n\n// // // // // //   // Update an existing review\n// // // // // //   const handleUpdate = async () => {\n// // // // // //     if (!editReview) return;\n\n// // // // // //     try {\n// // // // // //       const response = await fetch(`http://localhost:5000/api/reviews/${editReview._id}`, {\n// // // // // //         method: 'PUT',\n// // // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // // //         body: JSON.stringify(editReview),\n// // // // // //       });\n// // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // //       const data = await response.json();\n// // // // // //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// // // // // //       setEditReview(null);\n// // // // // //     } catch (error) {\n// // // // // //       console.error('Error updating review:', error);\n// // // // // //     }\n// // // // // //   };\n\n// // // // // //   // Delete a review\n// // // // // //   const handleDelete = async (id) => {\n// // // // // //     try {\n// // // // // //       const response = await fetch(`http://localhost:5000/api/reviews/${id}`, { method: 'DELETE' });\n// // // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // // //       setReviews(reviews.filter(review => review._id !== id));\n// // // // // //     } catch (error) {\n// // // // // //       console.error('Error deleting review:', error);\n// // // // // //     }\n// // // // // //   };\n\n// // // // // //   return (\n// // // // // //     <footer className=\"bg-dark text-light py-3\">\n// // // // // //       <div className=\"container\">\n// // // // // //         <h4>User Reviews</h4>\n// // // // // //         <ul className=\"list-unstyled\">\n// // // // // //           {reviews.map(review => (\n// // // // // //             <li key={review._id} className=\"mb-2\">\n// // // // // //               <div>\n// // // // // //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// // // // // //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// // // // // //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// // // // // //               </div>\n// // // // // //             </li>\n// // // // // //           ))}\n// // // // // //         </ul>\n// // // // // //         {editReview ? (\n// // // // // //           <div>\n// // // // // //             <h5>Edit Review</h5>\n// // // // // //             <input\n// // // // // //               type=\"text\"\n// // // // // //               value={editReview.user}\n// // // // // //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// // // // // //               placeholder=\"User\"\n// // // // // //               className=\"form-control mb-2\"\n// // // // // //             />\n// // // // // //             <input\n// // // // // //               type=\"text\"\n// // // // // //               value={editReview.comment}\n// // // // // //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// // // // // //               placeholder=\"Comment\"\n// // // // // //               className=\"form-control mb-2\"\n// // // // // //             />\n// // // // // //             <input\n// // // // // //               type=\"number\"\n// // // // // //               min=\"1\"\n// // // // // //               max=\"5\"\n// // // // // //               value={editReview.rating}\n// // // // // //               onChange={(e) => setEditReview({ ...editReview, rating: Number(e.target.value) })}\n// // // // // //               placeholder=\"Rating\"\n// // // // // //               className=\"form-control mb-2\"\n// // // // // //             />\n// // // // // //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// // // // // //           </div>\n// // // // // //         ) : (\n// // // // // //           <div>\n// // // // // //             <h5>Add Review</h5>\n// // // // // //             <input\n// // // // // //               type=\"text\"\n// // // // // //               value={newReview.user}\n// // // // // //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// // // // // //               placeholder=\"User\"\n// // // // // //               className=\"form-control mb-2\"\n// // // // // //             />\n// // // // // //             <input\n// // // // // //               type=\"text\"\n// // // // // //               value={newReview.comment}\n// // // // // //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// // // // // //               placeholder=\"Comment\"\n// // // // // //               className=\"form-control mb-2\"\n// // // // // //             />\n// // // // // //             <input\n// // // // // //               type=\"number\"\n// // // // // //               min=\"1\"\n// // // // // //               max=\"5\"\n// // // // // //               value={newReview.rating}\n// // // // // //               onChange={(e) => setNewReview({ ...newReview, rating: Number(e.target.value) })}\n// // // // // //               placeholder=\"Rating\"\n// // // // // //               className=\"form-control mb-2\"\n// // // // // //             />\n// // // // // //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// // // // // //           </div>\n// // // // // //         )}\n// // // // // //       </div>\n// // // // // //     </footer>\n// // // // // //   );\n// // // // // // }\n\n// // // // // // export default Footer;\n\n\n// // // // // import React, { useEffect, useState } from 'react';\n\n// // // // // function Footer() {\n// // // // //   const [reviews, setReviews] = useState([]);\n// // // // //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// // // // //   const [editReview, setEditReview] = useState(null);\n\n// // // // //   // Fetch reviews from the backend\n// // // // //   const fetchReviews = async () => {\n// // // // //     try {\n// // // // //       const response = await fetch('http://localhost:5000/api');\n// // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // //       const data = await response.json();\n// // // // //       setReviews(data);\n// // // // //     } catch (error) {\n// // // // //       console.error('Error fetching reviews:', error);\n// // // // //     }\n// // // // //   };\n\n// // // // //   useEffect(() => {\n// // // // //     fetchReviews();\n// // // // //   }, []);\n\n// // // // //   // Create a new review\n// // // // //   const handleCreate = async () => {\n// // // // //     if (!newReview.user || !newReview.comment || newReview.rating < 1 || newReview.rating > 5) {\n// // // // //       alert('Please fill out all fields correctly.');\n// // // // //       return;\n// // // // //     }\n// // // // //     try {\n// // // // //       const response = await fetch('http://localhost:5000/api', {\n// // // // //         method: 'POST',\n// // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // //         body: JSON.stringify(newReview),\n// // // // //       });\n// // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // //       const data = await response.json();\n// // // // //       setReviews([...reviews, data]);\n// // // // //       setNewReview({ user: '', comment: '', rating: 1 });\n// // // // //     } catch (error) {\n// // // // //       console.error('Error creating review:', error);\n// // // // //     }\n// // // // //   };\n\n// // // // //   // Update an existing review\n// // // // //   const handleUpdate = async () => {\n// // // // //     if (!editReview || !editReview.user || !editReview.comment || editReview.rating < 1 || editReview.rating > 5) {\n// // // // //       alert('Please fill out all fields correctly.');\n// // // // //       return;\n// // // // //     }\n// // // // //     try {\n// // // // //       const response = await fetch(`http://localhost:5000/api/${editReview._id}`, {\n// // // // //         method: 'PUT',\n// // // // //         headers: { 'Content-Type': 'application/json' },\n// // // // //         body: JSON.stringify(editReview),\n// // // // //       });\n// // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // //       const data = await response.json();\n// // // // //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// // // // //       setEditReview(null);\n// // // // //     } catch (error) {\n// // // // //       console.error('Error updating review:', error);\n// // // // //     }\n// // // // //   };\n\n// // // // //   // Delete a review\n// // // // //   const handleDelete = async (id) => {\n// // // // //     try {\n// // // // //       const response = await fetch(`http://localhost:5000/api/${id}`, { method: 'DELETE' });\n// // // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // //       setReviews(reviews.filter(review => review._id !== id));\n// // // // //     } catch (error) {\n// // // // //       console.error('Error deleting review:', error);\n// // // // //     }\n// // // // //   };\n\n// // // // //   return (\n// // // // //     <footer className=\"bg-dark text-light py-3\">\n// // // // //       <div className=\"container\">\n// // // // //         <h4>User Reviews</h4>\n// // // // //         <ul className=\"list-unstyled\">\n// // // // //           {reviews.map(review => (\n// // // // //             <li key={review._id} className=\"mb-2\">\n// // // // //               <div>\n// // // // //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// // // // //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// // // // //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// // // // //               </div>\n// // // // //             </li>\n// // // // //           ))}\n// // // // //         </ul>\n// // // // //         {editReview ? (\n// // // // //           <div>\n// // // // //             <h5>Edit Review</h5>\n// // // // //             <input\n// // // // //               type=\"text\"\n// // // // //               value={editReview.user}\n// // // // //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// // // // //               placeholder=\"User\"\n// // // // //               className=\"form-control mb-2\"\n// // // // //             />\n// // // // //             <input\n// // // // //               type=\"text\"\n// // // // //               value={editReview.comment}\n// // // // //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// // // // //               placeholder=\"Comment\"\n// // // // //               className=\"form-control mb-2\"\n// // // // //             />\n// // // // //             <input\n// // // // //               type=\"number\"\n// // // // //               min=\"1\"\n// // // // //               max=\"5\"\n// // // // //               value={editReview.rating}\n// // // // //               onChange={(e) => setEditReview({ ...editReview, rating: Number(e.target.value) })}\n// // // // //               placeholder=\"Rating\"\n// // // // //               className=\"form-control mb-2\"\n// // // // //             />\n// // // // //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// // // // //           </div>\n// // // // //         ) : (\n// // // // //           <div>\n// // // // //             <h5>Add Review</h5>\n// // // // //             <input\n// // // // //               type=\"text\"\n// // // // //               value={newReview.user}\n// // // // //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// // // // //               placeholder=\"User\"\n// // // // //               className=\"form-control mb-2\"\n// // // // //             />\n// // // // //             <input\n// // // // //               type=\"text\"\n// // // // //               value={newReview.comment}\n// // // // //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// // // // //               placeholder=\"Comment\"\n// // // // //               className=\"form-control mb-2\"\n// // // // //             />\n// // // // //             <input\n// // // // //               type=\"number\"\n// // // // //               min=\"1\"\n// // // // //               max=\"5\"\n// // // // //               value={newReview.rating}\n// // // // //               onChange={(e) => setNewReview({ ...newReview, rating: Number(e.target.value) })}\n// // // // //               placeholder=\"Rating\"\n// // // // //               className=\"form-control mb-2\"\n// // // // //             />\n// // // // //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// // // // //           </div>\n// // // // //         )}\n// // // // //       </div>\n// // // // //     </footer>\n// // // // //   );\n// // // // // }\n\n// // // // // export default Footer;\n\n\n// // // // import React, { useEffect, useState } from 'react';\n\n// // // // function Footer() {\n// // // //   const [reviews, setReviews] = useState([]);\n// // // //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// // // //   const [editReview, setEditReview] = useState(null);\n\n// // // //   // Fetch reviews from the backend\n// // // //   const fetchReviews = async () => {\n// // // //     try {\n// // // //       const response = await fetch('http://localhost:5000/api');\n// // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // //       const data = await response.json();\n// // // //       console.log('Fetched reviews:', data); // Debugging\n// // // //       setReviews(data);\n// // // //     } catch (error) {\n// // // //       console.error('Error fetching reviews:', error);\n// // // //     }\n// // // //   };\n\n// // // //   useEffect(() => {\n// // // //     fetchReviews();\n// // // //   }, []);\n\n// // // //   // Create a new review\n// // // //   const handleCreate = async () => {\n// // // //     if (!newReview.user || !newReview.comment || newReview.rating < 1 || newReview.rating > 5) {\n// // // //       alert('Please fill out all fields correctly.');\n// // // //       return;\n// // // //     }\n// // // //     try {\n// // // //       const response = await fetch('http://localhost:5000/api', {\n// // // //         method: 'POST',\n// // // //         headers: { 'Content-Type': 'application/json' },\n// // // //         body: JSON.stringify(newReview),\n// // // //       });\n// // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // //       const data = await response.json();\n// // // //       console.log('Review added:', data); // Debugging\n// // // //       setReviews([...reviews, data]);\n// // // //       setNewReview({ user: '', comment: '', rating: 1 });\n// // // //     } catch (error) {\n// // // //       console.error('Error creating review:', error);\n// // // //     }\n// // // //   };\n\n// // // //   // Update an existing review\n// // // //   const handleUpdate = async () => {\n// // // //     if (!editReview || !editReview.user || !editReview.comment || editReview.rating < 1 || editReview.rating > 5) {\n// // // //       alert('Please fill out all fields correctly.');\n// // // //       return;\n// // // //     }\n// // // //     try {\n// // // //       const response = await fetch(`http://localhost:5000/api/${editReview._id}`, {\n// // // //         method: 'PUT',\n// // // //         headers: { 'Content-Type': 'application/json' },\n// // // //         body: JSON.stringify(editReview),\n// // // //       });\n// // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // //       const data = await response.json();\n// // // //       console.log('Review updated:', data); // Debugging\n// // // //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// // // //       setEditReview(null);\n// // // //     } catch (error) {\n// // // //       console.error('Error updating review:', error);\n// // // //     }\n// // // //   };\n\n// // // //   // Delete a review\n// // // //   const handleDelete = async (id) => {\n// // // //     try {\n// // // //       const response = await fetch(`http://localhost:5000/api/${id}`, { method: 'DELETE' });\n// // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // // //       console.log('Review deleted:', id); // Debugging\n// // // //       setReviews(reviews.filter(review => review._id !== id));\n// // // //     } catch (error) {\n// // // //       console.error('Error deleting review:', error);\n// // // //     }\n// // // //   };\n\n// // // //   return (\n// // // //     <footer className=\"bg-dark text-light py-3\">\n// // // //       <div className=\"container\">\n// // // //         <h4>User Reviews</h4>\n// // // //         <ul className=\"list-unstyled\">\n// // // //           {reviews.map(review => (\n// // // //             <li key={review._id} className=\"mb-2\">\n// // // //               <div>\n// // // //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// // // //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// // // //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// // // //               </div>\n// // // //             </li>\n// // // //           ))}\n// // // //         </ul>\n// // // //         {editReview ? (\n// // // //           <div>\n// // // //             <h5>Edit Review</h5>\n// // // //             <input\n// // // //               type=\"text\"\n// // // //               value={editReview.user}\n// // // //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// // // //               placeholder=\"User\"\n// // // //               className=\"form-control mb-2\"\n// // // //             />\n// // // //             <input\n// // // //               type=\"text\"\n// // // //               value={editReview.comment}\n// // // //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// // // //               placeholder=\"Comment\"\n// // // //               className=\"form-control mb-2\"\n// // // //             />\n// // // //             <input\n// // // //               type=\"number\"\n// // // //               min=\"1\"\n// // // //               max=\"5\"\n// // // //               value={editReview.rating}\n// // // //               onChange={(e) => setEditReview({ ...editReview, rating: Number(e.target.value) })}\n// // // //               placeholder=\"Rating\"\n// // // //               className=\"form-control mb-2\"\n// // // //             />\n// // // //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// // // //           </div>\n// // // //         ) : (\n// // // //           <div>\n// // // //             <h5>Add Review</h5>\n// // // //             <input\n// // // //               type=\"text\"\n// // // //               value={newReview.user}\n// // // //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// // // //               placeholder=\"User\"\n// // // //               className=\"form-control mb-2\"\n// // // //             />\n// // // //             <input\n// // // //               type=\"text\"\n// // // //               value={newReview.comment}\n// // // //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// // // //               placeholder=\"Comment\"\n// // // //               className=\"form-control mb-2\"\n// // // //             />\n// // // //             <input\n// // // //               type=\"number\"\n// // // //               min=\"1\"\n// // // //               max=\"5\"\n// // // //               value={newReview.rating}\n// // // //               onChange={(e) => setNewReview({ ...newReview, rating: Number(e.target.value) })}\n// // // //               placeholder=\"Rating\"\n// // // //               className=\"form-control mb-2\"\n// // // //             />\n// // // //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// // // //           </div>\n// // // //         )}\n// // // //       </div>\n// // // //     </footer>\n// // // //   );\n// // // // }\n\n// // // // export default Footer;\n\n\n\n// // // import React, { useEffect, useState } from 'react';\n\n// // // function Footer() {\n// // //   const [reviews, setReviews] = useState([]);\n// // //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// // //   const [editReview, setEditReview] = useState(null);\n\n// // //   // Fetch reviews from the backend\n// // //   const fetchReviews = async () => {\n// // //     try {\n// // //       const response = await fetch('http://localhost:5000/api');\n// // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // //       const data = await response.json();\n// // //       setReviews(data);\n// // //     } catch (error) {\n// // //       console.error('Error fetching reviews:', error);\n// // //     }\n// // //   };\n\n// // //   useEffect(() => {\n// // //     fetchReviews();\n// // //   }, []);\n\n// // //   // Create a new review\n// // //   const handleCreate = async () => {\n// // //     if (!newReview.user || !newReview.comment || newReview.rating < 1 || newReview.rating > 5) {\n// // //       alert('Please fill out all fields correctly.');\n// // //       return;\n// // //     }\n// // //     try {\n// // //       const response = await fetch('http://localhost:5000/api', {\n// // //         method: 'POST',\n// // //         headers: { 'Content-Type': 'application/json' },\n// // //         body: JSON.stringify(newReview),\n// // //       });\n// // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // //       const data = await response.json();\n// // //       setReviews([...reviews, data]);\n// // //       setNewReview({ user: '', comment: '', rating: 1 });\n// // //     } catch (error) {\n// // //       console.error('Error creating review:', error);\n// // //     }\n// // //   };\n\n// // //   // Update an existing review\n// // //   const handleUpdate = async () => {\n// // //     if (!editReview || !editReview.user || !editReview.comment || editReview.rating < 1 || editReview.rating > 5) {\n// // //       alert('Please fill out all fields correctly.');\n// // //       return;\n// // //     }\n// // //     try {\n// // //       const response = await fetch(`http://localhost:5000/api/${editReview._id}`, {\n// // //         method: 'PUT',\n// // //         headers: { 'Content-Type': 'application/json' },\n// // //         body: JSON.stringify(editReview),\n// // //       });\n// // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // //       const data = await response.json();\n// // //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// // //       setEditReview(null);\n// // //     } catch (error) {\n// // //       console.error('Error updating review:', error);\n// // //     }\n// // //   };\n\n// // //   // Delete a review\n// // //   const handleDelete = async (id) => {\n// // //     try {\n// // //       const response = await fetch(`http://localhost:5000/api/${id}`, { method: 'DELETE' });\n// // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// // //       setReviews(reviews.filter(review => review._id !== id));\n// // //     } catch (error) {\n// // //       console.error('Error deleting review:', error);\n// // //     }\n// // //   };\n\n// // //   return (\n// // //     <footer className=\"bg-dark text-light py-3\">\n// // //       <div className=\"container\">\n// // //         <h4>User Reviews</h4>\n// // //         <ul className=\"list-unstyled\">\n// // //           {reviews.map(review => (\n// // //             <li key={review._id} className=\"mb-2\">\n// // //               <div>\n// // //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// // //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// // //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// // //               </div>\n// // //             </li>\n// // //           ))}\n// // //         </ul>\n// // //         {editReview ? (\n// // //           <div>\n// // //             <h5>Edit Review</h5>\n// // //             <input\n// // //               type=\"text\"\n// // //               value={editReview.user}\n// // //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// // //               placeholder=\"User\"\n// // //               className=\"form-control mb-2\"\n// // //             />\n// // //             <input\n// // //               type=\"text\"\n// // //               value={editReview.comment}\n// // //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// // //               placeholder=\"Comment\"\n// // //               className=\"form-control mb-2\"\n// // //             />\n// // //             <input\n// // //               type=\"number\"\n// // //               min=\"1\"\n// // //               max=\"5\"\n// // //               value={editReview.rating}\n// // //               onChange={(e) => setEditReview({ ...editReview, rating: Number(e.target.value) })}\n// // //               placeholder=\"Rating\"\n// // //               className=\"form-control mb-2\"\n// // //             />\n// // //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// // //           </div>\n// // //         ) : (\n// // //           <div>\n// // //             <h5>Add Review</h5>\n// // //             <input\n// // //               type=\"text\"\n// // //               value={newReview.user}\n// // //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// // //               placeholder=\"User\"\n// // //               className=\"form-control mb-2\"\n// // //             />\n// // //             <input\n// // //               type=\"text\"\n// // //               value={newReview.comment}\n// // //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// // //               placeholder=\"Comment\"\n// // //               className=\"form-control mb-2\"\n// // //             />\n// // //             <input\n// // //               type=\"number\"\n// // //               min=\"1\"\n// // //               max=\"5\"\n// // //               value={newReview.rating}\n// // //               onChange={(e) => setNewReview({ ...newReview, rating: Number(e.target.value) })}\n// // //               placeholder=\"Rating\"\n// // //               className=\"form-control mb-2\"\n// // //             />\n// // //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// // //           </div>\n// // //         )}\n// // //       </div>\n// // //     </footer>\n// // //   );\n// // // }\n\n// // // export default Footer;\n// // import React, { useEffect, useState } from 'react';\n\n// // function Footer() {\n// //   const [reviews, setReviews] = useState([]);\n// //   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n// //   const [editReview, setEditReview] = useState(null);\n\n// //   // Fetch reviews from the backend\n// //   const fetchReviews = async () => {\n// //     try {\n// //       const response = await fetch('http://localhost:5000/api/reviews');\n// //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// //       const data = await response.json();\n// //       setReviews(data);\n// //     } catch (error) {\n// //       console.error('Error fetching reviews:', error);\n// //     }\n// //   };\n\n// //   useEffect(() => {\n// //     fetchReviews();\n// //   }, []);\n\n// //   // Create a new review\n// //   const handleCreate = async () => {\n// //     if (!newReview.user || !newReview.comment || newReview.rating < 1 || newReview.rating > 5) {\n// //       alert('Please fill out all fields correctly.');\n// //       return;\n// //     }\n// //     try {\n// //       const response = await fetch('http://localhost:5000/api/reviews', {\n// //         method: 'POST',\n// //         headers: { 'Content-Type': 'application/json' },\n// //         body: JSON.stringify(newReview),\n// //       });\n// //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// //       const data = await response.json();\n// //       setReviews([...reviews, data]);\n// //       setNewReview({ user: '', comment: '', rating: 1 });\n// //     } catch (error) {\n// //       console.error('Error creating review:', error);\n// //     }\n// //   };\n\n// //   // Update an existing review\n// //   const handleUpdate = async () => {\n// //     if (!editReview || !editReview.user || !editReview.comment || editReview.rating < 1 || editReview.rating > 5) {\n// //       alert('Please fill out all fields correctly.');\n// //       return;\n// //     }\n// //     try {\n// //       const response = await fetch(`http://localhost:5000/api/reviews/${editReview._id}`, {\n// //         method: 'PUT',\n// //         headers: { 'Content-Type': 'application/json' },\n// //         body: JSON.stringify(editReview),\n// //       });\n// //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// //       const data = await response.json();\n// //       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n// //       setEditReview(null);\n// //     } catch (error) {\n// //       console.error('Error updating review:', error);\n// //     }\n// //   };\n\n// //   // Delete a review\n// //   const handleDelete = async (id) => {\n// //     try {\n// //       const response = await fetch(`http://localhost:5000/api/reviews/${id}`, { method: 'DELETE' });\n// //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n// //       setReviews(reviews.filter(review => review._id !== id));\n// //     } catch (error) {\n// //       console.error('Error deleting review:', error);\n// //     }\n// //   };\n\n// //   return (\n// //     <footer className=\"bg-dark text-light py-3\">\n// //       <div className=\"container\">\n// //         <h4>User Reviews</h4>\n// //         <ul className=\"list-unstyled\">\n// //           {reviews.map(review => (\n// //             <li key={review._id} className=\"mb-2\">\n// //               <div>\n// //                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n// //                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n// //                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n// //               </div>\n// //             </li>\n// //           ))}\n// //         </ul>\n// //         {editReview ? (\n// //           <div>\n// //             <h5>Edit Review</h5>\n// //             <input\n// //               type=\"text\"\n// //               value={editReview.user}\n// //               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n// //               placeholder=\"User\"\n// //               className=\"form-control mb-2\"\n// //             />\n// //             <input\n// //               type=\"text\"\n// //               value={editReview.comment}\n// //               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n// //               placeholder=\"Comment\"\n// //               className=\"form-control mb-2\"\n// //             />\n// //             <input\n// //               type=\"number\"\n// //               min=\"1\"\n// //               max=\"5\"\n// //               value={editReview.rating}\n// //               onChange={(e) => setEditReview({ ...editReview, rating: Number(e.target.value) })}\n// //               placeholder=\"Rating\"\n// //               className=\"form-control mb-2\"\n// //             />\n// //             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n// //             <button onClick={() => setEditReview(null)} className=\"btn btn-secondary ms-2\">Cancel</button>\n// //           </div>\n// //         ) : (\n// //           <div>\n// //             <h5>Add Review</h5>\n// //             <input\n// //               type=\"text\"\n// //               value={newReview.user}\n// //               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n// //               placeholder=\"User\"\n// //               className=\"form-control mb-2\"\n// //             />\n// //             <input\n// //               type=\"text\"\n// //               value={newReview.comment}\n// //               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n// //               placeholder=\"Comment\"\n// //               className=\"form-control mb-2\"\n// //             />\n// //             <input\n// //               type=\"number\"\n// //               min=\"1\"\n// //               max=\"5\"\n// //               value={newReview.rating}\n// //               onChange={(e) => setNewReview({ ...newReview, rating: Number(e.target.value) })}\n// //               placeholder=\"Rating\"\n// //               className=\"form-control mb-2\"\n// //             />\n// //             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n// //           </div>\n// //         )}\n// //       </div>\n// //     </footer>\n// //   );\n// // }\n\n// // export default Footer;\n\n// import React, { useEffect, useState } from 'react';\n\n// function Footer() {\n//   const [reviews, setReviews] = useState([]);\n//   const [newReview, setNewReview] = useState({ user: '', comment: '', rating: 1 });\n//   const [editReview, setEditReview] = useState(null);\n\n//   // Fetch reviews from the backend\n//   const fetchReviews = async () => {\n//     try {\n//       const response = await fetch('http://localhost:5000/api/reviews');\n//       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n//       const data = await response.json();\n//       setReviews(data);\n//     } catch (error) {\n//       console.error('Error fetching reviews:', error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchReviews();\n//   }, []);\n\n//   // Create a new review\n//   const handleCreate = async () => {\n//     if (!newReview.user || !newReview.comment || newReview.rating < 1 || newReview.rating > 5) {\n//       alert('Please fill out all fields correctly.');\n//       return;\n//     }\n//     try {\n//       const response = await fetch('http://localhost:5000/api/reviews', {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify(newReview),\n//       });\n//       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n//       const data = await response.json();\n//       setReviews([...reviews, data]);\n//       setNewReview({ user: '', comment: '', rating: 1 });\n//     } catch (error) {\n//       console.error('Error creating review:', error);\n//     }\n//   };\n\n//   // Update an existing review\n//   const handleUpdate = async () => {\n//     if (!editReview || !editReview.user || !editReview.comment || editReview.rating < 1 || editReview.rating > 5) {\n//       alert('Please fill out all fields correctly.');\n//       return;\n//     }\n//     try {\n//       const response = await fetch(`http://localhost:5000/api/reviews/${editReview._id}`, {\n//         method: 'PUT',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify(editReview),\n//       });\n//       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n//       const data = await response.json();\n//       setReviews(reviews.map(review => (review._id === data._id ? data : review)));\n//       setEditReview(null);\n//     } catch (error) {\n//       console.error('Error updating review:', error);\n//     }\n//   };\n\n//   // Delete a review\n//   const handleDelete = async (id) => {\n//     try {\n//       const response = await fetch(`http://localhost:5000/api/reviews/${id}`, { method: 'DELETE' });\n//       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n//       setReviews(reviews.filter(review => review._id !== id));\n//     } catch (error) {\n//       console.error('Error deleting review:', error);\n//     }\n//   };\n\n//   return (\n//     <footer className=\"bg-dark text-light py-3\">\n//       <div className=\"container\">\n//         <h4>User Reviews</h4>\n//         <ul className=\"list-unstyled\">\n//           {reviews.map(review => (\n//             <li key={review._id} className=\"mb-2\">\n//               <div>\n//                 <strong>{review.user}</strong>: {review.comment} (Rating: {review.rating})\n//                 <button onClick={() => handleDelete(review._id)} className=\"btn btn-danger btn-sm ms-2\">Delete</button>\n//                 <button onClick={() => setEditReview(review)} className=\"btn btn-primary btn-sm ms-2\">Edit</button>\n//               </div>\n//             </li>\n//           ))}\n//         </ul>\n//         {editReview ? (\n//           <div>\n//             <h5>Edit Review</h5>\n//             <input\n//               type=\"text\"\n//               value={editReview.user}\n//               onChange={(e) => setEditReview({ ...editReview, user: e.target.value })}\n//               placeholder=\"User\"\n//               className=\"form-control mb-2\"\n//             />\n//             <input\n//               type=\"text\"\n//               value={editReview.comment}\n//               onChange={(e) => setEditReview({ ...editReview, comment: e.target.value })}\n//               placeholder=\"Comment\"\n//               className=\"form-control mb-2\"\n//             />\n//             <input\n//               type=\"number\"\n//               min=\"1\"\n//               max=\"5\"\n//               value={editReview.rating}\n//               onChange={(e) => setEditReview({ ...editReview, rating: Number(e.target.value) })}\n//               placeholder=\"Rating\"\n//               className=\"form-control mb-2\"\n//             />\n//             <button onClick={handleUpdate} className=\"btn btn-warning\">Update</button>\n//             <button onClick={() => setEditReview(null)} className=\"btn btn-secondary ms-2\">Cancel</button>\n//           </div>\n//         ) : (\n//           <div>\n//             <h5>Add Review</h5>\n//             <input\n//               type=\"text\"\n//               value={newReview.user}\n//               onChange={(e) => setNewReview({ ...newReview, user: e.target.value })}\n//               placeholder=\"User\"\n//               className=\"form-control mb-2\"\n//             />\n//             <input\n//               type=\"text\"\n//               value={newReview.comment}\n//               onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}\n//               placeholder=\"Comment\"\n//               className=\"form-control mb-2\"\n//             />\n//             <input\n//               type=\"number\"\n//               min=\"1\"\n//               max=\"5\"\n//               value={newReview.rating}\n//               onChange={(e) => setNewReview({ ...newReview, rating: Number(e.target.value) })}\n//               placeholder=\"Rating\"\n//               className=\"form-control mb-2\"\n//             />\n//             <button onClick={handleCreate} className=\"btn btn-success\">Add Review</button>\n//           </div>\n//         )}\n//       </div>\n//     </footer>\n//   );\n// }\n\n// export default Footer;\n\n\nimport React, { useState, useEffect } from 'react';\n\nconst Footer = () => {\n  const [userId, setUserId] = useState('');\n  const [foodItemId, setFoodItemId] = useState('');\n  const [rating, setRating] = useState('');\n  const [review, setReview] = useState('');\n  const [reviews, setReviews] = useState([]);\n  const [editId, setEditId] = useState(null);\n\n  useEffect(() => {\n    // Fetch all reviews on component mount\n    const fetchReviews = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/reviews');\n        const data = await response.json();\n        setReviews(data);\n      } catch (error) {\n        console.error('Error fetching reviews:', error);\n      }\n    };\n    fetchReviews();\n  }, []);\n\n  const handleAddReview = async (e) => {\n    e.preventDefault();\n    try {\n      const newReview = { userId, foodItemId, rating, review };\n      const response = await fetch('http://localhost:5000/api/reviews', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(newReview),\n      });\n      if (!response.ok) throw new Error('Failed to add review');\n      const addedReview = await response.json();\n      setUserId('');\n      setFoodItemId('');\n      setRating('');\n      setReview('');\n      // Refresh reviews\n      const fetchResponse = await fetch('http://localhost:5000/api/reviews');\n      const data = await fetchResponse.json();\n      setReviews(data);\n    } catch (error) {\n      console.error('Error adding review:', error);\n    }\n  };\n\n  const handleEditReview = async (e) => {\n    e.preventDefault();\n    try {\n      const updatedReview = { userId, foodItemId, rating, review };\n      const response = await fetch(`http://localhost:5000/api/reviews/${editId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(updatedReview),\n      });\n      if (!response.ok) throw new Error('Failed to update review');\n      const updatedReviewData = await response.json();\n      setUserId('');\n      setFoodItemId('');\n      setRating('');\n      setReview('');\n      setEditId(null);\n      // Refresh reviews\n      const fetchResponse = await fetch('http://localhost:5000/api/reviews');\n      const data = await fetchResponse.json();\n      setReviews(data);\n    } catch (error) {\n      console.error('Error updating review:', error);\n    }\n  };\n\n  const handleDeleteReview = async (id) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/reviews/${id}`, {\n        method: 'DELETE',\n      });\n      if (!response.ok) throw new Error('Failed to delete review');\n      // Refresh reviews\n      const fetchResponse = await fetch('http://localhost:5000/api/reviews');\n      const data = await fetchResponse.json();\n      setReviews(data);\n    } catch (error) {\n      console.error('Error deleting review:', error);\n    }\n  };\n\n  return (\n    <footer>\n      <h2>Review Management</h2>\n      <form onSubmit={editId ? handleEditReview : handleAddReview}>\n        <div>\n          <label>User ID:</label>\n          <input\n            type=\"text\"\n            value={userId}\n            onChange={(e) => setUserId(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <label>Food Item ID:</label>\n          <input\n            type=\"text\"\n            value={foodItemId}\n            onChange={(e) => setFoodItemId(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <label>Rating:</label>\n          <input\n            type=\"number\"\n            value={rating}\n            onChange={(e) => setRating(e.target.value)}\n            min=\"1\"\n            max=\"5\"\n            required\n          />\n        </div>\n        <div>\n          <label>Review:</label>\n          <textarea\n            value={review}\n            onChange={(e) => setReview(e.target.value)}\n            required\n          ></textarea>\n        </div>\n        <button type=\"submit\">{editId ? 'Update Review' : 'Add Review'}</button>\n      </form>\n      <h3>Existing Reviews</h3>\n      <ul>\n        {reviews.map((review) => (\n          <li key={review._id}>\n            <p><strong>User ID:</strong> {review.userId}</p>\n            <p><strong>Food Item ID:</strong> {review.foodItemId}</p>\n            <p><strong>Rating:</strong> {review.rating}</p>\n            <p><strong>Review:</strong> {review.review}</p>\n            <button onClick={() => {\n              setEditId(review._id);\n              setUserId(review.userId);\n              setFoodItemId(review.foodItemId);\n              setRating(review.rating);\n              setReview(review.review);\n            }}>Edit</button>\n            <button onClick={() => handleDeleteReview(review._id)}>Delete</button>\n          </li>\n        ))}\n      </ul>\n    </footer>\n  );\n};\n\nexport default Footer;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,MAAM,GAAGA,CAAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}