{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruhan\\\\Documents\\\\gofood\\\\mernapp\\\\src\\\\components\\\\UploadFoodItem.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n\n// const UploadFoodItem = () => {\n//   const [name, setName] = useState('');\n//   const [halfPrice, setPriceHalf] = useState('');\n//   const [fullPrice, setPriceFull] = useState('');\n//   const [image, setImage] = useState(null);\n//   const [successMessage, setSuccessMessage] = useState('');\n//   const [errorMessage, setErrorMessage] = useState('');\n\n//   const handleImageChange = (e) => setImage(e.target.files[0]);\n//   const token = localStorage.getItem('authToken');\n//   // console.log(token);\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     const formData = new FormData();\n//     formData.append('name', name);\n//     formData.append('halfPrice', halfPrice);\n//     formData.append('fullPrice', fullPrice);\n//     formData.append('image', image);\n\n//     try {\n//       const response = await fetch('http://localhost:5000/api/admin/add-food-item', {\n//         method: 'POST',\n//         body: formData,\n//       });\n\n//       const data = await response.json();\n\n//       if (response.ok) {\n//         setSuccessMessage('Food item uploaded successfully!');\n//         setName('');\n//         setPriceHalf('');\n//         setPriceFull('');\n//         setImage(null);\n//         setTimeout(() => setSuccessMessage(''), 3000);\n//       } else {\n//         setErrorMessage(data.error || 'Failed to upload the food item.');\n//         setTimeout(() => setErrorMessage(''), 3000);\n//       }\n//     } catch (error) {\n//       setErrorMessage('An error occurred. Please try again.');\n//       setTimeout(() => setErrorMessage(''), 3000);\n//     }\n//   };\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <h2 className=\"text-center mb-4\">Upload Food Item</h2>\n//       <form onSubmit={handleSubmit} className=\"bg-light p-4 rounded shadow\">\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"name\" className=\"form-label\">Food Name</label>\n//           <input\n//             type=\"text\"\n//             id=\"name\"\n//             value={name}\n//             onChange={(e) => setName(e.target.value)}\n//             className=\"form-control\"\n//             placeholder=\"Enter food name\"\n//             required\n//           />\n//         </div>\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"priceHalf\" className=\"form-label\">Price (Half)</label>\n//           <input\n//             type=\"number\"\n//             id=\"halfPrice\"\n//             value={halfPrice}\n//             onChange={(e) => setPriceHalf(e.target.value)}\n//             className=\"form-control\"\n//             placeholder=\"Enter half plate price\"\n//             required\n//           />\n//         </div>\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"priceFull\" className=\"form-label\">Price (Full)</label>\n//           <input\n//             type=\"number\"\n//             id=\"fullPrice\"\n//             value={fullPrice}\n//             onChange={(e) => setPriceFull(e.target.value)}\n//             className=\"form-control\"\n//             placeholder=\"Enter full plate price\"\n//             required\n//           />\n//         </div>\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"image\" className=\"form-label\">Upload Image</label>\n//           <input\n//             type=\"file\"\n//             id=\"image\"\n//             onChange={handleImageChange}\n//             className=\"form-control\"\n//             accept=\"image/*\"\n//             required\n//           />\n//         </div>\n//         {successMessage && <p className=\"text-success\">{successMessage}</p>}\n//         {errorMessage && <p className=\"text-danger\">{errorMessage}</p>}\n//         <button type=\"submit\" className=\"btn btn-primary w-100\">Upload</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default UploadFoodItem;\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadFoodItem = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [halfPrice, setHalfPrice] = useState('');\n  const [fullPrice, setFullPrice] = useState('');\n  const [image, setImage] = useState(null);\n  const [message, setMessage] = useState('');\n  const handleImageChange = e => setImage(e.target.files[0]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('halfPrice', halfPrice);\n    formData.append('fullPrice', fullPrice);\n    formData.append('image', image);\n    try {\n      const response = await fetch('http://localhost:5000/api/admin/add-food-item', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMessage('Food item uploaded successfully!');\n        setName('');\n        setHalfPrice('');\n        setFullPrice('');\n        setImage(null);\n      } else {\n        setMessage('Error: ' + data.message);\n      }\n    } catch (error) {\n      setMessage('An error occurred.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Food Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Food Name\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Half Price\",\n          value: halfPrice,\n          onChange: e => setHalfPrice(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Full Price\",\n          value: fullPrice,\n          onChange: e => setFullPrice(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleImageChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadFoodItem, \"BSKShGeyhXTEjl/6cYCApSRIeA0=\");\n_c = UploadFoodItem;\nexport default UploadFoodItem;\nvar _c;\n$RefreshReg$(_c, \"UploadFoodItem\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadFoodItem","_s","name","setName","halfPrice","setHalfPrice","fullPrice","setFullPrice","image","setImage","message","setMessage","handleImageChange","e","target","files","handleSubmit","preventDefault","formData","FormData","append","response","fetch","method","body","data","json","ok","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/ruhan/Documents/gofood/mernapp/src/components/UploadFoodItem.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n\r\n// const UploadFoodItem = () => {\r\n//   const [name, setName] = useState('');\r\n//   const [halfPrice, setPriceHalf] = useState('');\r\n//   const [fullPrice, setPriceFull] = useState('');\r\n//   const [image, setImage] = useState(null);\r\n//   const [successMessage, setSuccessMessage] = useState('');\r\n//   const [errorMessage, setErrorMessage] = useState('');\r\n\r\n//   const handleImageChange = (e) => setImage(e.target.files[0]);\r\n//   const token = localStorage.getItem('authToken');\r\n//   // console.log(token);\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     const formData = new FormData();\r\n//     formData.append('name', name);\r\n//     formData.append('halfPrice', halfPrice);\r\n//     formData.append('fullPrice', fullPrice);\r\n//     formData.append('image', image);\r\n\r\n//     try {\r\n//       const response = await fetch('http://localhost:5000/api/admin/add-food-item', {\r\n//         method: 'POST',\r\n//         body: formData,\r\n//       });\r\n\r\n//       const data = await response.json();\r\n\r\n//       if (response.ok) {\r\n//         setSuccessMessage('Food item uploaded successfully!');\r\n//         setName('');\r\n//         setPriceHalf('');\r\n//         setPriceFull('');\r\n//         setImage(null);\r\n//         setTimeout(() => setSuccessMessage(''), 3000);\r\n//       } else {\r\n//         setErrorMessage(data.error || 'Failed to upload the food item.');\r\n//         setTimeout(() => setErrorMessage(''), 3000);\r\n//       }\r\n//     } catch (error) {\r\n//       setErrorMessage('An error occurred. Please try again.');\r\n//       setTimeout(() => setErrorMessage(''), 3000);\r\n//     }\r\n//   };\r\n  \r\n\r\n//   return (\r\n//     <div className=\"container mt-5\">\r\n//       <h2 className=\"text-center mb-4\">Upload Food Item</h2>\r\n//       <form onSubmit={handleSubmit} className=\"bg-light p-4 rounded shadow\">\r\n//         <div className=\"mb-3\">\r\n//           <label htmlFor=\"name\" className=\"form-label\">Food Name</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             id=\"name\"\r\n//             value={name}\r\n//             onChange={(e) => setName(e.target.value)}\r\n//             className=\"form-control\"\r\n//             placeholder=\"Enter food name\"\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div className=\"mb-3\">\r\n//           <label htmlFor=\"priceHalf\" className=\"form-label\">Price (Half)</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             id=\"halfPrice\"\r\n//             value={halfPrice}\r\n//             onChange={(e) => setPriceHalf(e.target.value)}\r\n//             className=\"form-control\"\r\n//             placeholder=\"Enter half plate price\"\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div className=\"mb-3\">\r\n//           <label htmlFor=\"priceFull\" className=\"form-label\">Price (Full)</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             id=\"fullPrice\"\r\n//             value={fullPrice}\r\n//             onChange={(e) => setPriceFull(e.target.value)}\r\n//             className=\"form-control\"\r\n//             placeholder=\"Enter full plate price\"\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div className=\"mb-3\">\r\n//           <label htmlFor=\"image\" className=\"form-label\">Upload Image</label>\r\n//           <input\r\n//             type=\"file\"\r\n//             id=\"image\"\r\n//             onChange={handleImageChange}\r\n//             className=\"form-control\"\r\n//             accept=\"image/*\"\r\n//             required\r\n//           />\r\n//         </div>\r\n//         {successMessage && <p className=\"text-success\">{successMessage}</p>}\r\n//         {errorMessage && <p className=\"text-danger\">{errorMessage}</p>}\r\n//         <button type=\"submit\" className=\"btn btn-primary w-100\">Upload</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UploadFoodItem;\r\n\r\nimport React, { useState } from 'react';\r\n\r\nconst UploadFoodItem = () => {\r\n  const [name, setName] = useState('');\r\n  const [halfPrice, setHalfPrice] = useState('');\r\n  const [fullPrice, setFullPrice] = useState('');\r\n  const [image, setImage] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleImageChange = (e) => setImage(e.target.files[0]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.append('name', name);\r\n    formData.append('halfPrice', halfPrice);\r\n    formData.append('fullPrice', fullPrice);\r\n    formData.append('image', image);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/admin/add-food-item', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setMessage('Food item uploaded successfully!');\r\n        setName('');\r\n        setHalfPrice('');\r\n        setFullPrice('');\r\n        setImage(null);\r\n      } else {\r\n        setMessage('Error: ' + data.message);\r\n      }\r\n    } catch (error) {\r\n      setMessage('An error occurred.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Upload Food Item</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Food Name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"Half Price\"\r\n            value={halfPrice}\r\n            onChange={(e) => setHalfPrice(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"Full Price\"\r\n            value={fullPrice}\r\n            onChange={(e) => setFullPrice(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <input type=\"file\" onChange={handleImageChange} required />\r\n        </div>\r\n        <button type=\"submit\">Upload</button>\r\n      </form>\r\n      {message && <p>{message}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadFoodItem;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}