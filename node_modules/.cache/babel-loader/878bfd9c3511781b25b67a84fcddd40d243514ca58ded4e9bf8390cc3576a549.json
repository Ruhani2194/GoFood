{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruhan\\\\Documents\\\\gofood\\\\mernapp\\\\src\\\\components\\\\UploadFoodItem.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n\n// const UploadFoodItem = () => {\n//   const [name, setName] = useState('');\n//   const [halfPrice, setPriceHalf] = useState('');\n//   const [fullPrice, setPriceFull] = useState('');\n//   const [image, setImage] = useState(null);\n//   const [successMessage, setSuccessMessage] = useState('');\n//   const [errorMessage, setErrorMessage] = useState('');\n\n//   const handleImageChange = (e) => setImage(e.target.files[0]);\n//   const token = localStorage.getItem('authToken');\n//   // console.log(token);\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     const formData = new FormData();\n//     formData.append('name', name);\n//     formData.append('halfPrice', halfPrice);\n//     formData.append('fullPrice', fullPrice);\n//     formData.append('image', image);\n\n//     try {\n//       const response = await fetch('http://localhost:5000/api/admin/add-food-item', {\n//         method: 'POST',\n//         body: formData,\n//       });\n\n//       const data = await response.json();\n\n//       if (response.ok) {\n//         setSuccessMessage('Food item uploaded successfully!');\n//         setName('');\n//         setPriceHalf('');\n//         setPriceFull('');\n//         setImage(null);\n//         setTimeout(() => setSuccessMessage(''), 3000);\n//       } else {\n//         setErrorMessage(data.error || 'Failed to upload the food item.');\n//         setTimeout(() => setErrorMessage(''), 3000);\n//       }\n//     } catch (error) {\n//       setErrorMessage('An error occurred. Please try again.');\n//       setTimeout(() => setErrorMessage(''), 3000);\n//     }\n//   };\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <h2 className=\"text-center mb-4\">Upload Food Item</h2>\n//       <form onSubmit={handleSubmit} className=\"bg-light p-4 rounded shadow\">\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"name\" className=\"form-label\">Food Name</label>\n//           <input\n//             type=\"text\"\n//             id=\"name\"\n//             value={name}\n//             onChange={(e) => setName(e.target.value)}\n//             className=\"form-control\"\n//             placeholder=\"Enter food name\"\n//             required\n//           />\n//         </div>\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"priceHalf\" className=\"form-label\">Price (Half)</label>\n//           <input\n//             type=\"number\"\n//             id=\"halfPrice\"\n//             value={halfPrice}\n//             onChange={(e) => setPriceHalf(e.target.value)}\n//             className=\"form-control\"\n//             placeholder=\"Enter half plate price\"\n//             required\n//           />\n//         </div>\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"priceFull\" className=\"form-label\">Price (Full)</label>\n//           <input\n//             type=\"number\"\n//             id=\"fullPrice\"\n//             value={fullPrice}\n//             onChange={(e) => setPriceFull(e.target.value)}\n//             className=\"form-control\"\n//             placeholder=\"Enter full plate price\"\n//             required\n//           />\n//         </div>\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"image\" className=\"form-label\">Upload Image</label>\n//           <input\n//             type=\"file\"\n//             id=\"image\"\n//             onChange={handleImageChange}\n//             className=\"form-control\"\n//             accept=\"image/*\"\n//             required\n//           />\n//         </div>\n//         {successMessage && <p className=\"text-success\">{successMessage}</p>}\n//         {errorMessage && <p className=\"text-danger\">{errorMessage}</p>}\n//         <button type=\"submit\" className=\"btn btn-primary w-100\">Upload</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default UploadFoodItem;\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadFoodItem({\n  onItemAdded\n}) {\n  _s();\n  const [name, setName] = useState('');\n  const [category, setCategory] = useState('');\n  const [image, setImage] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('category', category);\n    formData.append('image', image);\n    try {\n      const response = await fetch('http://localhost:5000/api/uploadFoodItem', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        onItemAdded(); // Notify parent component to reload food items\n        alert('Food item uploaded successfully!');\n      } else {\n        alert('Failed to upload item');\n      }\n    } catch (error) {\n      console.error('Error uploading food item:', error);\n      alert('Error uploading item');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        className: \"form-label\",\n        children: \"Food Item Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        className: \"form-control\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"category\",\n        className: \"form-label\",\n        children: \"Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"category\",\n        className: \"form-control\",\n        value: category,\n        onChange: e => setCategory(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"image\",\n        className: \"form-label\",\n        children: \"Food Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"image\",\n        className: \"form-control\",\n        onChange: e => setImage(e.target.files[0]),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      children: \"Upload Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadFoodItem, \"AzhoKMN84TXOxK7ie2u7KtOGdvI=\");\n_c = UploadFoodItem;\nvar _c;\n$RefreshReg$(_c, \"UploadFoodItem\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadFoodItem","onItemAdded","_s","name","setName","category","setCategory","image","setImage","handleSubmit","e","preventDefault","formData","FormData","append","response","fetch","method","body","ok","alert","error","console","onSubmit","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","target","required","files","_c","$RefreshReg$"],"sources":["C:/Users/ruhan/Documents/gofood/mernapp/src/components/UploadFoodItem.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n\r\n// const UploadFoodItem = () => {\r\n//   const [name, setName] = useState('');\r\n//   const [halfPrice, setPriceHalf] = useState('');\r\n//   const [fullPrice, setPriceFull] = useState('');\r\n//   const [image, setImage] = useState(null);\r\n//   const [successMessage, setSuccessMessage] = useState('');\r\n//   const [errorMessage, setErrorMessage] = useState('');\r\n\r\n//   const handleImageChange = (e) => setImage(e.target.files[0]);\r\n//   const token = localStorage.getItem('authToken');\r\n//   // console.log(token);\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     const formData = new FormData();\r\n//     formData.append('name', name);\r\n//     formData.append('halfPrice', halfPrice);\r\n//     formData.append('fullPrice', fullPrice);\r\n//     formData.append('image', image);\r\n\r\n//     try {\r\n//       const response = await fetch('http://localhost:5000/api/admin/add-food-item', {\r\n//         method: 'POST',\r\n//         body: formData,\r\n//       });\r\n\r\n//       const data = await response.json();\r\n\r\n//       if (response.ok) {\r\n//         setSuccessMessage('Food item uploaded successfully!');\r\n//         setName('');\r\n//         setPriceHalf('');\r\n//         setPriceFull('');\r\n//         setImage(null);\r\n//         setTimeout(() => setSuccessMessage(''), 3000);\r\n//       } else {\r\n//         setErrorMessage(data.error || 'Failed to upload the food item.');\r\n//         setTimeout(() => setErrorMessage(''), 3000);\r\n//       }\r\n//     } catch (error) {\r\n//       setErrorMessage('An error occurred. Please try again.');\r\n//       setTimeout(() => setErrorMessage(''), 3000);\r\n//     }\r\n//   };\r\n  \r\n\r\n//   return (\r\n//     <div className=\"container mt-5\">\r\n//       <h2 className=\"text-center mb-4\">Upload Food Item</h2>\r\n//       <form onSubmit={handleSubmit} className=\"bg-light p-4 rounded shadow\">\r\n//         <div className=\"mb-3\">\r\n//           <label htmlFor=\"name\" className=\"form-label\">Food Name</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             id=\"name\"\r\n//             value={name}\r\n//             onChange={(e) => setName(e.target.value)}\r\n//             className=\"form-control\"\r\n//             placeholder=\"Enter food name\"\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div className=\"mb-3\">\r\n//           <label htmlFor=\"priceHalf\" className=\"form-label\">Price (Half)</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             id=\"halfPrice\"\r\n//             value={halfPrice}\r\n//             onChange={(e) => setPriceHalf(e.target.value)}\r\n//             className=\"form-control\"\r\n//             placeholder=\"Enter half plate price\"\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div className=\"mb-3\">\r\n//           <label htmlFor=\"priceFull\" className=\"form-label\">Price (Full)</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             id=\"fullPrice\"\r\n//             value={fullPrice}\r\n//             onChange={(e) => setPriceFull(e.target.value)}\r\n//             className=\"form-control\"\r\n//             placeholder=\"Enter full plate price\"\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div className=\"mb-3\">\r\n//           <label htmlFor=\"image\" className=\"form-label\">Upload Image</label>\r\n//           <input\r\n//             type=\"file\"\r\n//             id=\"image\"\r\n//             onChange={handleImageChange}\r\n//             className=\"form-control\"\r\n//             accept=\"image/*\"\r\n//             required\r\n//           />\r\n//         </div>\r\n//         {successMessage && <p className=\"text-success\">{successMessage}</p>}\r\n//         {errorMessage && <p className=\"text-danger\">{errorMessage}</p>}\r\n//         <button type=\"submit\" className=\"btn btn-primary w-100\">Upload</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UploadFoodItem;\r\n\r\n\r\nimport React, { useState } from 'react';\r\n\r\nexport default function UploadFoodItem({ onItemAdded }) {\r\n  const [name, setName] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [image, setImage] = useState(null);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.append('name', name);\r\n    formData.append('category', category);\r\n    formData.append('image', image);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/uploadFoodItem', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (response.ok) {\r\n        onItemAdded(); // Notify parent component to reload food items\r\n        alert('Food item uploaded successfully!');\r\n      } else {\r\n        alert('Failed to upload item');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error uploading food item:', error);\r\n      alert('Error uploading item');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"mb-4\">\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"name\" className=\"form-label\">Food Item Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          className=\"form-control\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"category\" className=\"form-label\">Category</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"category\"\r\n          className=\"form-control\"\r\n          value={category}\r\n          onChange={(e) => setCategory(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"image\" className=\"form-label\">Food Image</label>\r\n        <input\r\n          type=\"file\"\r\n          id=\"image\"\r\n          className=\"form-control\"\r\n          onChange={(e) => setImage(e.target.files[0])}\r\n          required\r\n        />\r\n      </div>\r\n      <button type=\"submit\" className=\"btn btn-primary\">Upload Item</button>\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}