{"ast":null,"code":"// // import React, { useState, useRef, useEffect } from 'react';\n// // import { useNavigate } from 'react-router-dom';\n// // import { useDispatchCart } from '../components/ContextReducer';\n// // import { useCart } from '../components/ContextReducer';\n// // export default function Card(props) {\n// //   let dispatch=useDispatchCart();\n// //   let navigate = useNavigate();\n// //   const [qty, setQty] = useState(1);\n// //   const [size, setSize] = useState(\"\");\n// //   const priceRef = useRef();\n// //   let options = props.options;\n// //   let priceOptions = Object.keys(options);\n// //   let data=useCart()\n\n// //   const handleQty = (e) => {\n// //     setQty(e.target.value);\n// //   };\n\n// //   const handleOptions = (e) => {\n// //     setSize(e.target.value);\n// //   };\n\n// //   useEffect(() => {\n// //     setSize(priceRef.current.value);\n// //   }, []);\n\n// //   const handleAddtoCart = async() => {\n// //     await dispatch({type:\"ADD\",id:props.foodItem._id,name:props.foodItem.name,price:finalPrice,qty:qty,size:size})\n// //     console.log(data)\n// //   };\n\n// //   let finalPrice = qty * parseInt(options[size] || 0);\n\n// //   return (\n// //     <div>\n// //       <div className=\"card mt-3 bg-dark text-light\" style={{ width: \"16rem\", maxHeight: \"360px\" }}>\n// //         <img src={props.foodItem.img} className=\"card-img-top\" alt=\"...\" style={{ height: \"120px\", objectFit: \"fill\" }} />\n// //         <div className=\"card-body\">\n// //           <h5 className=\"card-title\">{props.foodItem.name}</h5>\n// //           <div className='container w-100 p-0' style={{ height: \"38px\" }}>\n// //             <select className=\"m-2 h-100 w-20 bg-success text-white rounded\" onChange={handleQty}>\n// //               {Array.from(Array(6), (e, i) => {\n// //                 return (\n// //                   <option key={i + 1} value={i + 1}>{i + 1}</option>)\n// //               })}\n// //             </select>\n// //             <select className=\"m-2 h-100 w-20 bg-success text-white rounded\" ref={priceRef} onChange={handleOptions}>\n// //               {priceOptions.map((i) => {\n// //                 return <option key={i} value={i}>{i}</option>\n// //               })}\n// //             </select>\n// //             <div className='d-inline ms-2 h-100 w-20 fs-5 text-white'>\n// //               ₹{finalPrice}/-\n// //             </div>\n// //           </div>\n\n// //           <hr className=\"bg-secondary\" />\n// //           <button className={'btn btn-success justify-center ms-2'} onClick={handleAddtoCart}>Add to Cart</button>\n// //         </div>\n// //       </div>\n// //     </div>\n// //   );\n// // } \n\n// import React, { useState, useRef, useEffect } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { useDispatchCart, useCart } from '../components/ContextReducer';\n\n// export default function Card(props) {\n//     const dispatch = useDispatchCart();\n//     const navigate = useNavigate();\n//     const [qty, setQty] = useState(1);\n//     const [size, setSize] = useState(\"\");\n//     const priceRef = useRef();\n//     const options = props.options;\n//     const priceOptions = Object.keys(options);\n//     const data = useCart(); // Get current cart data\n\n//     // Update size based on the selected option\n//     useEffect(() => {\n//         if (priceRef.current) {\n//             setSize(priceRef.current.value);\n//         }\n//     }, []);\n\n//     const handleQty = (e) => {\n//         setQty(e.target.value);\n//     };\n\n//     const handleOptions = (e) => {\n//         setSize(e.target.value);\n//     };\n\n//     const handleAddtoCart = () => {\n//         if (size) { // Ensure a size is selected\n//             const finalPrice = qty * parseInt(options[size] || 0);\n//             dispatch({\n//                 type: \"ADD\",\n//                 id: props.foodItem._id,\n//                 name: props.foodItem.name,\n//                 price: finalPrice,\n//                 qty: qty,\n//                 size: size\n//             });\n//             console.log(data); // Log current cart data after addition\n//         } else {\n//             alert(\"Please select a size.\");\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <div className=\"card mt-3 bg-dark text-light\" style={{ width: \"16rem\", maxHeight: \"360px\" }}>\n//                 <img src={props.foodItem.img} className=\"card-img-top\" alt={props.foodItem.name} style={{ height: \"120px\", objectFit: \"fill\" }} />\n//                 <div className=\"card-body\">\n//                     <h5 className=\"card-title\">{props.foodItem.name}</h5>\n//                     <div className='container w-100 p-0' style={{ height: \"38px\" }}>\n//                         <select className=\"m-2 h-100 w-20 bg-success text-white rounded\" onChange={handleQty} value={qty}>\n//                             {Array.from(Array(6), (e, i) => (\n//                                 <option key={i + 1} value={i + 1}>{i + 1}</option>\n//                             ))}\n//                         </select>\n//                         <select className=\"m-2 h-100 w-20 bg-success text-white rounded\" ref={priceRef} onChange={handleOptions}>\n//                             {priceOptions.map((option) => (\n//                                 <option key={option} value={option}>{option}</option>\n//                             ))}\n//                         </select>\n//                         <div className='d-inline ms-2 h-100 w-20 fs-5 text-white'>\n//                             ₹{qty * (parseInt(options[size] || 0))}/-\n//                         </div>\n//                     </div>\n\n//                     <hr className=\"bg-secondary\" />\n//                     <button className='btn btn-success justify-center ms-2' onClick={handleAddtoCart}>Add to Cart</button>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/ruhan/Documents/gofood/mernapp/src/screens/Cart.js"],"sourcesContent":["// // import React, { useState, useRef, useEffect } from 'react';\r\n// // import { useNavigate } from 'react-router-dom';\r\n// // import { useDispatchCart } from '../components/ContextReducer';\r\n// // import { useCart } from '../components/ContextReducer';\r\n// // export default function Card(props) {\r\n// //   let dispatch=useDispatchCart();\r\n// //   let navigate = useNavigate();\r\n// //   const [qty, setQty] = useState(1);\r\n// //   const [size, setSize] = useState(\"\");\r\n// //   const priceRef = useRef();\r\n// //   let options = props.options;\r\n// //   let priceOptions = Object.keys(options);\r\n// //   let data=useCart()\r\n\r\n// //   const handleQty = (e) => {\r\n// //     setQty(e.target.value);\r\n// //   };\r\n\r\n// //   const handleOptions = (e) => {\r\n// //     setSize(e.target.value);\r\n// //   };\r\n\r\n// //   useEffect(() => {\r\n// //     setSize(priceRef.current.value);\r\n// //   }, []);\r\n  \r\n// //   const handleAddtoCart = async() => {\r\n// //     await dispatch({type:\"ADD\",id:props.foodItem._id,name:props.foodItem.name,price:finalPrice,qty:qty,size:size})\r\n// //     console.log(data)\r\n// //   };\r\n\r\n\r\n// //   let finalPrice = qty * parseInt(options[size] || 0);\r\n\r\n// //   return (\r\n// //     <div>\r\n// //       <div className=\"card mt-3 bg-dark text-light\" style={{ width: \"16rem\", maxHeight: \"360px\" }}>\r\n// //         <img src={props.foodItem.img} className=\"card-img-top\" alt=\"...\" style={{ height: \"120px\", objectFit: \"fill\" }} />\r\n// //         <div className=\"card-body\">\r\n// //           <h5 className=\"card-title\">{props.foodItem.name}</h5>\r\n// //           <div className='container w-100 p-0' style={{ height: \"38px\" }}>\r\n// //             <select className=\"m-2 h-100 w-20 bg-success text-white rounded\" onChange={handleQty}>\r\n// //               {Array.from(Array(6), (e, i) => {\r\n// //                 return (\r\n// //                   <option key={i + 1} value={i + 1}>{i + 1}</option>)\r\n// //               })}\r\n// //             </select>\r\n// //             <select className=\"m-2 h-100 w-20 bg-success text-white rounded\" ref={priceRef} onChange={handleOptions}>\r\n// //               {priceOptions.map((i) => {\r\n// //                 return <option key={i} value={i}>{i}</option>\r\n// //               })}\r\n// //             </select>\r\n// //             <div className='d-inline ms-2 h-100 w-20 fs-5 text-white'>\r\n// //               ₹{finalPrice}/-\r\n// //             </div>\r\n// //           </div>\r\n\r\n// //           <hr className=\"bg-secondary\" />\r\n// //           <button className={'btn btn-success justify-center ms-2'} onClick={handleAddtoCart}>Add to Cart</button>\r\n// //         </div>\r\n// //       </div>\r\n// //     </div>\r\n// //   );\r\n// // } \r\n\r\n// import React, { useState, useRef, useEffect } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { useDispatchCart, useCart } from '../components/ContextReducer';\r\n\r\n// export default function Card(props) {\r\n//     const dispatch = useDispatchCart();\r\n//     const navigate = useNavigate();\r\n//     const [qty, setQty] = useState(1);\r\n//     const [size, setSize] = useState(\"\");\r\n//     const priceRef = useRef();\r\n//     const options = props.options;\r\n//     const priceOptions = Object.keys(options);\r\n//     const data = useCart(); // Get current cart data\r\n\r\n//     // Update size based on the selected option\r\n//     useEffect(() => {\r\n//         if (priceRef.current) {\r\n//             setSize(priceRef.current.value);\r\n//         }\r\n//     }, []);\r\n\r\n//     const handleQty = (e) => {\r\n//         setQty(e.target.value);\r\n//     };\r\n\r\n//     const handleOptions = (e) => {\r\n//         setSize(e.target.value);\r\n//     };\r\n\r\n//     const handleAddtoCart = () => {\r\n//         if (size) { // Ensure a size is selected\r\n//             const finalPrice = qty * parseInt(options[size] || 0);\r\n//             dispatch({\r\n//                 type: \"ADD\",\r\n//                 id: props.foodItem._id,\r\n//                 name: props.foodItem.name,\r\n//                 price: finalPrice,\r\n//                 qty: qty,\r\n//                 size: size\r\n//             });\r\n//             console.log(data); // Log current cart data after addition\r\n//         } else {\r\n//             alert(\"Please select a size.\");\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <div className=\"card mt-3 bg-dark text-light\" style={{ width: \"16rem\", maxHeight: \"360px\" }}>\r\n//                 <img src={props.foodItem.img} className=\"card-img-top\" alt={props.foodItem.name} style={{ height: \"120px\", objectFit: \"fill\" }} />\r\n//                 <div className=\"card-body\">\r\n//                     <h5 className=\"card-title\">{props.foodItem.name}</h5>\r\n//                     <div className='container w-100 p-0' style={{ height: \"38px\" }}>\r\n//                         <select className=\"m-2 h-100 w-20 bg-success text-white rounded\" onChange={handleQty} value={qty}>\r\n//                             {Array.from(Array(6), (e, i) => (\r\n//                                 <option key={i + 1} value={i + 1}>{i + 1}</option>\r\n//                             ))}\r\n//                         </select>\r\n//                         <select className=\"m-2 h-100 w-20 bg-success text-white rounded\" ref={priceRef} onChange={handleOptions}>\r\n//                             {priceOptions.map((option) => (\r\n//                                 <option key={option} value={option}>{option}</option>\r\n//                             ))}\r\n//                         </select>\r\n//                         <div className='d-inline ms-2 h-100 w-20 fs-5 text-white'>\r\n//                             ₹{qty * (parseInt(options[size] || 0))}/-\r\n//                         </div>\r\n//                     </div>\r\n\r\n//                     <hr className=\"bg-secondary\" />\r\n//                     <button className='btn btn-success justify-center ms-2' onClick={handleAddtoCart}>Add to Cart</button>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}