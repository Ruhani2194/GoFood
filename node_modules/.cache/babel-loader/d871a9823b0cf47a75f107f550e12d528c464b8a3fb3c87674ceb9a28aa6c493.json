{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruhan\\\\Documents\\\\gofood\\\\mernapp\\\\src\\\\screens\\\\Home.js\",\n  _s = $RefreshSig$();\n// // // // // import React, { useEffect, useState } from 'react';\n// // // // // import Card from '../components/Card';\n// // // // // import Carousel from '../components/Carousel';\n// // // // // import Footer from '../components/Footer';\n// // // // // import Navbar from '../components/Navbar';\n\n// // // // // export default function Home() {\n// // // // //   const [foodCat, setFoodCat] = useState([]);\n// // // // //   const [foodItems, setFoodItems] = useState([]);\n// // // // //   const [search, setSearch] = useState('');\n// // // // //   const [loading, setLoading] = useState(true);\n\n// // // // //   const loadFoodItems = async () => {\n// // // // //     setLoading(true);\n// // // // //     try {\n// // // // //       let response = await fetch(\"http://localhost:5000/api/foodData\", {\n// // // // //         method: 'POST',\n// // // // //         headers: {\n// // // // //           'Content-Type': 'application/json',\n// // // // //         },\n// // // // //       });\n\n// // // // //       if (!response.ok) {\n// // // // //         throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // //       }\n\n// // // // //       let data = await response.json();\n// // // // //       // console.log(\"API Response:\", data);\n\n// // // // //       if (Array.isArray(data) && data.length === 2) {\n// // // // //         setFoodItems(data[0] || []);\n// // // // //         setFoodCat(data[1] || []);\n// // // // //       } else {\n// // // // //         console.error(\"Unexpected response format:\", data);\n// // // // //       }\n// // // // //     } catch (error) {\n// // // // //       console.error(\"Error loading food items:\", error);\n// // // // //     } finally {\n// // // // //       setLoading(false);\n// // // // //     }\n// // // // //   };\n\n// // // // //   useEffect(() => {\n// // // // //     loadFoodItems();\n// // // // //   }, []);\n\n// // // // //   return (\n// // // // //     <div className=\"bg-dark text-light min-vh-100\">\n// // // // //       <Navbar />\n// // // // //       <Carousel onSearchChange={setSearch} />\n// // // // //       <div className='container py-4'>\n// // // // //         {loading ? (\n// // // // //           <div className=\"text-center text-light\">Loading...</div>\n// // // // //         ) : foodCat.length > 0 ? (\n// // // // //           foodCat.map((category) => (\n// // // // //             <div className='row mb-3' key={category.id}>\n// // // // //               <div className='fs-3 m-3'>\n// // // // //                 {category.CategoryName}\n// // // // //               </div>\n// // // // //               <hr id=\"hr-success\" style={{ height: \"4px\", backgroundImage: \"linear-gradient(left,rgb(0, 255, 137),rgb(0, 0, 0))\" }} />\n// // // // //               {foodItems.length > 0 ? foodItems\n// // // // //                 .filter(item => item.CategoryName === category.CategoryName && item.name.toLowerCase().includes(search.toLowerCase()))\n// // // // //                 .map(filteredItem => (\n// // // // //                   <div key={filteredItem.id} className='col-12 col-md-6 col-lg-3'>\n// // // // //                     <Card foodItem={filteredItem}  options={filteredItem.options[0]}  />\n// // // // //                   </div>\n// // // // //                 ))\n// // // // //                 : <div className=\"text-center text-light\">No Such Data</div>}\n// // // // //             </div>\n// // // // //           ))\n// // // // //         ) : (\n// // // // //           <div className=\"text-center text-light\">No Categories Available</div>\n// // // // //         )}\n// // // // //       </div>\n// // // // //       <Footer/>\n// // // // //     </div>\n\n// // // // //   );\n// // // // // }\n\n// // // // import React, { useEffect, useState } from 'react';\n// // // // import Card from '../components/Card';\n// // // // import Carousel from '../components/Carousel';\n// // // // import Footer from '../components/Footer';\n// // // // import Navbar from '../components/Navbar';\n\n// // // // export default function Home() {\n// // // //   const [foodCat, setFoodCat] = useState([]);\n// // // //   const [foodItems, setFoodItems] = useState([]);\n// // // //   const [search, setSearch] = useState('');\n// // // //   const [loading, setLoading] = useState(true);\n\n// // // //   const loadFoodItems = async () => {\n// // // //     setLoading(true);\n// // // //     try {\n// // // //       const response = await fetch(\"http://localhost:5000/api/foodData\", {\n// // // //         method: 'POST',\n// // // //         headers: { 'Content-Type': 'application/json' },\n// // // //       });\n\n// // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n\n// // // //       const data = await response.json();\n// // // //       if (Array.isArray(data) && data.length === 2) {\n// // // //         setFoodItems(data[0] || []);\n// // // //         setFoodCat(data[1] || []);\n// // // //       } else {\n// // // //         console.error(\"Unexpected response format:\", data);\n// // // //       }\n// // // //     } catch (error) {\n// // // //       console.error(\"Error loading food items:\", error);\n// // // //     } finally {\n// // // //       setLoading(false);\n// // // //     }\n// // // //   };\n\n// // // //   useEffect(() => {\n// // // //     loadFoodItems();\n// // // //   }, []);\n\n// // // //   return (\n// // // //     <div className=\"bg-dark text-light min-vh-100\">\n// // // //       <Navbar />\n// // // //       <Carousel onSearchChange={setSearch} />\n// // // //       <div className='container py-4'>\n// // // //         {loading ? (\n// // // //           <div className=\"text-center text-light\">Loading...</div>\n// // // //         ) : foodCat.length > 0 ? (\n// // // //           foodCat.map((category) => (\n// // // //             <div className='row mb-3' key={category.CategoryName}>\n// // // //               <div className='fs-3 m-3'>{category.CategoryName}</div>\n// // // //               <hr className=\"bg-light\" />\n// // // //               {foodItems.length > 0 ? foodItems\n// // // //                 .filter(item => item.name === category.CategoryName && item.name.toLowerCase().includes(search.toLowerCase()))\n// // // //                 .map(filteredItem => (\n// // // //                   <div key={filteredItem._id} className='col-12 col-md-6 col-lg-3'>\n// // // //                     <Card foodItem={filteredItem} options={{ half: filteredItem.halfPrice, full: filteredItem.fullPrice }} />\n// // // //                   </div>\n// // // //                 )) : <div className=\"text-center text-light\">No Data Available</div>}\n// // // //             </div>\n// // // //           ))\n// // // //         ) : (\n// // // //           <div className=\"text-center text-light\">No Categories Available</div>\n// // // //         )}\n// // // //       </div>\n// // // //       <Footer />\n// // // //     </div>\n// // // //   );\n// // // // }\n\n// // // import React, { useEffect, useState } from 'react';\n// // // import Card from '../components/Card';\n// // // import Carousel from '../components/Carousel';\n// // // import Footer from '../components/Footer';\n// // // import Navbar from '../components/Navbar';\n// // // import UploadFoodItem from '../components/UploadFoodItem';\n// // // export default function Home() {\n// // //   const [foodCat, setFoodCat] = useState([]);\n// // //   const [foodItems, setFoodItems] = useState([]);\n// // //   const [search, setSearch] = useState('');\n// // //   const [loading, setLoading] = useState(true);\n\n// // //   const loadFoodItems = async () => {\n// // //     setLoading(true);\n// // //     try {\n// // //       let response = await fetch(\"http://localhost:5000/api/foodData\", {\n// // //         method: 'POST',\n// // //         headers: {\n// // //           'Content-Type': 'application/json',\n// // //         },\n// // //       });\n\n// // //       if (!response.ok) {\n// // //         throw new Error(`HTTP error! Status: ${response.status}`);\n// // //       }\n\n// // //       let data = await response.json();\n// // //       // console.log(\"API Response:\", data);\n\n// // //       if (Array.isArray(data) && data.length === 2) {\n// // //         setFoodItems(data[0] || []);\n// // //         setFoodCat(data[1] || []);\n// // //       } else {\n// // //         console.error(\"Unexpected response format:\", data);\n// // //       }\n// // //     } catch (error) {\n// // //       console.error(\"Error loading food items:\", error);\n// // //     } finally {\n// // //       setLoading(false);\n// // //     }\n// // //   };\n// // //   const handleSubmit = async (e) => {\n// // //     e.preventDefault();\n\n// // //     const formData = new FormData();\n// // //     formData.append('name', name);\n// // //     formData.append('halfPrice', halfPrice);\n// // //     formData.append('fullPrice', fullPrice);\n// // //     formData.append('image', image);\n\n// // //     try {\n// // //       const response = await fetch('http://localhost:5000/api/admin/add-food-item', {\n// // //         method: 'POST',\n// // //         body: formData,\n// // //       });\n\n// // //       const data = await response.json();\n\n// // //       if (response.ok) {\n// // //         setSuccessMessage('Food item uploaded successfully!');\n// // //         setName('');\n// // //         setPriceHalf('');\n// // //         setPriceFull('');\n// // //         setImage(null);\n\n// // //         // Trigger a data reload in Home.js\n// // //         if (props.onItemAdded) {\n// // //           props.onItemAdded();\n// // //         }\n\n// // //         setTimeout(() => setSuccessMessage(''), 3000);\n// // //       } else {\n// // //         setErrorMessage(data.error || 'Failed to upload the food item.');\n// // //         setTimeout(() => setErrorMessage(''), 3000);\n// // //       }\n// // //     } catch (error) {\n// // //       setErrorMessage('An error occurred. Please try again.');\n// // //       setTimeout(() => setErrorMessage(''), 3000);\n// // //     }\n// // //   };\n\n// // //   useEffect(() => {\n// // //     loadFoodItems();\n// // //   }, []);\n\n// // //   return (\n// // //     <div className=\"bg-dark text-light min-vh-100\">\n// // //       <Navbar />\n// // //       <Carousel onSearchChange={setSearch} />\n// // //       <div className='container py-4'>\n// // //         {loading ? (\n// // //           <div className=\"text-center text-light\">Loading...</div>\n// // //         ) : foodCat.length > 0 ? (\n// // //           foodCat.map((category) => (\n// // //             <div className='row mb-3' key={category.id}>\n// // //               <div className='fs-3 m-3'>\n// // //                 {category.CategoryName}\n// // //               </div>\n// // //               <hr id=\"hr-success\" style={{ height: \"4px\", backgroundImage: \"linear-gradient(left,rgb(0, 255, 137),rgb(0, 0, 0))\" }} />\n// // //               {foodItems.length > 0 ? foodItems\n// // //                 .filter(item => item.CategoryName === category.CategoryName && item.name.toLowerCase().includes(search.toLowerCase()))\n// // //                 .map(filteredItem => (\n// // //                   <div key={filteredItem.id} className='col-12 col-md-6 col-lg-3'>\n// // //                     <Card \n// // //                       foodItem={filteredItem} \n// // //                       imageUrl={`http://localhost:5000/uploads/${filteredItem.image}`} // Ensure the image URL is correct\n// // //                       options={filteredItem.options[0]} \n// // //                     />\n// // //                   </div>\n// // //                 ))\n// // //                 : <div className=\"text-center text-light\">No Such Data</div>}\n// // //             </div>\n// // //           ))\n// // //         ) : (\n// // //           <div className=\"text-center text-light\">No Categories Available</div>\n// // //         )}\n// // //       </div>\n// // //       <div className=\"container my-5\">\n// // //         <UploadFoodItem onItemAdded={loadFoodItems} />\n// // //       </div>\n// // //       <Footer />\n// // //     </div>\n// // //   );\n// // // }\n\n// // import React, { useEffect, useState } from 'react';\n// // import Card from '../components/Card';\n// // import Carousel from '../components/Carousel';\n// // import Footer from '../components/Footer';\n// // import Navbar from '../components/Navbar';\n// // import UploadFoodItem from '../components/UploadFoodItem';\n\n// // export default function Home() {\n// //   const [foodCat, setFoodCat] = useState([]);\n// //   const [foodItems, setFoodItems] = useState([]);\n// //   const [search, setSearch] = useState('');\n// //   const [loading, setLoading] = useState(true);\n// //   const [successMessage, setSuccessMessage] = useState('');\n// //   const [errorMessage, setErrorMessage] = useState('');\n\n// //   // Fetch food items and categories from the API\n// //   const loadFoodItems = async () => {\n// //     setLoading(true);\n// //     try {\n// //       const response = await fetch('http://localhost:5000/api/foodData', {\n// //         method: 'POST',\n// //         headers: {\n// //           'Content-Type': 'application/json',\n// //         },\n// //       });\n\n// //       if (!response.ok) {\n// //         throw new Error(`HTTP error! Status: ${response.status}`);\n// //       }\n\n// //       const data = await response.json();\n\n// //       if (Array.isArray(data) && data.length === 2) {\n// //         setFoodItems(data[0] || []);\n// //         setFoodCat(data[1] || []);\n// //       } else {\n// //         console.error('Unexpected response format:', data);\n// //       }\n// //     } catch (error) {\n// //       console.error('Error loading food items:', error);\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   // Effect hook to load food items and categories on component mount\n// //   useEffect(() => {\n// //     loadFoodItems();\n// //   }, []);\n\n// //   return (\n// //     <div className=\"bg-dark text-light min-vh-100\">\n// //       <Navbar />\n// //       <Carousel onSearchChange={setSearch} />\n// //       <div className=\"container py-4\">\n// //         {loading ? (\n// //           <div className=\"text-center text-light\">Loading...</div>\n// //         ) : foodCat.length > 0 ? (\n// //           foodCat.map((category) => (\n// //             <div className=\"row mb-3\" key={category.id}>\n// //               <div className=\"fs-3 m-3\">{category.CategoryName}</div>\n// //               <hr\n// //                 id=\"hr-success\"\n// //                 style={{\n// //                   height: '4px',\n// //                   backgroundImage: 'linear-gradient(left, rgb(0, 255, 137), rgb(0, 0, 0))',\n// //                 }}\n// //               />\n// //               {foodItems.length > 0 ? (\n// //                 foodItems\n// //                   .filter(\n// //                     (item) =>\n// //                       item.CategoryName === category.CategoryName &&\n// //                       item.name.toLowerCase().includes(search.toLowerCase())\n// //                   )\n// //                   .map((filteredItem) => (\n// //                     <div key={filteredItem.id} className=\"col-12 col-md-6 col-lg-3\">\n// //                       <Card\n// //                         foodItem={filteredItem}\n// //                         imageUrl={`http://localhost:5000/uploads/${filteredItem.image}`}\n// //                         options={filteredItem.options[0]}\n// //                       />\n// //                     </div>\n// //                   ))\n// //               ) : (\n// //                 <div className=\"text-center text-light\">No Such Data</div>\n// //               )}\n// //             </div>\n// //           ))\n// //         ) : (\n// //           <div className=\"text-center text-light\">No Categories Available</div>\n// //         )}\n// //       </div>\n// //       {/* Upload Food Item Section */}\n// //       <div className=\"container my-5\">\n// //         <UploadFoodItem onItemAdded={loadFoodItems} />\n// //         {successMessage && (\n// //           <div className=\"alert alert-success mt-3\" role=\"alert\">\n// //             {successMessage}\n// //           </div>\n// //         )}\n// //         {errorMessage && (\n// //           <div className=\"alert alert-danger mt-3\" role=\"alert\">\n// //             {errorMessage}\n// //           </div>\n// //         )}\n// //       </div>\n// //       <Footer />\n// //     </div>\n// //   );\n// // }\n\n// import React, { useEffect, useState } from 'react';\n// import Card from '../components/Card';\n// import Carousel from '../components/Carousel';\n// import Footer from '../components/Footer';\n// import Navbar from '../components/Navbar';\n\n// export default function Home() {\n//   const [foodCat, setFoodCat] = useState([]); // Food Categories\n//   const [foodItems, setFoodItems] = useState([]); // Food Items\n//   const [search, setSearch] = useState(''); // Search term\n//   const [loading, setLoading] = useState(true); // Loading state\n//   const [errorMessage, setErrorMessage] = useState(''); // Error message state\n\n//   // Fetch food items and categories from the API\n//   const loadFoodItems = async () => {\n//     setLoading(true);\n//     setErrorMessage('');\n//     try {\n//       const response = await fetch('http://localhost:5000/api/foodData', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! Status: ${response.status}`);\n//       }\n\n//       const data = await response.json();\n\n//       if (Array.isArray(data) && data.length === 2) {\n//         setFoodItems(data[0] || []);\n//         setFoodCat(data[1] || []);\n//       } else {\n//         throw new Error('Unexpected response format');\n//       }\n//     } catch (error) {\n//       console.error('Error loading food items:', error);\n//       setErrorMessage('Failed to load food data. Please try again later.');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   // Effect hook to load food items and categories on component mount\n//   useEffect(() => {\n//     loadFoodItems();\n//   }, []);\n\n//   // Filtered food items based on category and search query\n//   const filteredFoodItems = foodItems.filter(\n//     (item) =>\n//       item.name.toLowerCase().includes(search.toLowerCase()) &&\n//       (foodCat.length === 0 || foodCat.includes(item.CategoryName))\n//   );\n\n//   return (\n//     <div className=\"bg-dark text-light min-vh-100\">\n//       <Navbar />\n//       <Carousel onSearchChange={setSearch} />\n//       <div className=\"container py-4\">\n//         {loading ? (\n//           <div className=\"text-center text-light\">Loading...</div>\n//         ) : errorMessage ? (\n//           <div className=\"text-center text-danger\">{errorMessage}</div>\n//         ) : foodCat.length > 0 ? (\n//           foodCat.map((category) => (\n//             <div className=\"row mb-3\" key={category}>\n//               <div className=\"fs-3 m-3\">{category}</div>\n//               <hr\n//                 id=\"hr-success\"\n//                 style={{\n//                   height: '4px',\n//                   backgroundImage: 'linear-gradient(left, rgb(0, 255, 137), rgb(0, 0, 0))',\n//                 }}\n//               />\n//               {filteredFoodItems.length > 0 ? (\n//                 filteredFoodItems\n//                   .filter((item) => item.CategoryName === category)\n//                   .map((filteredItem) => (\n//                     <div key={filteredItem._id} className=\"col-12 col-md-6 col-lg-3\">\n//                       <Card\n//                         foodItem={filteredItem}\n//                         imageUrl={`http://localhost:5000/uploads/${filteredItem.image}`}\n//                         options={filteredItem.options ? filteredItem.options[0] : {}}\n//                       />\n//                     </div>\n//                   ))\n//               ) : (\n//                 <div className=\"text-center text-light\">No items available in this category.</div>\n//               )}\n//             </div>\n//           ))\n//         ) : (\n//           <div className=\"text-center text-light\">No Categories Available</div>\n//         )}\n//       </div>\n//       <Footer />\n//     </div>\n//   );\n// }\n\nimport React, { useEffect, useState } from 'react';\nimport Card from '../components/Card';\nimport Carousel from '../components/Carousel';\nimport Footer from '../components/Footer';\nimport Navbar from '../components/Navbar';\nimport FoodList from '../components/FoodList'; // Import FoodList\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [foodCat, setFoodCat] = useState([]);\n  const [foodItems, setFoodItems] = useState([]);\n  const [search, setSearch] = useState('');\n  const [loading, setLoading] = useState(true);\n  const loadFoodItems = async () => {\n    setLoading(true);\n    try {\n      let response = await fetch(\"http://localhost:5000/api/foodData\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      let data = await response.json();\n      console.log(\"API Response:\", data);\n      if (Array.isArray(data) && data.length === 2) {\n        setFoodItems(data[0] || []);\n        setFoodCat(data[1] || []);\n      } else {\n        console.error(\"Unexpected response format:\", data);\n      }\n    } catch (error) {\n      console.error(\"Error loading food items:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    loadFoodItems();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-dark text-light min-vh-100\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Carousel, {\n      onSearchChange: setSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container py-4\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-light\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 11\n      }, this) : foodCat.length > 0 ? foodCat.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fs-3 m-3\",\n          children: category.CategoryName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          id: \"hr-success\",\n          style: {\n            height: \"4px\",\n            backgroundImage: \"linear-gradient(left,rgb(0, 255, 137),rgb(0, 0, 0))\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FoodList, {\n          foodItems: foodItems.filter(item => item.CategoryName === category.CategoryName) // Pass filtered food items based on category\n          ,\n          search: search // Pass the search term to filter food items\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 15\n        }, this)]\n      }, category.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-light\",\n        children: \"No Categories Available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 545,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"HGR8Mv9iKsoXkUuT/oXR6q12Rbc=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","Card","Carousel","Footer","Navbar","FoodList","jsxDEV","_jsxDEV","Home","_s","foodCat","setFoodCat","foodItems","setFoodItems","search","setSearch","loading","setLoading","loadFoodItems","response","fetch","method","headers","ok","Error","status","data","json","console","log","Array","isArray","length","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearchChange","map","category","CategoryName","id","style","height","backgroundImage","filter","item","_c","$RefreshReg$"],"sources":["C:/Users/ruhan/Documents/gofood/mernapp/src/screens/Home.js"],"sourcesContent":["// // // // // import React, { useEffect, useState } from 'react';\n// // // // // import Card from '../components/Card';\n// // // // // import Carousel from '../components/Carousel';\n// // // // // import Footer from '../components/Footer';\n// // // // // import Navbar from '../components/Navbar';\n\n// // // // // export default function Home() {\n// // // // //   const [foodCat, setFoodCat] = useState([]);\n// // // // //   const [foodItems, setFoodItems] = useState([]);\n// // // // //   const [search, setSearch] = useState('');\n// // // // //   const [loading, setLoading] = useState(true);\n\n// // // // //   const loadFoodItems = async () => {\n// // // // //     setLoading(true);\n// // // // //     try {\n// // // // //       let response = await fetch(\"http://localhost:5000/api/foodData\", {\n// // // // //         method: 'POST',\n// // // // //         headers: {\n// // // // //           'Content-Type': 'application/json',\n// // // // //         },\n// // // // //       });\n\n// // // // //       if (!response.ok) {\n// // // // //         throw new Error(`HTTP error! Status: ${response.status}`);\n// // // // //       }\n\n// // // // //       let data = await response.json();\n// // // // //       // console.log(\"API Response:\", data);\n\n// // // // //       if (Array.isArray(data) && data.length === 2) {\n// // // // //         setFoodItems(data[0] || []);\n// // // // //         setFoodCat(data[1] || []);\n// // // // //       } else {\n// // // // //         console.error(\"Unexpected response format:\", data);\n// // // // //       }\n// // // // //     } catch (error) {\n// // // // //       console.error(\"Error loading food items:\", error);\n// // // // //     } finally {\n// // // // //       setLoading(false);\n// // // // //     }\n// // // // //   };\n\n// // // // //   useEffect(() => {\n// // // // //     loadFoodItems();\n// // // // //   }, []);\n\n// // // // //   return (\n// // // // //     <div className=\"bg-dark text-light min-vh-100\">\n// // // // //       <Navbar />\n// // // // //       <Carousel onSearchChange={setSearch} />\n// // // // //       <div className='container py-4'>\n// // // // //         {loading ? (\n// // // // //           <div className=\"text-center text-light\">Loading...</div>\n// // // // //         ) : foodCat.length > 0 ? (\n// // // // //           foodCat.map((category) => (\n// // // // //             <div className='row mb-3' key={category.id}>\n// // // // //               <div className='fs-3 m-3'>\n// // // // //                 {category.CategoryName}\n// // // // //               </div>\n// // // // //               <hr id=\"hr-success\" style={{ height: \"4px\", backgroundImage: \"linear-gradient(left,rgb(0, 255, 137),rgb(0, 0, 0))\" }} />\n// // // // //               {foodItems.length > 0 ? foodItems\n// // // // //                 .filter(item => item.CategoryName === category.CategoryName && item.name.toLowerCase().includes(search.toLowerCase()))\n// // // // //                 .map(filteredItem => (\n// // // // //                   <div key={filteredItem.id} className='col-12 col-md-6 col-lg-3'>\n// // // // //                     <Card foodItem={filteredItem}  options={filteredItem.options[0]}  />\n// // // // //                   </div>\n// // // // //                 ))\n// // // // //                 : <div className=\"text-center text-light\">No Such Data</div>}\n// // // // //             </div>\n// // // // //           ))\n// // // // //         ) : (\n// // // // //           <div className=\"text-center text-light\">No Categories Available</div>\n// // // // //         )}\n// // // // //       </div>\n// // // // //       <Footer/>\n// // // // //     </div>\n    \n// // // // //   );\n// // // // // }\n\n\n\n// // // // import React, { useEffect, useState } from 'react';\n// // // // import Card from '../components/Card';\n// // // // import Carousel from '../components/Carousel';\n// // // // import Footer from '../components/Footer';\n// // // // import Navbar from '../components/Navbar';\n\n// // // // export default function Home() {\n// // // //   const [foodCat, setFoodCat] = useState([]);\n// // // //   const [foodItems, setFoodItems] = useState([]);\n// // // //   const [search, setSearch] = useState('');\n// // // //   const [loading, setLoading] = useState(true);\n\n// // // //   const loadFoodItems = async () => {\n// // // //     setLoading(true);\n// // // //     try {\n// // // //       const response = await fetch(\"http://localhost:5000/api/foodData\", {\n// // // //         method: 'POST',\n// // // //         headers: { 'Content-Type': 'application/json' },\n// // // //       });\n\n// // // //       if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n      \n// // // //       const data = await response.json();\n// // // //       if (Array.isArray(data) && data.length === 2) {\n// // // //         setFoodItems(data[0] || []);\n// // // //         setFoodCat(data[1] || []);\n// // // //       } else {\n// // // //         console.error(\"Unexpected response format:\", data);\n// // // //       }\n// // // //     } catch (error) {\n// // // //       console.error(\"Error loading food items:\", error);\n// // // //     } finally {\n// // // //       setLoading(false);\n// // // //     }\n// // // //   };\n\n// // // //   useEffect(() => {\n// // // //     loadFoodItems();\n// // // //   }, []);\n\n// // // //   return (\n// // // //     <div className=\"bg-dark text-light min-vh-100\">\n// // // //       <Navbar />\n// // // //       <Carousel onSearchChange={setSearch} />\n// // // //       <div className='container py-4'>\n// // // //         {loading ? (\n// // // //           <div className=\"text-center text-light\">Loading...</div>\n// // // //         ) : foodCat.length > 0 ? (\n// // // //           foodCat.map((category) => (\n// // // //             <div className='row mb-3' key={category.CategoryName}>\n// // // //               <div className='fs-3 m-3'>{category.CategoryName}</div>\n// // // //               <hr className=\"bg-light\" />\n// // // //               {foodItems.length > 0 ? foodItems\n// // // //                 .filter(item => item.name === category.CategoryName && item.name.toLowerCase().includes(search.toLowerCase()))\n// // // //                 .map(filteredItem => (\n// // // //                   <div key={filteredItem._id} className='col-12 col-md-6 col-lg-3'>\n// // // //                     <Card foodItem={filteredItem} options={{ half: filteredItem.halfPrice, full: filteredItem.fullPrice }} />\n// // // //                   </div>\n// // // //                 )) : <div className=\"text-center text-light\">No Data Available</div>}\n// // // //             </div>\n// // // //           ))\n// // // //         ) : (\n// // // //           <div className=\"text-center text-light\">No Categories Available</div>\n// // // //         )}\n// // // //       </div>\n// // // //       <Footer />\n// // // //     </div>\n// // // //   );\n// // // // }\n\n\n\n// // // import React, { useEffect, useState } from 'react';\n// // // import Card from '../components/Card';\n// // // import Carousel from '../components/Carousel';\n// // // import Footer from '../components/Footer';\n// // // import Navbar from '../components/Navbar';\n// // // import UploadFoodItem from '../components/UploadFoodItem';\n// // // export default function Home() {\n// // //   const [foodCat, setFoodCat] = useState([]);\n// // //   const [foodItems, setFoodItems] = useState([]);\n// // //   const [search, setSearch] = useState('');\n// // //   const [loading, setLoading] = useState(true);\n\n// // //   const loadFoodItems = async () => {\n// // //     setLoading(true);\n// // //     try {\n// // //       let response = await fetch(\"http://localhost:5000/api/foodData\", {\n// // //         method: 'POST',\n// // //         headers: {\n// // //           'Content-Type': 'application/json',\n// // //         },\n// // //       });\n\n// // //       if (!response.ok) {\n// // //         throw new Error(`HTTP error! Status: ${response.status}`);\n// // //       }\n\n// // //       let data = await response.json();\n// // //       // console.log(\"API Response:\", data);\n\n// // //       if (Array.isArray(data) && data.length === 2) {\n// // //         setFoodItems(data[0] || []);\n// // //         setFoodCat(data[1] || []);\n// // //       } else {\n// // //         console.error(\"Unexpected response format:\", data);\n// // //       }\n// // //     } catch (error) {\n// // //       console.error(\"Error loading food items:\", error);\n// // //     } finally {\n// // //       setLoading(false);\n// // //     }\n// // //   };\n// // //   const handleSubmit = async (e) => {\n// // //     e.preventDefault();\n  \n// // //     const formData = new FormData();\n// // //     formData.append('name', name);\n// // //     formData.append('halfPrice', halfPrice);\n// // //     formData.append('fullPrice', fullPrice);\n// // //     formData.append('image', image);\n  \n// // //     try {\n// // //       const response = await fetch('http://localhost:5000/api/admin/add-food-item', {\n// // //         method: 'POST',\n// // //         body: formData,\n// // //       });\n  \n// // //       const data = await response.json();\n  \n// // //       if (response.ok) {\n// // //         setSuccessMessage('Food item uploaded successfully!');\n// // //         setName('');\n// // //         setPriceHalf('');\n// // //         setPriceFull('');\n// // //         setImage(null);\n  \n// // //         // Trigger a data reload in Home.js\n// // //         if (props.onItemAdded) {\n// // //           props.onItemAdded();\n// // //         }\n  \n// // //         setTimeout(() => setSuccessMessage(''), 3000);\n// // //       } else {\n// // //         setErrorMessage(data.error || 'Failed to upload the food item.');\n// // //         setTimeout(() => setErrorMessage(''), 3000);\n// // //       }\n// // //     } catch (error) {\n// // //       setErrorMessage('An error occurred. Please try again.');\n// // //       setTimeout(() => setErrorMessage(''), 3000);\n// // //     }\n// // //   };\n  \n// // //   useEffect(() => {\n// // //     loadFoodItems();\n// // //   }, []);\n\n// // //   return (\n// // //     <div className=\"bg-dark text-light min-vh-100\">\n// // //       <Navbar />\n// // //       <Carousel onSearchChange={setSearch} />\n// // //       <div className='container py-4'>\n// // //         {loading ? (\n// // //           <div className=\"text-center text-light\">Loading...</div>\n// // //         ) : foodCat.length > 0 ? (\n// // //           foodCat.map((category) => (\n// // //             <div className='row mb-3' key={category.id}>\n// // //               <div className='fs-3 m-3'>\n// // //                 {category.CategoryName}\n// // //               </div>\n// // //               <hr id=\"hr-success\" style={{ height: \"4px\", backgroundImage: \"linear-gradient(left,rgb(0, 255, 137),rgb(0, 0, 0))\" }} />\n// // //               {foodItems.length > 0 ? foodItems\n// // //                 .filter(item => item.CategoryName === category.CategoryName && item.name.toLowerCase().includes(search.toLowerCase()))\n// // //                 .map(filteredItem => (\n// // //                   <div key={filteredItem.id} className='col-12 col-md-6 col-lg-3'>\n// // //                     <Card \n// // //                       foodItem={filteredItem} \n// // //                       imageUrl={`http://localhost:5000/uploads/${filteredItem.image}`} // Ensure the image URL is correct\n// // //                       options={filteredItem.options[0]} \n// // //                     />\n// // //                   </div>\n// // //                 ))\n// // //                 : <div className=\"text-center text-light\">No Such Data</div>}\n// // //             </div>\n// // //           ))\n// // //         ) : (\n// // //           <div className=\"text-center text-light\">No Categories Available</div>\n// // //         )}\n// // //       </div>\n// // //       <div className=\"container my-5\">\n// // //         <UploadFoodItem onItemAdded={loadFoodItems} />\n// // //       </div>\n// // //       <Footer />\n// // //     </div>\n// // //   );\n// // // }\n\n\n// // import React, { useEffect, useState } from 'react';\n// // import Card from '../components/Card';\n// // import Carousel from '../components/Carousel';\n// // import Footer from '../components/Footer';\n// // import Navbar from '../components/Navbar';\n// // import UploadFoodItem from '../components/UploadFoodItem';\n\n// // export default function Home() {\n// //   const [foodCat, setFoodCat] = useState([]);\n// //   const [foodItems, setFoodItems] = useState([]);\n// //   const [search, setSearch] = useState('');\n// //   const [loading, setLoading] = useState(true);\n// //   const [successMessage, setSuccessMessage] = useState('');\n// //   const [errorMessage, setErrorMessage] = useState('');\n\n// //   // Fetch food items and categories from the API\n// //   const loadFoodItems = async () => {\n// //     setLoading(true);\n// //     try {\n// //       const response = await fetch('http://localhost:5000/api/foodData', {\n// //         method: 'POST',\n// //         headers: {\n// //           'Content-Type': 'application/json',\n// //         },\n// //       });\n\n// //       if (!response.ok) {\n// //         throw new Error(`HTTP error! Status: ${response.status}`);\n// //       }\n\n// //       const data = await response.json();\n\n// //       if (Array.isArray(data) && data.length === 2) {\n// //         setFoodItems(data[0] || []);\n// //         setFoodCat(data[1] || []);\n// //       } else {\n// //         console.error('Unexpected response format:', data);\n// //       }\n// //     } catch (error) {\n// //       console.error('Error loading food items:', error);\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   // Effect hook to load food items and categories on component mount\n// //   useEffect(() => {\n// //     loadFoodItems();\n// //   }, []);\n\n// //   return (\n// //     <div className=\"bg-dark text-light min-vh-100\">\n// //       <Navbar />\n// //       <Carousel onSearchChange={setSearch} />\n// //       <div className=\"container py-4\">\n// //         {loading ? (\n// //           <div className=\"text-center text-light\">Loading...</div>\n// //         ) : foodCat.length > 0 ? (\n// //           foodCat.map((category) => (\n// //             <div className=\"row mb-3\" key={category.id}>\n// //               <div className=\"fs-3 m-3\">{category.CategoryName}</div>\n// //               <hr\n// //                 id=\"hr-success\"\n// //                 style={{\n// //                   height: '4px',\n// //                   backgroundImage: 'linear-gradient(left, rgb(0, 255, 137), rgb(0, 0, 0))',\n// //                 }}\n// //               />\n// //               {foodItems.length > 0 ? (\n// //                 foodItems\n// //                   .filter(\n// //                     (item) =>\n// //                       item.CategoryName === category.CategoryName &&\n// //                       item.name.toLowerCase().includes(search.toLowerCase())\n// //                   )\n// //                   .map((filteredItem) => (\n// //                     <div key={filteredItem.id} className=\"col-12 col-md-6 col-lg-3\">\n// //                       <Card\n// //                         foodItem={filteredItem}\n// //                         imageUrl={`http://localhost:5000/uploads/${filteredItem.image}`}\n// //                         options={filteredItem.options[0]}\n// //                       />\n// //                     </div>\n// //                   ))\n// //               ) : (\n// //                 <div className=\"text-center text-light\">No Such Data</div>\n// //               )}\n// //             </div>\n// //           ))\n// //         ) : (\n// //           <div className=\"text-center text-light\">No Categories Available</div>\n// //         )}\n// //       </div>\n// //       {/* Upload Food Item Section */}\n// //       <div className=\"container my-5\">\n// //         <UploadFoodItem onItemAdded={loadFoodItems} />\n// //         {successMessage && (\n// //           <div className=\"alert alert-success mt-3\" role=\"alert\">\n// //             {successMessage}\n// //           </div>\n// //         )}\n// //         {errorMessage && (\n// //           <div className=\"alert alert-danger mt-3\" role=\"alert\">\n// //             {errorMessage}\n// //           </div>\n// //         )}\n// //       </div>\n// //       <Footer />\n// //     </div>\n// //   );\n// // }\n\n\n// import React, { useEffect, useState } from 'react';\n// import Card from '../components/Card';\n// import Carousel from '../components/Carousel';\n// import Footer from '../components/Footer';\n// import Navbar from '../components/Navbar';\n\n// export default function Home() {\n//   const [foodCat, setFoodCat] = useState([]); // Food Categories\n//   const [foodItems, setFoodItems] = useState([]); // Food Items\n//   const [search, setSearch] = useState(''); // Search term\n//   const [loading, setLoading] = useState(true); // Loading state\n//   const [errorMessage, setErrorMessage] = useState(''); // Error message state\n\n//   // Fetch food items and categories from the API\n//   const loadFoodItems = async () => {\n//     setLoading(true);\n//     setErrorMessage('');\n//     try {\n//       const response = await fetch('http://localhost:5000/api/foodData', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! Status: ${response.status}`);\n//       }\n\n//       const data = await response.json();\n\n//       if (Array.isArray(data) && data.length === 2) {\n//         setFoodItems(data[0] || []);\n//         setFoodCat(data[1] || []);\n//       } else {\n//         throw new Error('Unexpected response format');\n//       }\n//     } catch (error) {\n//       console.error('Error loading food items:', error);\n//       setErrorMessage('Failed to load food data. Please try again later.');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   // Effect hook to load food items and categories on component mount\n//   useEffect(() => {\n//     loadFoodItems();\n//   }, []);\n\n//   // Filtered food items based on category and search query\n//   const filteredFoodItems = foodItems.filter(\n//     (item) =>\n//       item.name.toLowerCase().includes(search.toLowerCase()) &&\n//       (foodCat.length === 0 || foodCat.includes(item.CategoryName))\n//   );\n\n//   return (\n//     <div className=\"bg-dark text-light min-vh-100\">\n//       <Navbar />\n//       <Carousel onSearchChange={setSearch} />\n//       <div className=\"container py-4\">\n//         {loading ? (\n//           <div className=\"text-center text-light\">Loading...</div>\n//         ) : errorMessage ? (\n//           <div className=\"text-center text-danger\">{errorMessage}</div>\n//         ) : foodCat.length > 0 ? (\n//           foodCat.map((category) => (\n//             <div className=\"row mb-3\" key={category}>\n//               <div className=\"fs-3 m-3\">{category}</div>\n//               <hr\n//                 id=\"hr-success\"\n//                 style={{\n//                   height: '4px',\n//                   backgroundImage: 'linear-gradient(left, rgb(0, 255, 137), rgb(0, 0, 0))',\n//                 }}\n//               />\n//               {filteredFoodItems.length > 0 ? (\n//                 filteredFoodItems\n//                   .filter((item) => item.CategoryName === category)\n//                   .map((filteredItem) => (\n//                     <div key={filteredItem._id} className=\"col-12 col-md-6 col-lg-3\">\n//                       <Card\n//                         foodItem={filteredItem}\n//                         imageUrl={`http://localhost:5000/uploads/${filteredItem.image}`}\n//                         options={filteredItem.options ? filteredItem.options[0] : {}}\n//                       />\n//                     </div>\n//                   ))\n//               ) : (\n//                 <div className=\"text-center text-light\">No items available in this category.</div>\n//               )}\n//             </div>\n//           ))\n//         ) : (\n//           <div className=\"text-center text-light\">No Categories Available</div>\n//         )}\n//       </div>\n//       <Footer />\n//     </div>\n//   );\n// }\n\nimport React, { useEffect, useState } from 'react';\nimport Card from '../components/Card';\nimport Carousel from '../components/Carousel';\nimport Footer from '../components/Footer';\nimport Navbar from '../components/Navbar';\nimport FoodList from '../components/FoodList';  // Import FoodList\n\nexport default function Home() {\n  const [foodCat, setFoodCat] = useState([]);\n  const [foodItems, setFoodItems] = useState([]);\n  const [search, setSearch] = useState('');\n  const [loading, setLoading] = useState(true);\n\n  const loadFoodItems = async () => {\n    setLoading(true);\n    try {\n      let response = await fetch(\"http://localhost:5000/api/foodData\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n\n      let data = await response.json();\n      console.log(\"API Response:\", data);\n\n      if (Array.isArray(data) && data.length === 2) {\n        setFoodItems(data[0] || []);\n        setFoodCat(data[1] || []);\n      } else {\n        console.error(\"Unexpected response format:\", data);\n      }\n    } catch (error) {\n      console.error(\"Error loading food items:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadFoodItems();\n  }, []);\n\n  return (\n    <div className=\"bg-dark text-light min-vh-100\">\n      <Navbar />\n      <Carousel onSearchChange={setSearch} />\n      <div className=\"container py-4\">\n        {loading ? (\n          <div className=\"text-center text-light\">Loading...</div>\n        ) : foodCat.length > 0 ? (\n          foodCat.map((category) => (\n            <div className=\"row mb-3\" key={category.id}>\n              <div className=\"fs-3 m-3\">\n                {category.CategoryName}\n              </div>\n              <hr\n                id=\"hr-success\"\n                style={{\n                  height: \"4px\",\n                  backgroundImage: \"linear-gradient(left,rgb(0, 255, 137),rgb(0, 0, 0))\",\n                }}\n              />\n              <FoodList\n                foodItems={foodItems.filter(item => item.CategoryName === category.CategoryName)} // Pass filtered food items based on category\n                search={search}  // Pass the search term to filter food items\n              />\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center text-light\">No Categories Available</div>\n        )}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,MAAM,MAAM,sBAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}