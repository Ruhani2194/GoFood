{"ast":null,"code":"// // import React, { useState } from 'react';\n\n// // const UploadFoodItem = () => {\n// //   const [name, setName] = useState('');\n// //   const [priceHalf, setPriceHalf] = useState('');\n// //   const [priceFull, setPriceFull] = useState('');\n// //   const [image, setImage] = useState(null);\n// //   const [successMessage, setSuccessMessage] = useState('');\n// //   const [errorMessage, setErrorMessage] = useState('');\n\n// //   const handleImageChange = (e) => setImage(e.target.files[0]);\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n\n// //     const formData = new FormData();\n// //     formData.append('name', name);\n// //     formData.append('priceHalf', priceHalf);\n// //     formData.append('priceFull', priceFull);\n// //     formData.append('image', image);\n\n// //     try {\n// //       const response = await fetch('http://localhost:5000/api/food-items', {\n// //         method: 'POST',\n// //         body: formData,\n// //       });\n\n// //       const data = await response.json();\n\n// //       if (response.ok) {\n// //         setSuccessMessage('Food item uploaded successfully!');\n// //         setName('');\n// //         setPriceHalf('');\n// //         setPriceFull('');\n// //         setImage(null);\n// //         setTimeout(() => setSuccessMessage(''), 3000);\n// //       } else {\n// //         setErrorMessage(data.error || 'Failed to upload the food item.');\n// //         setTimeout(() => setErrorMessage(''), 3000);\n// //       }\n// //     } catch (error) {\n// //       setErrorMessage('An error occurred. Please try again.');\n// //       setTimeout(() => setErrorMessage(''), 3000);\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"container mt-5\">\n// //       <h2 className=\"text-center mb-4\">Upload Food Item</h2>\n// //       <form onSubmit={handleSubmit} className=\"bg-light p-4 rounded shadow\">\n// //         <div className=\"mb-3\">\n// //           <label htmlFor=\"name\" className=\"form-label\">Food Name</label>\n// //           <input\n// //             type=\"text\"\n// //             id=\"name\"\n// //             value={name}\n// //             onChange={(e) => setName(e.target.value)}\n// //             className=\"form-control\"\n// //             placeholder=\"Enter food name\"\n// //             required\n// //           />\n// //         </div>\n// //         <div className=\"mb-3\">\n// //           <label htmlFor=\"priceHalf\" className=\"form-label\">Price (Half)</label>\n// //           <input\n// //             type=\"number\"\n// //             id=\"priceHalf\"\n// //             value={priceHalf}\n// //             onChange={(e) => setPriceHalf(e.target.value)}\n// //             className=\"form-control\"\n// //             placeholder=\"Enter half plate price\"\n// //             required\n// //           />\n// //         </div>\n// //         <div className=\"mb-3\">\n// //           <label htmlFor=\"priceFull\" className=\"form-label\">Price (Full)</label>\n// //           <input\n// //             type=\"number\"\n// //             id=\"priceFull\"\n// //             value={priceFull}\n// //             onChange={(e) => setPriceFull(e.target.value)}\n// //             className=\"form-control\"\n// //             placeholder=\"Enter full plate price\"\n// //             required\n// //           />\n// //         </div>\n// //         <div className=\"mb-3\">\n// //           <label htmlFor=\"image\" className=\"form-label\">Upload Image</label>\n// //           <input\n// //             type=\"file\"\n// //             id=\"image\"\n// //             onChange={handleImageChange}\n// //             className=\"form-control\"\n// //             accept=\"image/*\"\n// //             required\n// //           />\n// //         </div>\n// //         {successMessage && <p className=\"text-success\">{successMessage}</p>}\n// //         {errorMessage && <p className=\"text-danger\">{errorMessage}</p>}\n// //         <button type=\"submit\" className=\"btn btn-primary w-100\">Upload</button>\n// //       </form>\n// //     </div>\n// //   );\n// // };\n\n// // export default UploadFoodItem;\n\n// import React, { useState } from 'react';\n\n// const UploadFoodItem = () => {\n//   const [name, setName] = useState('');\n//   const [priceHalf, setPriceHalf] = useState('');\n//   const [priceFull, setPriceFull] = useState('');\n//   const [image, setImage] = useState(null);\n//   const [successMessage, setSuccessMessage] = useState('');\n//   const [errorMessage, setErrorMessage] = useState('');\n//   const [loading, setLoading] = useState(false);\n\n//   // Retrieve the token from localStorage\n//   const token = localStorage.getItem('token',token);\n\n//   const handleImageChange = (e) => setImage(e.target.files[0]);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     // Check if the token exists\n//     if (!token) {\n//       setErrorMessage('You are not authorized. Please log in.');\n//       setTimeout(() => setErrorMessage(''), 3000);\n//       return;\n//     }\n\n//     // Form validation\n//     if (!name || !priceHalf || !priceFull || !image) {\n//       setErrorMessage('All fields are required.');\n//       setTimeout(() => setErrorMessage(''), 3000);\n//       return;\n//     }\n\n//     const formData = new FormData();\n//     formData.append('name', name);\n//     formData.append('priceHalf', priceHalf);\n//     formData.append('priceFull', priceFull);\n//     formData.append('image', image);\n\n//     setLoading(true);\n\n//     try {\n//       const response = await fetch('http://localhost:5000/api/food-items', {\n//         method: 'POST',\n//         headers: {\n//           'Authorization': `Bearer ${token}`, // Send token in Authorization header\n//         },\n//         body: formData,\n//       });\n\n//       const data = await response.json();\n\n//       if (response.ok) {\n//         setSuccessMessage('Food item uploaded successfully!');\n//         setName('');\n//         setPriceHalf('');\n//         setPriceFull('');\n//         setImage(null);\n//         setTimeout(() => setSuccessMessage(''), 3000);\n//       } else {\n//         setErrorMessage(data.error || 'Failed to upload the food item.');\n//         setTimeout(() => setErrorMessage(''), 3000);\n//       }\n//     } catch (error) {\n//       setErrorMessage('An error occurred. Please try again.');\n//       setTimeout(() => setErrorMessage(''), 3000);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <h2 className=\"text-center mb-4\">Upload Food Item</h2>\n//       <form onSubmit={handleSubmit} className=\"bg-light p-4 rounded shadow\">\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"name\" className=\"form-label\">Food Name</label>\n//           <input\n//             type=\"text\"\n//             id=\"name\"\n//             value={name}\n//             onChange={(e) => setName(e.target.value)}\n//             className=\"form-control\"\n//             placeholder=\"Enter food name\"\n//             required\n//           />\n//         </div>\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"priceHalf\" className=\"form-label\">Price (Half)</label>\n//           <input\n//             type=\"number\"\n//             id=\"priceHalf\"\n//             value={priceHalf}\n//             onChange={(e) => setPriceHalf(e.target.value)}\n//             className=\"form-control\"\n//             placeholder=\"Enter half plate price\"\n//             required\n//           />\n//         </div>\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"priceFull\" className=\"form-label\">Price (Full)</label>\n//           <input\n//             type=\"number\"\n//             id=\"priceFull\"\n//             value={priceFull}\n//             onChange={(e) => setPriceFull(e.target.value)}\n//             className=\"form-control\"\n//             placeholder=\"Enter full plate price\"\n//             required\n//           />\n//         </div>\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"image\" className=\"form-label\">Upload Image</label>\n//           <input\n//             type=\"file\"\n//             id=\"image\"\n//             onChange={handleImageChange}\n//             className=\"form-control\"\n//             accept=\"image/*\"\n//             required\n//           />\n//         </div>\n//         {successMessage && <p className=\"text-success\">{successMessage}</p>}\n//         {errorMessage && <p className=\"text-danger\">{errorMessage}</p>}\n//         <button type=\"submit\" className=\"btn btn-primary w-100\" disabled={loading}>\n//           {loading ? 'Uploading...' : 'Upload'}\n\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default UploadFoodItem;","map":{"version":3,"names":[],"sources":["C:/Users/ruhan/Documents/gofood/mernapp/src/components/UploadFoodItem.js"],"sourcesContent":["// // import React, { useState } from 'react';\r\n\r\n// // const UploadFoodItem = () => {\r\n// //   const [name, setName] = useState('');\r\n// //   const [priceHalf, setPriceHalf] = useState('');\r\n// //   const [priceFull, setPriceFull] = useState('');\r\n// //   const [image, setImage] = useState(null);\r\n// //   const [successMessage, setSuccessMessage] = useState('');\r\n// //   const [errorMessage, setErrorMessage] = useState('');\r\n\r\n// //   const handleImageChange = (e) => setImage(e.target.files[0]);\r\n\r\n// //   const handleSubmit = async (e) => {\r\n// //     e.preventDefault();\r\n\r\n// //     const formData = new FormData();\r\n// //     formData.append('name', name);\r\n// //     formData.append('priceHalf', priceHalf);\r\n// //     formData.append('priceFull', priceFull);\r\n// //     formData.append('image', image);\r\n\r\n// //     try {\r\n// //       const response = await fetch('http://localhost:5000/api/food-items', {\r\n// //         method: 'POST',\r\n// //         body: formData,\r\n// //       });\r\n\r\n// //       const data = await response.json();\r\n\r\n// //       if (response.ok) {\r\n// //         setSuccessMessage('Food item uploaded successfully!');\r\n// //         setName('');\r\n// //         setPriceHalf('');\r\n// //         setPriceFull('');\r\n// //         setImage(null);\r\n// //         setTimeout(() => setSuccessMessage(''), 3000);\r\n// //       } else {\r\n// //         setErrorMessage(data.error || 'Failed to upload the food item.');\r\n// //         setTimeout(() => setErrorMessage(''), 3000);\r\n// //       }\r\n// //     } catch (error) {\r\n// //       setErrorMessage('An error occurred. Please try again.');\r\n// //       setTimeout(() => setErrorMessage(''), 3000);\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"container mt-5\">\r\n// //       <h2 className=\"text-center mb-4\">Upload Food Item</h2>\r\n// //       <form onSubmit={handleSubmit} className=\"bg-light p-4 rounded shadow\">\r\n// //         <div className=\"mb-3\">\r\n// //           <label htmlFor=\"name\" className=\"form-label\">Food Name</label>\r\n// //           <input\r\n// //             type=\"text\"\r\n// //             id=\"name\"\r\n// //             value={name}\r\n// //             onChange={(e) => setName(e.target.value)}\r\n// //             className=\"form-control\"\r\n// //             placeholder=\"Enter food name\"\r\n// //             required\r\n// //           />\r\n// //         </div>\r\n// //         <div className=\"mb-3\">\r\n// //           <label htmlFor=\"priceHalf\" className=\"form-label\">Price (Half)</label>\r\n// //           <input\r\n// //             type=\"number\"\r\n// //             id=\"priceHalf\"\r\n// //             value={priceHalf}\r\n// //             onChange={(e) => setPriceHalf(e.target.value)}\r\n// //             className=\"form-control\"\r\n// //             placeholder=\"Enter half plate price\"\r\n// //             required\r\n// //           />\r\n// //         </div>\r\n// //         <div className=\"mb-3\">\r\n// //           <label htmlFor=\"priceFull\" className=\"form-label\">Price (Full)</label>\r\n// //           <input\r\n// //             type=\"number\"\r\n// //             id=\"priceFull\"\r\n// //             value={priceFull}\r\n// //             onChange={(e) => setPriceFull(e.target.value)}\r\n// //             className=\"form-control\"\r\n// //             placeholder=\"Enter full plate price\"\r\n// //             required\r\n// //           />\r\n// //         </div>\r\n// //         <div className=\"mb-3\">\r\n// //           <label htmlFor=\"image\" className=\"form-label\">Upload Image</label>\r\n// //           <input\r\n// //             type=\"file\"\r\n// //             id=\"image\"\r\n// //             onChange={handleImageChange}\r\n// //             className=\"form-control\"\r\n// //             accept=\"image/*\"\r\n// //             required\r\n// //           />\r\n// //         </div>\r\n// //         {successMessage && <p className=\"text-success\">{successMessage}</p>}\r\n// //         {errorMessage && <p className=\"text-danger\">{errorMessage}</p>}\r\n// //         <button type=\"submit\" className=\"btn btn-primary w-100\">Upload</button>\r\n// //       </form>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default UploadFoodItem;\r\n\r\n\r\n// import React, { useState } from 'react';\r\n\r\n// const UploadFoodItem = () => {\r\n//   const [name, setName] = useState('');\r\n//   const [priceHalf, setPriceHalf] = useState('');\r\n//   const [priceFull, setPriceFull] = useState('');\r\n//   const [image, setImage] = useState(null);\r\n//   const [successMessage, setSuccessMessage] = useState('');\r\n//   const [errorMessage, setErrorMessage] = useState('');\r\n//   const [loading, setLoading] = useState(false);\r\n\r\n//   // Retrieve the token from localStorage\r\n//   const token = localStorage.getItem('token',token);\r\n\r\n//   const handleImageChange = (e) => setImage(e.target.files[0]);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     // Check if the token exists\r\n//     if (!token) {\r\n//       setErrorMessage('You are not authorized. Please log in.');\r\n//       setTimeout(() => setErrorMessage(''), 3000);\r\n//       return;\r\n//     }\r\n\r\n//     // Form validation\r\n//     if (!name || !priceHalf || !priceFull || !image) {\r\n//       setErrorMessage('All fields are required.');\r\n//       setTimeout(() => setErrorMessage(''), 3000);\r\n//       return;\r\n//     }\r\n\r\n//     const formData = new FormData();\r\n//     formData.append('name', name);\r\n//     formData.append('priceHalf', priceHalf);\r\n//     formData.append('priceFull', priceFull);\r\n//     formData.append('image', image);\r\n\r\n//     setLoading(true);\r\n\r\n//     try {\r\n//       const response = await fetch('http://localhost:5000/api/food-items', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Authorization': `Bearer ${token}`, // Send token in Authorization header\r\n//         },\r\n//         body: formData,\r\n//       });\r\n\r\n//       const data = await response.json();\r\n\r\n//       if (response.ok) {\r\n//         setSuccessMessage('Food item uploaded successfully!');\r\n//         setName('');\r\n//         setPriceHalf('');\r\n//         setPriceFull('');\r\n//         setImage(null);\r\n//         setTimeout(() => setSuccessMessage(''), 3000);\r\n//       } else {\r\n//         setErrorMessage(data.error || 'Failed to upload the food item.');\r\n//         setTimeout(() => setErrorMessage(''), 3000);\r\n//       }\r\n//     } catch (error) {\r\n//       setErrorMessage('An error occurred. Please try again.');\r\n//       setTimeout(() => setErrorMessage(''), 3000);\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container mt-5\">\r\n//       <h2 className=\"text-center mb-4\">Upload Food Item</h2>\r\n//       <form onSubmit={handleSubmit} className=\"bg-light p-4 rounded shadow\">\r\n//         <div className=\"mb-3\">\r\n//           <label htmlFor=\"name\" className=\"form-label\">Food Name</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             id=\"name\"\r\n//             value={name}\r\n//             onChange={(e) => setName(e.target.value)}\r\n//             className=\"form-control\"\r\n//             placeholder=\"Enter food name\"\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div className=\"mb-3\">\r\n//           <label htmlFor=\"priceHalf\" className=\"form-label\">Price (Half)</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             id=\"priceHalf\"\r\n//             value={priceHalf}\r\n//             onChange={(e) => setPriceHalf(e.target.value)}\r\n//             className=\"form-control\"\r\n//             placeholder=\"Enter half plate price\"\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div className=\"mb-3\">\r\n//           <label htmlFor=\"priceFull\" className=\"form-label\">Price (Full)</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             id=\"priceFull\"\r\n//             value={priceFull}\r\n//             onChange={(e) => setPriceFull(e.target.value)}\r\n//             className=\"form-control\"\r\n//             placeholder=\"Enter full plate price\"\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div className=\"mb-3\">\r\n//           <label htmlFor=\"image\" className=\"form-label\">Upload Image</label>\r\n//           <input\r\n//             type=\"file\"\r\n//             id=\"image\"\r\n//             onChange={handleImageChange}\r\n//             className=\"form-control\"\r\n//             accept=\"image/*\"\r\n//             required\r\n//           />\r\n//         </div>\r\n//         {successMessage && <p className=\"text-success\">{successMessage}</p>}\r\n//         {errorMessage && <p className=\"text-danger\">{errorMessage}</p>}\r\n//         <button type=\"submit\" className=\"btn btn-primary w-100\" disabled={loading}>\r\n//           {loading ? 'Uploading...' : 'Upload'}\r\n      \r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UploadFoodItem;\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}