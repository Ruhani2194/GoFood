{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruhan\\\\Documents\\\\gofood\\\\mernapp\\\\src\\\\screens\\\\Signup.js\",\n  _s = $RefreshSig$();\n// // import React, { useState } from 'react';\n// // import { useNavigate, Link } from 'react-router-dom';\n// // import Navbar from '../components/Navbar';\n\n// // export default function Signup() {\n// //   const [credentials, setCredentials] = useState({ name: \"\", email: \"\", password: \"\", geolocation: \"\" });\n// //   let navigate = useNavigate();\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     console.log(JSON.stringify({name: credentials.name, email: credentials.email, password: credentials.password, location: credentials.geolocation}));\n// //     const response = await fetch(\"http://localhost:5000/api/createuser\", {\n// //       method: 'POST',\n// //       headers: {\n// //         'Content-Type': 'application/json'\n// //       },\n// //       body: JSON.stringify({ name: credentials.name, email: credentials.email, password: credentials.password, location: credentials.geolocation })\n// //     });\n// //     const json = await response.json();\n// //     console.log(json);\n// //     if (!json.success) {\n// //       alert(\"Enter valid Credentials\");\n// //     } else {\n// //       // Navigate to login or another page upon successful signup\n// //       navigate(\"/login\");\n// //     }\n// //   }\n\n// //   const onChange = (e) => {\n// //     setCredentials({ ...credentials, [e.target.name]: e.target.value });\n// //   }\n\n// //   return (\n// //     <div style={{ backgroundImage: 'url(\"https://images.pexels.com/photos/1565982/pexels-photo-1565982.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")', backgroundSize: 'cover', height: '100vh' }}>\n// //       <div>\n// //         <Navbar />\n// //       </div>\n\n// //       <div className='container'>\n// //         <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n// //           <div className=\"m-3\">\n// //             <label htmlFor=\"name\" className=\"form-label\">Name</label>\n// //             <input type=\"text\" className=\"form-control\" name='name' value={credentials.name} onChange={onChange} aria-describedby=\"emailHelp\" />\n// //           </div>\n// //           <div className=\"m-3\">\n// //             <label htmlFor=\"email\" className=\"form-label\">Email address</label>\n// //             <input type=\"email\" className=\"form-control\" name='email' value={credentials.email} onChange={onChange} aria-describedby=\"emailHelp\" />\n// //           </div>\n// //           <div className=\"m-3\">\n// //             <label htmlFor=\"geolocation\" className=\"form-label\">Location</label>\n// //             <input type=\"text\" className=\"form-control\" name='geolocation' value={credentials.geolocation} onChange={onChange} placeholder=\"Enter your location\" />\n// //           </div>\n// //           <div className=\"m-3\">\n// //             <label htmlFor=\"password\" className=\"form-label\">Password</label>\n// //             <input type=\"password\" className=\"form-control\" value={credentials.password} onChange={onChange} name='password' />\n// //           </div>\n// //           <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n// //           <Link to=\"/login\" className=\"m-3 mx-1 btn btn-danger\">Already a user</Link>\n// //         </form>\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n// import React, { useState } from 'react';\n// import { useNavigate, Link } from 'react-router-dom';\n// import Navbar from '../components/Navbar';\n\n// export default function Signup() {\n//   const [credentials, setCredentials] = useState({\n//     name: \"\",\n//     email: \"\",\n//     password: \"\",\n//     geolocation: \"\",\n//     role: \"user\" // Default to user\n//   });\n//   let navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const response = await fetch(\"http://localhost:5000/api/createuser\", {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify({\n//         name: credentials.name,\n//         email: credentials.email,\n//         password: credentials.password,\n//         location: credentials.geolocation,\n//         role: credentials.role // Send role with the signup data\n//       })\n//     });\n//     const json = await response.json();\n//     if (!json.success) {\n//       alert(\"Enter valid Credentials\");\n//     } else {\n//       navigate(\"/login\");\n//     }\n//   }\n\n//   const onChange = (e) => {\n//     setCredentials({ ...credentials, [e.target.name]: e.target.value });\n//   }\n\n//   return (\n//     <div style={{ backgroundImage: 'url(\"https://images.pexels.com/photos/1565982/pexels-photo-1565982.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")', backgroundSize: 'cover', height: '100vh' }}>\n//       <Navbar />\n//       <div className='container'>\n//         <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"name\" className=\"form-label\">Name</label>\n//             <input type=\"text\" className=\"form-control\" name='name' value={credentials.name} onChange={onChange} />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"email\" className=\"form-label\">Email address</label>\n//             <input type=\"email\" className=\"form-control\" name='email' value={credentials.email} onChange={onChange} />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"geolocation\" className=\"form-label\">Location</label>\n//             <input type=\"text\" className=\"form-control\" name='geolocation' value={credentials.geolocation} onChange={onChange} />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"password\" className=\"form-label\">Password</label>\n//             <input type=\"password\" className=\"form-control\" value={credentials.password} onChange={onChange} name='password' />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"role\" className=\"form-label\">Role</label>\n//             <select className=\"form-control\" name=\"role\" value={credentials.role} onChange={onChange}>\n//               <option value=\"user\">User</option>\n//               <option value=\"admin\">Admin</option>\n//             </select>\n//           </div>\n//           <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n//           <Link to=\"/login\" className=\"m-3 mx-1 btn btn-danger\">Already a user</Link>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\n// import React, { useState } from 'react';\n// import { useNavigate, Link } from 'react-router-dom';\n// import Navbar from '../components/Navbar';\n\n// export default function Signup() {\n//   const [credentials, setCredentials] = useState({\n//     name: \"\",\n//     email: \"\",\n//     password: \"\",\n//     geolocation: \"\",\n//     role: \"user\" // Default to user\n//   });\n//   let navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const response = await fetch(\"http://localhost:5000/api/createuser\", {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify(credentials),\n//     });\n\n//     const json = await response.json();\n\n//     if (json.success) {\n//       alert(\"You are successfully registered. Please log in.\");\n//       navigate(\"/login\");\n//     } else {\n//       alert(\"Error during registration. Please try again.\");\n//     }\n//   };\n\n//   const onChange = (e) => {\n//     setCredentials({ ...credentials, [e.target.name]: e.target.value });\n//   };\n\n//   return (\n//     <div>\n//       <Navbar />\n//       <div className='container'>\n//         <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"name\" className=\"form-label\">Name</label>\n//             <input\n//               type=\"text\"\n//               className=\"form-control\"\n//               name='name'\n//               value={credentials.name}\n//               onChange={onChange}\n//               required\n//             />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"email\" className=\"form-label\">Email address</label>\n//             <input\n//               type=\"email\"\n//               className=\"form-control\"\n//               name='email'\n//               value={credentials.email}\n//               onChange={onChange}\n//               required\n//             />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"password\" className=\"form-label\">Password</label>\n//             <input\n//               type=\"password\"\n//               className=\"form-control\"\n//               name='password'\n//               value={credentials.password}\n//               onChange={onChange}\n//               required\n//             />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"geolocation\" className=\"form-label\">Geolocation</label>\n//             <input\n//               type=\"text\"\n//               className=\"form-control\"\n//               name='geolocation'\n//               value={credentials.geolocation}\n//               onChange={onChange}\n//               required\n//             />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"role\" className=\"form-label\">Role</label>\n//             <select\n//               className=\"form-control\"\n//               name=\"role\"\n//               value={credentials.role}\n//               onChange={onChange}\n//             >\n//               <option value=\"user\">User</option>\n//               <option value=\"admin\">Admin</option>\n//             </select>\n//           </div>\n//           <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n//           <Link to=\"/login\" className=\"m-3 mx-1 btn btn-danger\">Already have an account</Link>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\nimport React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport Navbar from '../components/Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Signup() {\n  _s();\n  const [credentials, setCredentials] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    geolocation: \"\",\n    role: \"user\",\n    // Default to user\n    adminKey: \"\" // For admin users to provide the secret key\n  });\n  let navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // If the user is entering the admin key, set the role to 'admin'\n    if (credentials.adminKey === 'secretAdminKey') {\n      credentials.role = 'admin';\n    }\n    const response = await fetch(\"http://localhost:5000/api/createuser\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    });\n    const json = await response.json();\n    if (json.success) {\n      alert(\"You are successfully registered. Please log in.\");\n      navigate(\"/login\");\n    } else {\n      alert(json.error || \"Error during registration. Please try again.\");\n    }\n  };\n  const onChange = e => {\n    setCredentials({\n      ...credentials,\n      [e.target.name]: e.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"w-50 m-auto mt-5 border bg-dark border-success rounded\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            className: \"form-label\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"name\",\n            value: credentials.name,\n            onChange: onChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"form-label\",\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: \"form-control\",\n            name: \"email\",\n            value: credentials.email,\n            onChange: onChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: \"form-label\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"form-control\",\n            name: \"password\",\n            value: credentials.password,\n            onChange: onChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"geolocation\",\n            className: \"form-label\",\n            children: \"Geolocation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"geolocation\",\n            value: credentials.geolocation,\n            onChange: onChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"adminKey\",\n            className: \"form-label\",\n            children: \"Admin Key (Leave empty for normal users)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"adminKey\",\n            value: credentials.adminKey,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"m-3 btn btn-success\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          className: \"m-3 mx-1 btn btn-danger\",\n          children: \"Already have an account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 298,\n    columnNumber: 5\n  }, this);\n}\n_s(Signup, \"CXiVV/95zs/LjYbAvZVXa7JmyIk=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","useNavigate","Link","Navbar","jsxDEV","_jsxDEV","Signup","_s","credentials","setCredentials","name","email","password","geolocation","role","adminKey","navigate","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","json","success","alert","error","onChange","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","type","required","to","_c","$RefreshReg$"],"sources":["C:/Users/ruhan/Documents/gofood/mernapp/src/screens/Signup.js"],"sourcesContent":["// // import React, { useState } from 'react';\n// // import { useNavigate, Link } from 'react-router-dom';\n// // import Navbar from '../components/Navbar';\n\n// // export default function Signup() {\n// //   const [credentials, setCredentials] = useState({ name: \"\", email: \"\", password: \"\", geolocation: \"\" });\n// //   let navigate = useNavigate();\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     console.log(JSON.stringify({name: credentials.name, email: credentials.email, password: credentials.password, location: credentials.geolocation}));\n// //     const response = await fetch(\"http://localhost:5000/api/createuser\", {\n// //       method: 'POST',\n// //       headers: {\n// //         'Content-Type': 'application/json'\n// //       },\n// //       body: JSON.stringify({ name: credentials.name, email: credentials.email, password: credentials.password, location: credentials.geolocation })\n// //     });\n// //     const json = await response.json();\n// //     console.log(json);\n// //     if (!json.success) {\n// //       alert(\"Enter valid Credentials\");\n// //     } else {\n// //       // Navigate to login or another page upon successful signup\n// //       navigate(\"/login\");\n// //     }\n// //   }\n\n// //   const onChange = (e) => {\n// //     setCredentials({ ...credentials, [e.target.name]: e.target.value });\n// //   }\n\n// //   return (\n// //     <div style={{ backgroundImage: 'url(\"https://images.pexels.com/photos/1565982/pexels-photo-1565982.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")', backgroundSize: 'cover', height: '100vh' }}>\n// //       <div>\n// //         <Navbar />\n// //       </div>\n\n// //       <div className='container'>\n// //         <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n// //           <div className=\"m-3\">\n// //             <label htmlFor=\"name\" className=\"form-label\">Name</label>\n// //             <input type=\"text\" className=\"form-control\" name='name' value={credentials.name} onChange={onChange} aria-describedby=\"emailHelp\" />\n// //           </div>\n// //           <div className=\"m-3\">\n// //             <label htmlFor=\"email\" className=\"form-label\">Email address</label>\n// //             <input type=\"email\" className=\"form-control\" name='email' value={credentials.email} onChange={onChange} aria-describedby=\"emailHelp\" />\n// //           </div>\n// //           <div className=\"m-3\">\n// //             <label htmlFor=\"geolocation\" className=\"form-label\">Location</label>\n// //             <input type=\"text\" className=\"form-control\" name='geolocation' value={credentials.geolocation} onChange={onChange} placeholder=\"Enter your location\" />\n// //           </div>\n// //           <div className=\"m-3\">\n// //             <label htmlFor=\"password\" className=\"form-label\">Password</label>\n// //             <input type=\"password\" className=\"form-control\" value={credentials.password} onChange={onChange} name='password' />\n// //           </div>\n// //           <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n// //           <Link to=\"/login\" className=\"m-3 mx-1 btn btn-danger\">Already a user</Link>\n// //         </form>\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n\n// import React, { useState } from 'react';\n// import { useNavigate, Link } from 'react-router-dom';\n// import Navbar from '../components/Navbar';\n\n// export default function Signup() {\n//   const [credentials, setCredentials] = useState({\n//     name: \"\",\n//     email: \"\",\n//     password: \"\",\n//     geolocation: \"\",\n//     role: \"user\" // Default to user\n//   });\n//   let navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const response = await fetch(\"http://localhost:5000/api/createuser\", {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify({\n//         name: credentials.name,\n//         email: credentials.email,\n//         password: credentials.password,\n//         location: credentials.geolocation,\n//         role: credentials.role // Send role with the signup data\n//       })\n//     });\n//     const json = await response.json();\n//     if (!json.success) {\n//       alert(\"Enter valid Credentials\");\n//     } else {\n//       navigate(\"/login\");\n//     }\n//   }\n\n//   const onChange = (e) => {\n//     setCredentials({ ...credentials, [e.target.name]: e.target.value });\n//   }\n\n//   return (\n//     <div style={{ backgroundImage: 'url(\"https://images.pexels.com/photos/1565982/pexels-photo-1565982.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")', backgroundSize: 'cover', height: '100vh' }}>\n//       <Navbar />\n//       <div className='container'>\n//         <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"name\" className=\"form-label\">Name</label>\n//             <input type=\"text\" className=\"form-control\" name='name' value={credentials.name} onChange={onChange} />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"email\" className=\"form-label\">Email address</label>\n//             <input type=\"email\" className=\"form-control\" name='email' value={credentials.email} onChange={onChange} />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"geolocation\" className=\"form-label\">Location</label>\n//             <input type=\"text\" className=\"form-control\" name='geolocation' value={credentials.geolocation} onChange={onChange} />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"password\" className=\"form-label\">Password</label>\n//             <input type=\"password\" className=\"form-control\" value={credentials.password} onChange={onChange} name='password' />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"role\" className=\"form-label\">Role</label>\n//             <select className=\"form-control\" name=\"role\" value={credentials.role} onChange={onChange}>\n//               <option value=\"user\">User</option>\n//               <option value=\"admin\">Admin</option>\n//             </select>\n//           </div>\n//           <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n//           <Link to=\"/login\" className=\"m-3 mx-1 btn btn-danger\">Already a user</Link>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\n\n// import React, { useState } from 'react';\n// import { useNavigate, Link } from 'react-router-dom';\n// import Navbar from '../components/Navbar';\n\n// export default function Signup() {\n//   const [credentials, setCredentials] = useState({\n//     name: \"\",\n//     email: \"\",\n//     password: \"\",\n//     geolocation: \"\",\n//     role: \"user\" // Default to user\n//   });\n//   let navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const response = await fetch(\"http://localhost:5000/api/createuser\", {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify(credentials),\n//     });\n\n//     const json = await response.json();\n\n//     if (json.success) {\n//       alert(\"You are successfully registered. Please log in.\");\n//       navigate(\"/login\");\n//     } else {\n//       alert(\"Error during registration. Please try again.\");\n//     }\n//   };\n\n//   const onChange = (e) => {\n//     setCredentials({ ...credentials, [e.target.name]: e.target.value });\n//   };\n\n//   return (\n//     <div>\n//       <Navbar />\n//       <div className='container'>\n//         <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"name\" className=\"form-label\">Name</label>\n//             <input\n//               type=\"text\"\n//               className=\"form-control\"\n//               name='name'\n//               value={credentials.name}\n//               onChange={onChange}\n//               required\n//             />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"email\" className=\"form-label\">Email address</label>\n//             <input\n//               type=\"email\"\n//               className=\"form-control\"\n//               name='email'\n//               value={credentials.email}\n//               onChange={onChange}\n//               required\n//             />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"password\" className=\"form-label\">Password</label>\n//             <input\n//               type=\"password\"\n//               className=\"form-control\"\n//               name='password'\n//               value={credentials.password}\n//               onChange={onChange}\n//               required\n//             />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"geolocation\" className=\"form-label\">Geolocation</label>\n//             <input\n//               type=\"text\"\n//               className=\"form-control\"\n//               name='geolocation'\n//               value={credentials.geolocation}\n//               onChange={onChange}\n//               required\n//             />\n//           </div>\n//           <div className=\"m-3\">\n//             <label htmlFor=\"role\" className=\"form-label\">Role</label>\n//             <select\n//               className=\"form-control\"\n//               name=\"role\"\n//               value={credentials.role}\n//               onChange={onChange}\n//             >\n//               <option value=\"user\">User</option>\n//               <option value=\"admin\">Admin</option>\n//             </select>\n//           </div>\n//           <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n//           <Link to=\"/login\" className=\"m-3 mx-1 btn btn-danger\">Already have an account</Link>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\n\nimport React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport Navbar from '../components/Navbar';\n\nexport default function Signup() {\n  const [credentials, setCredentials] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    geolocation: \"\",\n    role: \"user\", // Default to user\n    adminKey: \"\" // For admin users to provide the secret key\n  });\n  let navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    // If the user is entering the admin key, set the role to 'admin'\n    if (credentials.adminKey === 'secretAdminKey') {\n      credentials.role = 'admin';\n    }\n\n    const response = await fetch(\"http://localhost:5000/api/createuser\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials),\n    });\n\n    const json = await response.json();\n\n    if (json.success) {\n      alert(\"You are successfully registered. Please log in.\");\n      navigate(\"/login\");\n    } else {\n      alert(json.error || \"Error during registration. Please try again.\");\n    }\n  };\n\n  const onChange = (e) => {\n    setCredentials({ ...credentials, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <div className='container'>\n        <form className='w-50 m-auto mt-5 border bg-dark border-success rounded' onSubmit={handleSubmit}>\n          <div className=\"m-3\">\n            <label htmlFor=\"name\" className=\"form-label\">Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name='name'\n              value={credentials.name}\n              onChange={onChange}\n              required\n            />\n          </div>\n          <div className=\"m-3\">\n            <label htmlFor=\"email\" className=\"form-label\">Email address</label>\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              name='email'\n              value={credentials.email}\n              onChange={onChange}\n              required\n            />\n          </div>\n          <div className=\"m-3\">\n            <label htmlFor=\"password\" className=\"form-label\">Password</label>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              name='password'\n              value={credentials.password}\n              onChange={onChange}\n              required\n            />\n          </div>\n          <div className=\"m-3\">\n            <label htmlFor=\"geolocation\" className=\"form-label\">Geolocation</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name='geolocation'\n              value={credentials.geolocation}\n              onChange={onChange}\n              required\n            />\n          </div>\n          <div className=\"m-3\">\n            <label htmlFor=\"adminKey\" className=\"form-label\">Admin Key (Leave empty for normal users)</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name='adminKey'\n              value={credentials.adminKey}\n              onChange={onChange}\n            />\n          </div>\n          <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\n          <Link to=\"/login\" className=\"m-3 mx-1 btn btn-danger\">Already have an account</Link>\n        </form>\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}