{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruhan\\\\Documents\\\\gofood\\\\mernapp\\\\src\\\\components\\\\Card.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useRef, useEffect } from 'react';\n// import { useDispatchCart, useCart } from '../components/ContextReducer';\n\n// export default function Card(props) {\n//     const dispatch = useDispatchCart();\n//     const [qty, setQty] = useState(1);\n//     const [size, setSize] = useState(\"\");\n//     const priceRef = useRef();\n//     const options = props.options || {}; \n//     const priceOptions = Object.keys(options);\n//     const data = useCart(); \n//     useEffect(() => {\n//         if (priceRef.current) {\n//             setSize(priceRef.current.value);\n//         }\n//     }, [priceRef]);\n\n//     const handleQty = (e) => {\n//         setQty(e.target.value);\n//     };\n\n//     const handleOptions = (e) => {\n//         setSize(e.target.value);\n//     };\n\n//     const handleAddtoCart = () => {\n//         if (size) { \n//             const finalPrice = qty * parseInt(options[size] || 0);\n//             dispatch({\n//                 type: \"ADD\",\n//                 id: props.foodItem._id,\n//                 name: props.foodItem.name,\n//                 price: finalPrice,\n//                 qty: qty,\n//                 size: size\n//             });\n//             // console.log(data);\n//         } else {\n//             alert(\"Please select a size.\");\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <div className=\"card mt-3 bg-dark text-light\" style={{ width: \"16rem\", maxHeight: \"360px\" }}>\n//                 <img src={props.foodItem.img} className=\"card-img-top\" alt={props.foodItem.name} style={{ height: \"120px\", objectFit: \"fill\" }} />\n//                 <div className=\"card-body\">\n//                     <h5 className=\"card-title\">{props.foodItem.name}</h5>\n//                     <div className='container w-100 p-0' style={{ height: \"38px\" }}>\n//                         <select className=\"m-2 h-100 w-20 bg-success text-white rounded\" onChange={handleQty} value={qty}>\n//                             {Array.from(Array(6), (e, i) => (\n//                                 <option key={i + 1} value={i + 1}>{i + 1}</option>\n//                             ))}\n//                         </select>\n//                         <select className=\"m-2 h-100 w-20 bg-success text-white rounded\" ref={priceRef} onChange={handleOptions}>\n//                             {priceOptions.map((option) => (\n//                                 <option key={option} value={option}>{option}</option>\n//                             ))}\n//                         </select>\n//                         <div className='d-inline ms-2 h-100 w-20 fs-5 text-white'>\n//                             â‚¹{qty * (parseInt(options[size] || 0))}/-\n//                         </div>\n//                     </div>\n\n//                     <hr className=\"bg-secondary\" />\n//                     <button className='btn btn-success justify-center ms-2' onClick={handleAddtoCart}>Add to Cart</button>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useDispatchCart } from '../components/ContextReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Card({\n  foodItem,\n  options\n}) {\n  _s();\n  const dispatch = useDispatchCart();\n  const [qty, setQty] = useState(1);\n  const [size, setSize] = useState(\"\");\n  const priceRef = useRef();\n  useEffect(() => {\n    if (priceRef.current) setSize(priceRef.current.value);\n  }, []);\n  const handleAddToCart = () => {\n    if (size) {\n      const finalPrice = qty * parseInt(options[size]);\n      dispatch({\n        type: \"ADD\",\n        id: foodItem._id,\n        name: foodItem.name,\n        price: finalPrice,\n        qty,\n        size\n      });\n    } else {\n      alert(\"Please select a size.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card mt-3 bg-dark text-light\",\n    style: {\n      width: \"16rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: `http://localhost:5000/uploads/${foodItem.image}`,\n      alt: foodItem.name,\n      className: \"card-img-top\",\n      style: {\n        height: \"120px\",\n        objectFit: \"cover\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: foodItem.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"m-2\",\n          ref: priceRef,\n          onChange: e => setSize(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"half\",\n            children: \"Half\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"full\",\n            children: \"Full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"m-2\",\n          onChange: e => setQty(e.target.value),\n          value: qty,\n          children: Array.from({\n            length: 5\n          }, (_, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: i + 1,\n            children: i + 1\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 50\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\u20B9\", qty * (options[size] || 0), \"/-\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success mt-2\",\n        onClick: handleAddToCart,\n        children: \"Add to Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(Card, \"AxKh1QnhvVpcrhopq+xWBk33ekw=\", false, function () {\n  return [useDispatchCart];\n});\n_c = Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useDispatchCart","jsxDEV","_jsxDEV","Card","foodItem","options","_s","dispatch","qty","setQty","size","setSize","priceRef","current","value","handleAddToCart","finalPrice","parseInt","type","id","_id","name","price","alert","className","style","width","children","src","image","alt","height","objectFit","fileName","_jsxFileName","lineNumber","columnNumber","ref","onChange","e","target","Array","from","length","_","i","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ruhan/Documents/gofood/mernapp/src/components/Card.js"],"sourcesContent":["// import React, { useState, useRef, useEffect } from 'react';\n// import { useDispatchCart, useCart } from '../components/ContextReducer';\n\n// export default function Card(props) {\n//     const dispatch = useDispatchCart();\n//     const [qty, setQty] = useState(1);\n//     const [size, setSize] = useState(\"\");\n//     const priceRef = useRef();\n//     const options = props.options || {}; \n//     const priceOptions = Object.keys(options);\n//     const data = useCart(); \n//     useEffect(() => {\n//         if (priceRef.current) {\n//             setSize(priceRef.current.value);\n//         }\n//     }, [priceRef]);\n\n//     const handleQty = (e) => {\n//         setQty(e.target.value);\n//     };\n\n//     const handleOptions = (e) => {\n//         setSize(e.target.value);\n//     };\n\n//     const handleAddtoCart = () => {\n//         if (size) { \n//             const finalPrice = qty * parseInt(options[size] || 0);\n//             dispatch({\n//                 type: \"ADD\",\n//                 id: props.foodItem._id,\n//                 name: props.foodItem.name,\n//                 price: finalPrice,\n//                 qty: qty,\n//                 size: size\n//             });\n//             // console.log(data);\n//         } else {\n//             alert(\"Please select a size.\");\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <div className=\"card mt-3 bg-dark text-light\" style={{ width: \"16rem\", maxHeight: \"360px\" }}>\n//                 <img src={props.foodItem.img} className=\"card-img-top\" alt={props.foodItem.name} style={{ height: \"120px\", objectFit: \"fill\" }} />\n//                 <div className=\"card-body\">\n//                     <h5 className=\"card-title\">{props.foodItem.name}</h5>\n//                     <div className='container w-100 p-0' style={{ height: \"38px\" }}>\n//                         <select className=\"m-2 h-100 w-20 bg-success text-white rounded\" onChange={handleQty} value={qty}>\n//                             {Array.from(Array(6), (e, i) => (\n//                                 <option key={i + 1} value={i + 1}>{i + 1}</option>\n//                             ))}\n//                         </select>\n//                         <select className=\"m-2 h-100 w-20 bg-success text-white rounded\" ref={priceRef} onChange={handleOptions}>\n//                             {priceOptions.map((option) => (\n//                                 <option key={option} value={option}>{option}</option>\n//                             ))}\n//                         </select>\n//                         <div className='d-inline ms-2 h-100 w-20 fs-5 text-white'>\n//                             â‚¹{qty * (parseInt(options[size] || 0))}/-\n//                         </div>\n//                     </div>\n\n//                     <hr className=\"bg-secondary\" />\n//                     <button className='btn btn-success justify-center ms-2' onClick={handleAddtoCart}>Add to Cart</button>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n\n\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useDispatchCart } from '../components/ContextReducer';\n\nexport default function Card({ foodItem, options }) {\n  const dispatch = useDispatchCart();\n  const [qty, setQty] = useState(1);\n  const [size, setSize] = useState(\"\");\n  const priceRef = useRef();\n\n  useEffect(() => {\n    if (priceRef.current) setSize(priceRef.current.value);\n  }, []);\n\n  const handleAddToCart = () => {\n    if (size) {\n      const finalPrice = qty * parseInt(options[size]);\n      dispatch({\n        type: \"ADD\",\n        id: foodItem._id,\n        name: foodItem.name,\n        price: finalPrice,\n        qty,\n        size,\n      });\n    } else {\n      alert(\"Please select a size.\");\n    }\n  };\n\n  return (\n    <div className=\"card mt-3 bg-dark text-light\" style={{ width: \"16rem\" }}>\n      <img\n        src={`http://localhost:5000/uploads/${foodItem.image}`}\n        alt={foodItem.name}\n        className=\"card-img-top\"\n        style={{ height: \"120px\", objectFit: \"cover\" }}\n      />\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{foodItem.name}</h5>\n        <div className=\"container\">\n          <select className=\"m-2\" ref={priceRef} onChange={(e) => setSize(e.target.value)}>\n            <option value=\"half\">Half</option>\n            <option value=\"full\">Full</option>\n          </select>\n          <select className=\"m-2\" onChange={(e) => setQty(e.target.value)} value={qty}>\n            {Array.from({ length: 5 }, (_, i) => <option key={i} value={i + 1}>{i + 1}</option>)}\n          </select>\n          <div>â‚¹{qty * (options[size] || 0)}/-</div>\n        </div>\n        <button className=\"btn btn-success mt-2\" onClick={handleAddToCart}>Add to Cart</button>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}